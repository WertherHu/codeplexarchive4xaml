{
  "ProjectName": "spassistant",
  "Title": "Visual Studio SharePoint Debugging Assistant",
  "Description": "This is a handy Visual Studio add-in that will save you time by automating the SharePoint (or any other server-side code running under IIS hood) debugging.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Summary</b><br />This is a handy Visual Studio add-in that will save you time by automating the SharePoint (or any other server-side code running under IIS hood) debugging.<br /><br /><b>Payment</b><br /><br />The component comes under MS-PL license. We request no license fees or donations. We prefer you pay back by <a href=\"http://twitter.com/share?text=Check out Visual Studio SharePoint Debugging Assistant&amp;url=https://spassistant.codeplex.com&amp;via=akyriako78&amp;hashtags=SharePoint,\">tweeting</a> about this tool.<br /><br />All money collected by commercials or banners is decided to be donated to charities.<br /><br /><b>What&#39;s new</b><br /><br />Any development on version 2.4 is been discontinued.<br /><br /><u>Version 3.1.1</u><br />\n<ol><li>Sandboxed code support.</li>\n<li>Bug fixes.</li>\n<li>UI improvements.</li></ol>\n<u>Version 3.0</u><br />\n<ol><li>Major UI facelift.</li>\n<li>Performance improvements.</li>\n<li>Visual Studio 2012 Light/Dark Theme support.</li>\n<li>Visual Studio 2013 Light/Dark/Blue Theme support.</li></ol>\n<img src=\"/projects/spassistant/3618300b-fee2-465f-a2a5-3cff8cf62581\" alt=\"window3-80.png\" title=\"window3-80.png\" /> <img src=\"/projects/spassistant/097ab40f-129b-42c9-9cdd-7ed8117307ec\" alt=\"window5-80.png\" title=\"window5-80.png\" /><br /><br />All icons belong to Icon8 set <a href=\"http://icons8.com\">http://icons8.com</a> from VisualPharm <a href=\"http://www.visualpharm.com\">http://www.visualpharm.com</a><br /><br /><b>About</b><br />Debugging SharePoint SOM code by attaching to the corresponding IIS process can become a tedious, frustrating and time consuming activity for every developer. It requires a 3 steps procedure that in the end might leave you with an aftertaste of uncertainty :<br />\n<ol><li>Debug Menu -&gt; Attach to Process…</li>\n<li>Select “Show processes from all users” in case you develop following a Medium/High Security Option paradigm in your SharePoint development environment (you SHOULD!!!). </li>\n<li>Select the “correct” w3wp.exe process that your web application runs under (????).</li></ol>\n<br />As you can notice in the picture we face the following inconveniences : <br /><br /><img src=\"/projects/spassistant/f4827537-5c1f-400a-ac8f-3ab3ec14087d\" alt=\"processes.PNG\" title=\"processes.PNG\" /><br />\n<ul><li>w3wp.exe has no “Title” to indicate user friendly information.</li>\n<li>w3wp.exe’s “ID” is an arbitrary integer value assigned by IIS upon creation and every time an application pool has been recycled is automatically renewed.</li></ul>\n<br />So which is your target process ?<br /><br />Workaround : Many developers just for brevity choose attaching to all available w3wp.exe processes. This is where SharePoint Assistant applies :<br /><br />Based on a pull model of interrogating directly the IIS metabase, SharePoint Assistant periodically or ad-hoc populates a list with all the active application pools of IIS and correlates them with the underlying w3wp.exe process. Within just a right-click developer is capable of recycling or attaching to any application pool of his interest utilizing directly the generic Visual Studio debugging engine and the IIS metabase.<br /><br />SharePoint Assistant was conceptualized and developed in order to bring a holistic one-stop experience for the web developer, integrated in his natural habitat : Visual Studio. So attaching to and debugging a w3wp.exe process (IIS working process) is simply not enough for a SharePoint developer. A lot of artifacts are running under certain local Windows Services (TimerJobs, Workflows SP14) or in separate new systems under the hood of a discrete processes (Workflows SP15).<br /><br />SharePoint Assistant is aggregating vital signs (pull model) from the necessary processes and visualizes them via traffic light indicators so the developer is aware at any given moment of the operational status of his box : <br />\n<ol><li>IIS : Developer can reset the application server on demand.</li>\n<li>SharePoint Timer Service : The Windows Service responsible,among others, for the execution of timer jobs and workflows (WF3 in SharePoint 2010/2013). Possible to Attach and Restart.</li>\n<li>Workflow Manager 1.x Processes : The Windows Processes that Workflow Manager 1.x is running under (WF4, SharePoint 2013). Possible only to Attach.</li></ol>\n<br /><b>Related</b><br /><br />For an even more enhanced SharePoint debugging experience, combine Visual Studio SharePoint Debugging Assistant with our other tool Visual Studio Integrated ULS Viewer : <a href=\"https://integrateduls.codeplex.com\">https://integrateduls.codeplex.com</a><br /><br /><img src=\"/projects/spassistant/6df3dab3-6800-40be-b596-048b96dfca06\" alt=\"listview.PNG\" title=\"listview.PNG\" /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "Visual Studio Addin,SharePoint,Debugging,IIS,Attach,Processes,Server-side code,WFM,OWS Timer,Timer Jobs,Application Pool,MVC,ASP.NET,debug,process,workflow,silverlight,",
  "LastEdited": "2014-09-29T09:58:34.507-07:00"
}
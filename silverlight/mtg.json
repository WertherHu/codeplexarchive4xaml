{
  "ProjectName": "mtg",
  "Title": "Magic the Gathering: On the Web",
  "Description": "This project uses C# and ASP .NET, along with Silverlight as the presentation layer to create a Magic the Gathering game engine. \n\nThe idea behind this game will be so that people can create accounts, create decks, play games, talk within the chat room during and while watching games. This system will need to go through many changes to keep up with card drops from Wizards of the Coast.\n\nSilverlight will be the presentation layer for the game, so that it has a feel that is similar to actually playing a game (drag and drop, moving cards around the table). ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">This project is an attempt to bring some type of functional Magic the Gathering experience to the web. This has already been done a hundred times over, with smart clients and other RIA enabled solutions, but I am doing it as a coding puzzle (and writing fun code is just.....fun). This will be an <b>ASP .NET 3.5 application written in C#</b>. Eventually, the front end will be Silverlight, once we get there. <br /><br />You will be able to follow my thoughts on this project @ http://ikeeter.com.<br /><br /><br />August 13 2008<br />I had started this project with the idea that I would work on it completely without any use case diagrams or any premodeling of the classes or the software as a whole. I wanted to go into it completely without any design to see if test driven development alone would allow me to define and round my structure. However, I see this is a fallacy as I have a multitude of issues currently going on and I have reached a point where I am seeing this all over the code:<br /><br />1. The single responsibility principle is getting smashed<br />2. I have inheritance, but the liskov principle doesn&#39;t stand with my abstracted classes<br />3. I have classes open for modification and open for extension, I am basically all over the place<br /><br />I am breaking many fundamental OOA&amp;D principles and I will not be able to complete this project on Test Driven Development alone, I will need to refactor heavily at this point (and then rewrite all of my tests), or take this as a learning opportunity and go at this the proper way......I choose the latter.<br /><br />So the August 5th Check in will be the last check in of the highly coupled and tightly grouped code. Everything after August 5th will a cleaner design. I will begin this by making some designs and checking in some designs, I am going to go ahead with this as a more academic project now, try to really get something polished out there.</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2008-08-13T07:11:15.463-07:00"
}
{
  "ProjectName": "winrttriggers",
  "Title": "WinRTTriggers",
  "Description": "WinRT Triggers - much like Expression triggers in Silverlight, but for WinRT Windows Store applications, ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p>WinRTTriggers allows you to declaratively configure interactions between your UI, view modal and end user. This is very similar in nature to the triggers and behaviors functionality that Expression provided for Silverlight applications &ndash; these, unfortunately,\r\n are not currently available for WinRT applications.</p>\r\n<p>For example, the following XAML invokes a command when the Tapped event is fired on a Canvas control:</p>\r\n<pre class=\"html\">&lt;Canvas x:Name=&quot;picture&quot; Height=&quot;50&quot; Width=&quot;50&quot;&gt;\r\n    &lt;Triggers:Interactions.Triggers&gt;\r\n        &lt;Triggers:EventTrigger EventName=&quot;Tapped&quot;&gt;\r\n            &lt;Triggers:InvokeCommandAction Command=&quot;{Binding ToggleStateCommand}&quot; /&gt;\r\n        &lt;/Triggers:EventTrigger&gt;\r\n    &lt;/Triggers:Interactions.Triggers&gt;\r\n\r\n    &lt;Ellipse x:Name=&quot;ellipse&quot; Width=&quot;50&quot; Height=&quot;50&quot; \r\n        Stroke=&quot;#FF575B06&quot; Fill=&quot;#FFFBFFAD&quot; StrokeThickness=&quot;2&quot; /&gt;\r\n&lt;/Canvas&gt;</pre>\r\n<p>You could easily swap out the invoke command action for something more interesting, like starting a storyboard:</p>\r\n<pre class=\"html\">&lt;Canvas x:Name=&quot;picture&quot; Height=&quot;50&quot; Width=&quot;50&quot;&gt;\r\n    &lt;Triggers:Interactions.Triggers&gt;\r\n        &lt;Triggers:EventTrigger EventName=&quot;Tapped&quot;&gt;\r\n<span style=\"background-color:#ffff00\">            &lt;Triggers:ControlStoryboardAction Action=&quot;Start&quot; \r\n                             Storyboard=&quot;{StaticResource FlashImage}&quot; /&gt;</span>\r\n        &lt;/Triggers:EventTrigger&gt;\r\n    &lt;/Triggers:Interactions.Triggers&gt;\r\n\r\n    &lt;Ellipse x:Name=&quot;ellipse&quot; Width=&quot;50&quot; Height=&quot;50&quot; \r\n        Stroke=&quot;#FF575B06&quot; Fill=&quot;#FFFBFFAD&quot; StrokeThickness=&quot;2&quot; /&gt;\r\n&lt;/Canvas&gt;</pre>\r\n<p style=\"font-size:1.5em\"><span style=\"color:#4f81bd\"><strong>WinRTTriggers is available to download from\r\n</strong><a href=\"https://nuget.org/packages/WinRTTriggers\" target=\"_blank\"><strong>nuget</strong></a><strong>.</strong></span></p>\r\n<h2>Supported Triggers</h2>\r\n<h4>PropertyChangedTrigger</h4>\r\n<p>Fired when a property changes to any value</p>\r\n<h4>PropertySetTrigger</h4>\r\n<p>Similar to PropertyChangedTrigger, except it will only get fire when a property changes to a specified value.</p>\r\n<h4>EventTrigger</h4>\r\n<p>Fires when an event associated to the control is fired, e.g. the Tapped event on a control.</p>\r\n<p><strong>v1.4:</strong> EventTrigger also supports hooking into events on another object, e.g. your view model - just set the SourceObject property to the target object. Leaving this unset or null will result in the event being attached to the associated\r\n XAML object.</p>\r\n<h4>StoryboardCompletedTrigger</h4>\r\n<p>Fires when a storyboard completes.</p>\r\n<h2>Supported Actions</h2>\r\n<h4>GotoStateAction</h4>\r\n<p>Instructs the VisualStateManager to change to a named state</p>\r\n<h4>InvokeCommandAction</h4>\r\n<p>Invokes some ICommand implementation, probably located on your view model.</p>\r\n<h4>ControlStoryboardAction</h4>\r\n<p>Starts/Stops/Pauses a storyboard.</p>\r\n<h4>SetPropertyAction</h4>\r\n<p>Allows you to set a property on an object (probably your view model) when a trigger is fired.</p>\r\n<h2>Demo Application</h2>\r\n<p>The sample application that comes with the source code demonstrates the use of several combinations of the supported triggers and actions &ndash; check it out and have a play with it.</p>\r\n<p><img title=\"WinRTTriggersScreenshot\" src=\"/projects/winrttriggers/81dc1e00-931a-43d2-89ad-2f74d74cbf6d\" border=\"0\" alt=\"WinRTTriggersScreenshot\" width=\"640\" height=\"272\" style=\"padding-top:0px; padding-left:0px; display:inline; padding-right:0px; border-width:0px\"></p>\r\n<h2>Links</h2>\r\n<p>I&rsquo;ll be posting information about this project on my <a href=\"http://www.goatly.net/\" target=\"_blank\">\r\nblog</a> &ndash; you could also hassle me on <a href=\"http://twitter.com/mikegoatly\" target=\"_blank\">\r\nTwitter</a>.</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2013-06-07T00:40:07.947-07:00"
}
{
  "ProjectName": "fluentmetadata",
  "Title": "Fluent Metadata for .NET RIA Services",
  "Description": "Fluent Metadata allows you to use a fluent interface to add metadata to your entities. The library is written in C#.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Fluent Metadata allows you to use a fluent interface to add metadata to your entities. The library is written in C&#35;.<br /><br />Available documentation:<br />\n<ul><li><a href=\"https://fluentmetadata.codeplex.com/wikipage?title=SupportedAttributes&referringTitle=Home\">Supported Attributes</a></li>\n<li><a href=\"https://fluentmetadata.codeplex.com/wikipage?title=xValIntegration&referringTitle=Home\">xVal Integration</a> </li></ul>\n<br />This project allows you to move to the fluent way of adding metadata to your entities. A short example is shown below.<br /><br />Default way of adding metadata:<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">class</span> Product {\n  <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">int</span> Id {<span style=\"color:Blue;\">get</span>; <span style=\"color:Blue;\">set</span>;}\n  <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">string</span> Name {<span style=\"color:Blue;\">get</span>; <span style=\"color:Blue;\">set</span>;}\n}\n\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">class</span> ProductMetadata {\n\n  [Key]\n  <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">int</span> Id;\n\n  [Required]\n  [StringLength(50){ ErrorMessage = <span style=\"color:#A31515;\">&quot;The string should be shorter than 50 characters&quot;</span>}]\n  <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">string</span> Name;\n}\r\n</pre></div><br />Syntax used by this library to add metadata:<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">class</span> Product {\n  <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">int</span> Id {<span style=\"color:Blue;\">get</span>; <span style=\"color:Blue;\">set</span>;}\n  <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">string</span> Name {<span style=\"color:Blue;\">get</span>; <span style=\"color:Blue;\">set</span>;}\n}\n\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">class</span> ProductMetadata : FluentMetadata&lt;Product&gt; {\n  ForProperty(p =&gt; p.Id).AddValidation.IsKey();\n  \n  <span style=\"color:Green;\">//Yes you can call ForProperty multiple times for the same property :)</span>\n  ForProperty(p =&gt; p.Name).AddValidation.IsRequired();\n  ForProperty(p =&gt; p.Name).AddValidation.StringLength().Maximum(50).WithErrorMessage(<span style=\"color:#A31515;\">&quot;The string should be shorter than 50 characters&quot;</span>); \n}\r\n</pre></div><br />Moving to the fluent way of adding metadata allows you to refactor easier because references are automatically updated and you have IntelliSense support when mapping the metadata.</div><div class=\"ClearBoth\"></div>",
  "TagList": "Fluent,Metadata,.NET RIA Services,Silverlight,C#,",
  "LastEdited": "2009-10-08T15:40:31.943-07:00"
}
{
  "ProjectName": "SPDeepZoomSearch",
  "Title": "Sharepoint DeepZoom Search",
  "Description": "This project demonstrates using A Silverlight DeepZoom app to query the SharePoint search api and show those results as deep zoom tiles. This project is based upon or uses components from the Eventr and SuperDeepZoom projects.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />This project demonstrates using A Silverlight DeepZoom app to query the SharePoint search api and show those results as deep zoom tiles. This project is based upon or uses components from the Eventr and SuperDeepZoom projects.<br /><br /><br />This project was designed as a quick example of using a Silverlight Web Part to perform SharePoint 2010 searches and display the results using the deep zoom viewer. It uses the DocId feature in SharePoint 2010 as a key into the DeepZoom tile database. The tile database stores information about the tile set, including its location on disk, along with publishing locations. All this tile information is keyed off the DocId that can be returned in the SharePoint search result data set. The ideal installation scenario is to install the SL XAP file into the SharePoint site, and then create a new search result page using the XAP as the main content. The DeepZoom search silverlight code base is designed to call back to the hosting site&#39;s <i>vti</i>bin folder, which is where the SharePoint Search web service is located. The service that tracks the tile sets, and can generate tile sets can also be hosted inside SharePoint , however you will need to be familiar with SharePoint in order to sucessfully install the tile service there. The DeepZoom silverlight component is currently setup to use the ServiceReferences.ClientConfig for the location of the tile service, however there are two lines commented out in the tile query code that can be enabled to access the services when hosted in the SharePoint site. This codebase does not generate the SharePoint document tiles automatically. You will have to setup a handler or workflow to generate tiles for new items via the DeepZoomTile service using the DocId as the key.</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2011-01-17T14:12:48.263-08:00"
}
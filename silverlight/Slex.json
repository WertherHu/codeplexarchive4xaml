{
  "ProjectName": "Slex",
  "Title": "Slex - Silverlight Experimental Hacks",
  "Description": "Slex is built on top of System.Windows.Interactivity framework, and supports a couple of interesting Triggers and Actions. Presently Slex supports a couple of triggers including Event Trigger, Property Trigger etc - and actions like InvokeMethodAction, InvokeCommandAction etc.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\n<h2>What is there in Slex?</h2>\r\nIf you are familiar with Silverlight/Expression Blend, you should be knowing about the System.Windows.Interactions infrastructure – which provides various Behaviors, Triggers and Actions. Slex is an experimental implementation on top of the same, along with few extensibilities and additional triggers and actions.<br /><br />Triggers in Slex, and actions inside them, can be invoked based on conditions <br />\n<h2>Slex Preview 2.0</h2>\r\nThese are some notable aspects in Slex, that are not available in the triggers and actions available with Expression Blend.<br /><br />Slex allows you to define multiple conditions for invoking triggers (like you can specify a KeyDown event trigger should be fired only if ‘A’ is pressed). Also, You can specify multiple conditions for invoking each action in a trigger. Slex introduces few more Triggers and Actions that you’ll see soon.<br /><br />As of now, Slex Preview 2 Provides the following Triggers<br />\n<ul><li>EventTrigger – Will be fired when an event is raised. Can listen to events of Elements, or events from your view model</li>\n<li>PropertyTrigger – Will be fired when the specified property changes. Can listen to properties of Elements, or property in your view model</li>\n<li>ReactiveTrigger – Can ‘import’ an Observable that you may ‘export’ using MEF. Useful to define and use custom events using System.Reactive.</li></ul>\n<br />And the following actions<br />\n<ul><li>InvokeMethodAction – Invoke a method directly in the View model or for a target element, supports passing parameters via Xaml</li>\n<li>InvokeCommandAction – Invoke an ICommand in the view model</li>\n<li>StoryBoardAction – Start, Stop, Pause, Resume, or Reverse story boards</li>\n<li>PropertyAction – Sets a property value (very crude as of now)</li></ul>\n<br />You can specify one or more InvokingCondition for triggers and/or actions. Also, actions like InvokeMethodAction and InvokeCommandAction has an ActionParameters property, so that you can pass one or more Parameters when invoking methods and commands.<br /><br />Have a look at few code samples<br />\n<ul><li>2 - Slex Preview 2.0 (Post on Preview 2.0) - <a href=\"http://amazedsaint.blogspot.com/2009/12/slex-for-silverlight-preview-2.html\">http://amazedsaint.blogspot.com/2009/12/slex-for-silverlight-preview-2.html</a></li>\n<li>1 - Introducing Slex (Post on Preview 1.0) - <a href=\"http://amazedsaint.blogspot.com/2009/12/introducing-slex-silverlight.html\">http://amazedsaint.blogspot.com/2009/12/introducing-slex-silverlight.html</a></li></ul>\n<br />This is just a preview release, stay tuned. Follow at <a href=\"http://twitter.com/amazedsaint\">http://twitter.com/amazedsaint</a><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "Silverlight,",
  "LastEdited": "2009-12-28T12:19:44.913-08:00"
}
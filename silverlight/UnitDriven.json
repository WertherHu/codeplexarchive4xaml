{
  "ProjectName": "UnitDriven",
  "Title": "Unit Driven",
  "Description": "UnitDriven is a multi-platform unit testing framework for the CLR. UnitDriven allows you to write a single test that will compile and run, synchronously or asynchronously in Silverlight, Windows Phone and .NET platforms. ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Project Description</h1>\rUnitDriven is a multi-platform unit testing framework for the CLR. UnitDriven allows you to write a single test that will compile and run, synchronously or asynchronously in Silverlight, Windows Phone and .NET platforms. \n<ul><li>Find details about CSLA .NET for Windows at <a href=\"http://www.lhotka.net/cslanet\">http://www.lhotka.net/cslanet</a> and CSLA .NET for Silverlight at <a href=\"http://www.lhotka.net/cslalight\">http://www.lhotka.net/cslalight</a>. </li>\n<li>This project wouldn&#39;t exist without initial sponsorship from <a href=\"http://www.magenic.com\">Magenic</a>.</li></ul>\n\n<h3>Setup Tests for Silverlight or WP7</h3>\rFirst, create a Silverlight or Windows Phone application and add a reference to UnitDriven.<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">private</span> <span style=\"color:Blue;\">void</span> Application_Startup(<span style=\"color:Blue;\">object</span> sender, StartupEventArgs e)\n{\n    <span style=\"color:Blue;\">this</span>.RootVisual = <span style=\"color:Blue;\">new</span> UnitDriven.TestEngine(Assembly.GetExecutingAssembly());\n}\r\n</pre></div><h3>Example Asynchronous Test With UnitDriven</h3>\r<div style=\"color:Black;background-color:White;\"><pre>\r\n[TestClass]\n<span style=\"color:Blue;\">class</span> ExampleTests : TestBase\n{\n    [TestMethod]\n    [ExpectedException(<span style=\"color:Blue;\">typeof</span>(InvalidOperationException))]\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">void</span> ExpectedExceptionExample()\n    {\n        <span style=\"color:Blue;\">using</span> (<span style=\"color:Blue;\">var</span> context = GetContext())\n        {\n            BackgroundWorker worker = <span style=\"color:Blue;\">new</span> BackgroundWorker();\n            worker.DoWork += <span style=\"color:Blue;\">this</span>.ThrowsAnException;\n            worker.RunWorkerCompleted += (o, e) =&gt;\n            {\n                context.Assert.Fail(e.Error);\n            };\n\n            worker.RunWorkerAsync();\n\n            <span style=\"color:Green;\">// When the context is disposed it will find the exception and re-throw it in .NET</span>\n            <span style=\"color:Green;\">// and simply pass it back asynchronously in Silverlight.</span>\n        }\n    }\n}\r\n</pre></div>See a more <a href=\"https://unitdriven.codeplex.com/wikipage?title=Detailed%20Example&referringTitle=Home\">Detailed Example</a>.<br />\n<h3>Developer Blogs</h3>\r<ul><li><a href=\"http://www.lhotka.net/weblog/SyndicationService.asmx/GetRss\">Rocky Lhotka</a>\n<ul><li><a href=\"http://www.pluralsight-training.net/community/blogs/pluralcast/archive/2010/11/08/pluralcast-28-talking-business-and-objectification-with-rocky-lhotka.aspx\">Rocky Talks about UnitDriven on Pluralcast Podcast</a></li></ul></li>\n<li><a href=\"http://www.justinmchase.com\">Justin Chase</a>\n<ul><li><a href=\"http://www.justinmchase.com/post/2008/07/16/Unit-Testing-Asynchronous-Code-in-Silverlight.aspx\">Unit Testing Asynchronous Code in Silverlight</a></li></ul></li></ul>\n\n<h4>Contributors</h4>\r<ul><li><a href=\"http://www.codeplex.com/site/users/view/staxmanade\">staxmande</a>\n<ul><li><a href=\"http://staxmanade.blogspot.com/2008/08/unitdrivens-ui-gets-minor-makeover.html\">UnitDriven&#39;s UI Gets a Minor Makeover</a></li>\n<li>Checkout <a href=\"http://statlight.codeplex.com/\">StatLight</a> for automating your unit tests.</li></ul></li></ul></div><div class=\"ClearBoth\"></div>",
  "TagList": "Silverlight,Silverlight 2.0,Unit Testing,Testing,CSLA.NET,",
  "LastEdited": "2010-11-15T19:13:06.22-08:00"
}
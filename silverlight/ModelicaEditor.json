{
  "ProjectName": "ModelicaEditor",
  "Title": "Modelica Editor",
  "Description": "Web based GUI editor for OpenModelica compiler. We're curently working on XBAP version. The Silverlight 2 version is on plan.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\n<h2><a href=\"http://my-trac.assembla.com/ModelicaEditor/wiki/WikiStart\">The project website moved here.</a></h2>\r\n<hr />\n\n<h2>Project annotation</h2>\r\nIn this project we will create base for Modelica development environment which will run in internet browser. Environment will allow visual editing of model and model structure and allow source code editing as well. Modelica compiler is not part of the project, compiler runs on the server and environment will comunicate with them through defined API. Visual debugger is not part of the project as well, it will be created as ongoing project. Development environment will allow to compile model on the server, play the model and simple show results. These are the main parts of the project :<br />abstract representation of model structure(abstract semantic graph, abstract syntax tree - AST) - core, which contains information about model, provides information for semantic control, syntax highlighting and autocomplete<br />communication with OMC server(OpenModelica Compiler)<br />graphic editor - graphic editor of hierarchical model, library of modules, visual programming, cooperation with AST and checking syntax/semantic<br />text editor - syntax higlighting, online parsing, autocomplete, quickhelp<br />communication with model repository - without conflict resolving, simple versioning (lock-modify-unlock strategy)<br />\n<h2>Technologies</h2>\r\nMain request is that the application should work in internet browser, so we will try to use Silverlight 2.0. , but if there will be problems with it, we will make application in XBAP - XAML in Browser Application. Next requests are using WPF, concept M-V-VM, using WPF techniques like data binding, evets, commands etc. Part of project are unit tests as well. Look and feel of application is also very important, application should use power of WPF. We can use products of third parties.<br />\n<ul><li><b>Might, Milestone 1</b></li></ul>\n<br />Contemporary objective of Might (ModeliceIDE) project is creating Web graphic interface for server part of Open Modelica Compiler, which allows icon and model editation. Range of this version should be approximately same like MathCore Modelica Lite.<br /><br />\n<h2>Anotace projektu</h2>\r\nV r&#225;mci projektu bude vytvořen z&#225;klad pro v&#253;vojov&#233; prostřed&#237; jazyka Modelica - editor. Půjde o n&#225;vrh a implementaci aplikace běž&#237;c&#237; v browseru, kter&#225; umožňuje dvoucestnou tvorbu k&#243;du v jazyce Modelica. Tedy jak vizu&#225;ln&#237; editaci struktury modelu, tak editaci jeho zdrojov&#233;ho k&#243;du. Souč&#225;st&#237; editoru nen&#237; překladač Modelica, ten je na serveru, se kter&#253;m editor komunikuje pomoc&#237; definovan&#233;ho API. Souč&#225;st&#237; editoru tak&#233; nen&#237; vizu&#225;ln&#237; debugger, kter&#253; bude vytvořen jako navazuj&#237;c&#237; projekt. V&#253;sledn&#225; aplikace však umožn&#237; nechat na serveru skompilovat a spustit model a jednoduchou formou prezentovat jeho v&#253;sledky. Editor se bude skl&#225;dat z těchto důležit&#253;ch souč&#225;st&#237;: <br />abstraktn&#237; reprezentace struktury modelu (abstract semantic graph, abstract syntax tree - AST) - j&#225;dro, kter&#233; nese informace o modelu, poskytuje podklady pro s&#233;mantick&#233; kontroly, syntax highlighting a autocomplete<br />komunikace s OMC serverem (OpenModelica Compiler)<br />grafick&#253; editor - grafick&#253; editor hierarchick&#233;ho modelu, knihovna modulů, vizu&#225;ln&#237; programov&#225;n&#237;, spolupr&#225;ce s AST na hl&#237;d&#225;n&#237; syntaktick&#233;/s&#233;mantick&#233; spr&#225;vnosti<br />textov&#253; editor - syntax highlighting, online parsing, autocomplete, quickhelp, …<br />komunikace s repository modelů - bez řešen&#237; konfliktů, jednoduch&#233; verzov&#225;n&#237; (lock-modify-unlock strategy)<br />\n<h2>Techniky a technologie</h2>\r\nZ&#225;sadn&#237;m požadavkem je spouštěn&#237; aplikace v prohl&#237;žeči. V&#253;hodou by bylo udržet aplikaci v mez&#237;ch Silverlight 2.0. Pokud se tento požadavek uk&#225;že jako problematick&#253;, bude aplikace realizovan&#225; jako XBAP - XAML in Browser Application. Při implementaci bude kladen požadavek na striktn&#237; použit&#237; WPF (XAML) při tvorbě GUI, dodržen&#237; konceptu M-V-VM a použit&#237; technik specifick&#253;ch pro WPF jako jsou data binding, events, commands. Souč&#225;st&#237; před&#225;vky mus&#237; b&#253;t unit testy. Nesm&#237; b&#253;t podceňov&#225;na estetick&#225; str&#225;nka aplikace. Pokud t&#253;m sformuluje požadavky na dod&#225;n&#237; grafiky, laboratoř se postar&#225; o jejich dod&#225;n&#237;. Je dovoleno, dokonce př&#237;mo doporučeno, použ&#237;t jako souč&#225;st projektu produkty třet&#237;ch stran (knihovny apod.), pokud to jejich licence umožn&#237;.<br />\n<ul><li><b>Might, Milestone 1</b></li></ul>\n<br />Soucasnym cilem projektu Might (ModelicaIDE) je vytvorit Webove graficke rozhrani pro serverovou cast Open Modelica Compiler, ktere by umoznovalo editaci Ikon a Modelu. Rozsah teto verze by mel byt podobny, jako priblizne MathCore Modelica Lite.</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2009-12-10T01:54:01.24-08:00"
}
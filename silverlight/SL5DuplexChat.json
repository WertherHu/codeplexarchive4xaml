{
  "ProjectName": "SL5DuplexChat",
  "Title": "Silverlight 5 Chat: Full-duplex Publish/Subscribe -pattern on TCP/IP",
  "Description": "F-Sharp (F#) WCF \"PollingDuplex\" WebService with SL5 FSharp client",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">Silverlight Chat<br /><br />+ Full-duplex TCP/IP concept demo. (&quot;PollingDuplex&quot;)<br />+ Publish/Subscribe -pattern: Client registers to server and server sends (push based) events from other users.<br />+ Almost real-time communication with other users (/Silverlight clients)!<br />+ Database could be made, but it is optional: Now the server just forwards (/filters) the client messages to other clients.<br /><br />This is chat as a concept demo. The same concept could be used as for example multiplayer game (/multiuser software like Google Wave/Docs) with high interaction level between users. (Silverlight 5 works on Facebook, Windows Phone, ...) We could have one or many servers per user, so the user load could be distributed (eg. by location, game board coordinates, etc).<br /><br />Development tool: Visual Studio 2012 RC (with Silverlight 5 SDK). Plugins: None.<br />IIS is used as host. I haven&#39;t tried with others. WCF Serialization in binary mode, can be read with Fiddler2.<br /><br />Technology stack:<br />+ F# (FSharp) as main language<br />+ WCF WebService (&quot;PollingDuplex&quot;)<br />+ Silverlight 5 client<br /><br />This is quite much like the WebSocket concept which would propably work with the same source code, but different web.config for WCF service, but needs (Win8 based) IIS 8.<br />  <br />Setup:<br />1. Use Visual Studio 11 (RC) and have Silverlight 5 SDK<br />2. Set the WCFHost as start up project <br />3. You may have to refererence FSharp core dll again (if you have a different version) <br />4. From WCFHost project properties create virtual dir to IIS.<br />That&#39;s it.<br /><br />Project structure (the interesting ones):<br /><br /> Servere side:<br />  - WCFHost: (IIS VDir)<br />    + PushService.svc WCF WebService host<br />    + Chat.html: Silverlight host HTML page<br />    + Web.Config: Some configs<br />  - ServiceLogics:<br />    + StreamClient.fs: Interface for push messages from server to client<br />    + PushService.svc.fs: WebService logics, interface for client to call server<br /> Client side:<br />  - DataClient<br />    + Generated service reference<br />  - ClientLogics:<br />    + Commands.fs: Silverlight ICommands<br />    + ClientViewModel.fs: Client side ViewModel for UI<br />  - SLClient:<br />    + MainPage.xaml: Silverlight UI<br />\t<br />References / similar stuff:<br /> - http://msdn.microsoft.com/en-us/library/cc645027(v=vs.95).aspx<br /> - http://www.c-sharpcorner.com/uploadfile/pchandraker/http-duplex-messaging-in-silverlight-4/<br /> - http://weblogs.asp.net/dwahlin/archive/2011/02/06/syncing-data-with-a-server-using-silverlight-and-http-polling-duplex.aspx<br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2012-06-14T16:18:41.637-07:00"
}
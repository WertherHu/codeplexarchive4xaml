{
  "ProjectName": "expressiontree",
  "Title": "Expression Tree Serializer",
  "Description": ".NET 4.0 and Silverlight 4 class library that serializes and deserializes Expression instances. Also: a WCF IQueryable LINQ Provider and Web Http (REST) client for Silverlight that provides a simplified REST client API (i.e. WCF's WebChannelFactory) that's easier to use than WebClient.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<div>\r\n<p style=\"font-family:'Trebuchet MS'; font-size:10pt\">&nbsp;</p>\r\n<p style=\"font-family:'Trebuchet MS'; font-size:10pt\">This is a C# library that serializes .NET Framework 4.0\r\n<a href=\"https://msdn.microsoft.com/en-us/library/mt693029.aspx\">LINQ expression</a>&nbsp;trees into XML. This project was motivated by a real-life problem of reducing the response time&nbsp;of a massive web service, which needed another approach besides the\r\n tried solutions&nbsp;that rely on incremental improvements to custom XML&nbsp;serialization&nbsp;on<em> objects</em>&nbsp;; the code just to define the serializable objects along with their own XML custom XML serializaton methods&nbsp;already covered hundreds\r\n of thousands of lines of code. Instead, we serialize the<em> query</em> and defer execution to the server, which allows us to (1) minimize network bandwidth costs, (2) reduce web service response time by as much as several orders of magnitude (depending on\r\n the query).</p>\r\n<p style=\"font-family:'Trebuchet MS'; font-size:10pt\">&nbsp;</p>\r\n<p style=\"font-family:'Trebuchet MS'; font-size:10pt\"><strong>Usage</strong></p>\r\n<p style=\"font-family:'Trebuchet MS'; font-size:10pt\">To execute LINQ queries against an&nbsp;<a href=\"https://msdn.microsoft.com/en-us/library/system.linq.iqueryprovider(v=vs.100).aspx\">IQueryProvider</a>&nbsp;exposed by a remote, WCF endpoint for example:&nbsp;</p>\r\n</div>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:'Trebuchet MS'; font-size:10pt\">\r\n&nbsp;</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:'Trebuchet MS'; font-size:10pt\">\r\n<span style=\"color:#2b91af\">Task</span>.Factory.StartNew(()&nbsp;=&gt;&nbsp;</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:consolas; font-size:9.5pt\">{</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\"><span style=\"color:#2b91af\">IQueryable</span>&lt;<span style=\"color:#2b91af\">Customer</span>&gt;&nbsp;queryable&nbsp;=&nbsp;<span style=\"color:blue\">from</span>&nbsp;c&nbsp;<span style=\"color:blue\">in</span>&nbsp;<span style=\"color:blue\">new</span>&nbsp;<span style=\"color:#2b91af\">Query</span>&lt;<span style=\"color:#2b91af\">Customer</span>&gt;()</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\">&nbsp;<span style=\"color:blue\">where</span>&nbsp;c.ID&nbsp;&lt;=&nbsp;30</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\">&nbsp;&amp;&amp;&nbsp;c.Country&nbsp;==&nbsp;<span style=\"color:#a31515\">&quot;Spain&quot;</span></p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\">&nbsp;||&nbsp;c.ContactTitle&nbsp;==&nbsp;<span style=\"color:#a31515\">&quot;Owner&quot;</span></p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\">&nbsp;<span style=\"color:blue\">select</span>&nbsp;c;</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:'Trebuchet MS'; font-size:8pt\">&nbsp;</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\"><span style=\"color:#2b91af\">List</span>&lt;<span style=\"color:#2b91af\">Customer</span>&gt;&nbsp;results&nbsp;=&nbsp;queryable.ToList();</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\"><span style=\"color:blue\">int</span>&nbsp;count&nbsp;=&nbsp;queryable.Count();</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:consolas; font-size:9.5pt\">});</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:'Trebuchet MS'; font-size:10pt\">\r\n&nbsp;</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:'Trebuchet MS'; font-size:10pt\">\r\nwhich is more expressive and&nbsp;takes less lines of code to write than:</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:'Trebuchet MS'; font-size:10pt\">\r\n&nbsp;</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:consolas; font-size:9.5pt\"><span style=\"color:#2b91af\">EntityQuery</span>&lt;<span style=\"color:#2b91af\">Customer</span>&gt;&nbsp;entityQuery&nbsp;=<span style=\"color:blue\">from</span>&nbsp;c&nbsp;<span style=\"color:blue\">in</span>&nbsp;context.GetCustomersQuery()</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\"><span style=\"color:blue\">where</span>&nbsp;c.ID&nbsp;&lt;=&nbsp;30</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\">&nbsp;&amp;&amp;&nbsp;c.Country&nbsp;==&nbsp;<span style=\"color:#a31515\">&quot;Spain&quot;</span></p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\">&nbsp;||&nbsp;c.ContactTitle&nbsp;==&nbsp;<span style=\"color:#a31515\">&quot;Owner&quot;</span></p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\">&nbsp;<span style=\"color:blue\">select</span>&nbsp;c;</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:consolas; font-size:9.5pt\">System.ServiceModel.DomainServices.Client.<span style=\"color:#2b91af\">LoadOperation</span>&lt;<span style=\"color:#2b91af\">Customer</span>&gt;&nbsp;loadOp</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\">=&nbsp;context.Load&lt;<span style=\"color:#2b91af\">Customer</span>&gt;(entityQuery,&nbsp;<span style=\"color:blue\">true</span>);</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:consolas; font-size:9.5pt\"><span style=\"color:blue\">var</span>&nbsp;entities&nbsp;=&nbsp;loadOp.Entities;</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:consolas; font-size:9.5pt\">loadOp.Completed&nbsp;&#43;=&nbsp;(a,&nbsp;b)&nbsp;=&gt;</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:consolas; font-size:9.5pt\">{</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\"><span style=\"color:blue\">var</span>&nbsp;list&nbsp;=&nbsp;entities.ToList();</p>\r\n<p style=\"margin:0in 0in 0in 0.75in; font-family:consolas; font-size:9.5pt\">_customers&nbsp;=&nbsp;list;</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:consolas; font-size:9.5pt\">};</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:'Trebuchet MS'; font-size:10pt\">\r\n&nbsp;</p>\r\n<p style=\"margin:0in 0in 0in 0.375in; font-family:'Trebuchet MS'; font-size:10pt\">\r\nthat you get with WCF RIA Services. (In .NET 4.0 you can completely leave out the call to (<span style=\"color:#2b91af\">TaskFactory</span>.StartNew).</p>\r\n<p style=\"font-size:9.5pt\">&nbsp;</p>\r\n<div>\r\n<p>Special thanks: this completes a project started by&nbsp;Microsoft in <a href=\"https://blogs.msdn.microsoft.com/lucabol/2008/\">\r\n2008</a>.</p>\r\n</div>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2016-05-23T11:07:12.367-07:00"
}
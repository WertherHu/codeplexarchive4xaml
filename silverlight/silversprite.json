{
  "ProjectName": "silversprite",
  "Title": "SilverSprite",
  "Description": "Run XNA games without code changes in Silverlight. Since the game compiles into straight Silverlight code, it will run anywhere that Silverlight can. Now with support for Silverlight 5 Toolkit's SpriteBatch and other XNA compatibility.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>ATTENTION: If the future of SilverSprite is important to you, please respond to the discussion here <a href=\"http://silversprite.codeplex.com/discussions/394808\">http://silversprite.codeplex.com/discussions/394808</a></b><br /><br /><b>Project Description</b><br />Run XNA games without code changes in Silverlight. Since the game compiles into straight Silverlight code, it will run anywhere that Silverlight can. Now with support for Silverlight 5 Toolkit&#39;s SpriteBatch and other XNA compatibility.<br /><br />NEW! Silverlight 5 support. The Silverlight 5 Toolkit provides many of the XNA APIs such as SpriteBatch, Mesh and Model, and Input, but some classes are missing like Game and GameComponent. This makes much of the legacy SilverSprite code obsolete, but with Silverlight 5 the goal of SilverSprite is to fill in the gaps. The Silverlight 4 code has been preserved in case anyone needs it but there is a new source tree for Silverlight 5.<br /><br /><b>Getting your game going with SilverSprite for Silverlight 5</b><br />Step 1. Install Silverlight 5 Tools for Visual Studio 2010 SP1 <a href=\"http://go.microsoft.com/fwlink/?LinkId=229318\">http://go.microsoft.com/fwlink/?LinkId=229318</a><br /><br />Step 2. Install the Silverlight 5 Toolkit <a href=\"http://silverlight.codeplex.com/\">http://silverlight.codeplex.com/</a><br /><br />Step 3. Create your Silverlight Project. You have 2 options here, and neither is ideal. You can use the Silverlight 3D Application template which creates a corresponding content project for you and adds the proper references to the Silverlight XNA libraries, or you can create a standard Silverlight project and add the other stuff yourself.<br /><br />If you create a standard Silverlight project, you&#39;ll need to add the following assembly references:<br /><br />Microsoft.Xna.Framework<br />Microsoft.Xna.Framework.Content<br />Microsoft.Xna.Framework.Graphics<br />Microsoft.Xna.Framework.Graphics.Extensions<br />Microsoft.Xna.Framework.Graphics.Shaders<br />Microsoft.Xna.Framework.Math<br />Microsoft.Xna.Framework.Toolkit<br />System.Windows.Xna<br /><br />Step 4. Add your content. If using the Silverlight 3D Application template you can add your content to the content project generated for you. Alternatively, you can edit the .csproj file and either replace the existing contentproj with your own, or in the case of a standard Silverlight Application you can add the XML for the content project.<br /><br /><pre>\n&lt;PropertyGroup&gt;\n  &lt;XnaContentProject&gt;..\\Silverlight3dAppContent\\Silverlight3dAppContent.contentproj&lt;/XnaContentProject&gt; &lt;/PropertyGroup&gt;\n&lt;Target Name=&quot;BeforeBuild&quot;&gt;\n  &lt;MSBuild Projects=&quot;$(XnaContentProject)&quot; Properties=&quot;XnaContentPipelineTargetPlatform=Windows;XnaContentPipelineTargetProfile=Reach&quot; /&gt;\n  &lt;CreateItem Include=&quot;$(XnaContentProject)&quot;&gt;\n    &lt;Output TaskParameter=&quot;Include&quot; ItemName=&quot;XnaContentProjectItem&quot; /&gt;\n  &lt;/CreateItem&gt;\n  &lt;CreateProperty Value=&quot;%(XnaContentProjectItem.RelativeDir)&quot;&gt;\n    &lt;Output TaskParameter=&quot;Value&quot; PropertyName=&quot;XnaContentProjectPath&quot; /&gt;\n  &lt;/CreateProperty&gt;\n  &lt;CreateItem Include=&quot;$(XnaContentProjectPath)cachefile*targetpath.txt&quot;&gt;\n    &lt;Output TaskParameter=&quot;Include&quot; ItemName=&quot;XnaContentCacheFile&quot; /&gt;\n  &lt;/CreateItem&gt;\n  &lt;ReadLinesFromFile File=&quot;@(XnaContentCacheFile)&quot; Condition=&quot;Exists(@(XnaContentCacheFile))&quot;&gt;\n    &lt;Output TaskParameter=&quot;Lines&quot; ItemName=&quot;XnaContentOutputs&quot; /&gt;\n  &lt;/ReadLinesFromFile&gt;\n  &lt;CreateItem Include=&quot;@(XnaContentOutputs-&gt;&#39;$(XnaContentProjectPath)bin\\AnyCPU\\$(Configuration)\\%(Identity)&#39;)&quot; AdditionalMetadata=&quot;Link=Content\\%(RelativeDir)%(Filename)%(Extension)&quot;&gt;\n    &lt;Output TaskParameter=&quot;Include&quot; ItemName=&quot;Content&quot; /&gt;\n  &lt;/CreateItem&gt;\n&lt;/Target&gt;\n</pre><br /><br />Replace the XnaContentProject to point to the location of your content file. You can see examples of how this should look in the Samples folder.<br /><br />Step 5. Add SilverSprite.dll to your Silverlight application.<br /><br />Step 6. Add your source files to the Silverlight application.<br /><br />Step 7. Add code to MainPage.xaml.cs to attach to your game class, here is an example from the Role Playing Game sample:<br /><br /><pre>\n    public partial class MainPage : UserControl\n    {\n        RolePlayingGame game;\n\n        public MainPage()\n        {\n            InitializeComponent();\n            game = new RolePlayingGame();\n            game.Attach(LayoutRoot);\n        }\n    }\n</pre><br /> <br />Step 8. Unfortunately the Color enums such as Color.CornflowerBlue were not included with Silverlight 5, and there is no way to provide them, so SilverSprite provides a ColorHelper class. You can change Color.CornflowerBlue with ColorHelper.CornflowerBlue and the same goes for any other colors. To compile for both XNA and Silverlight, you can #if all of these or you can add ColorHelper.cs to your XNA project.<br /><br /><b>Some things just don&#39;t work at all, like XACT sound and networking.</b><br /><br />A good amount of the code for the Silverlight 4 version and some for Silverlight 5 comes from the Mono.Xna <a href=\"http://code.google.com/p/monoxna/\">http://code.google.com/p/monoxna/</a> library.</div><div class=\"ClearBoth\"></div>",
  "TagList": "game,XNA,Silverlight,",
  "LastEdited": "2012-09-10T09:32:23.08-07:00"
}
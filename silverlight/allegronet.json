{
  "ProjectName": "allegronet",
  "Title": "AllegroNET",
  "Description": "AllegroNET is a Silverlight's implementation of Allegro library (http://alleg.sourceforge.net/)\n\nThe goal is to get completed library for fast/easy 2D bitmap manipulations, including sprites, collision detection and rest features for common 2D games.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><p><strong>What is AllegroNET?<br></strong>Silverlight's implementation of Allegro(v4.2.3) library (<a href=\"http://alleg.sourceforge.net/\">http://alleg.sourceforge.net/</a>)<br><br>The goal is to get completed library for fast/easy 2D bitmap manipulations, including sprites, collision detection and rest features for common 2D games.</p>\n<p>Compatible with Silverlight 3+<br><br><strong>The reasons for AllegroNET</strong></p>\n<p>Sadly, but <em>Silverlight</em>(up to version 4) <em>has no fast and easy way to program 2D games</em>. The only built-in way - use Image that actually is UIElement. It has cons(for example, perfect&nbsp;pixel collision detection), but also it has pros - a lot of &quot;heavy functionality&quot; that comes with&nbsp;<strong>UIElement</strong> and MAJOR minus - <strong>no direct access to image data</strong>. The only way to work directly with image data - using WriteableBitmap. But the next problem that you will get - WriteableBitmap has no any basic protection, clipping and other features. It's just a raw array of int. So what we will have if we want to develop 2D game and stick with built-in functionality of Silverlight?!</p>\n<ol>\n<li>Use one of &quot;heavy&quot; UIElement(Image and etc) and get quite slow game or quite high CPU load(the main purpose of UIElement - create Rich User Interfaces, not games)</li>\n<li>Use fast&nbsp;WriteableBitmap, but without any buil-in functionality for image manipulation. No blit, no primitives, no boundaries checking, no clipping - nothing.</li>\n</ol>\n<p>That's why was chosen other way - port one of already existing popular open-source library that is using for games (it must be cross-platfrom library to decrease time of porting - it already has most cases/solutions for differ platforms). There are a lot libraries. Probably most popular - SDL. Sadly, but i had experience only with Allegro. That's why AllegroNET was born.</p>\n<p><strong>The goal of AllegroNET</strong></p>\n<p>The main goal - port most functionality for bitmap manipulations - sprites(including perfect pixel collision detection), image processing(blit, rotate, stretch and etc), drawing primitives.</p>\n<p><strong>The differences AllegroNET from original Allegro</strong></p>\n<ol>\n<li>First of all, only 32bit images/sprites is supported.</li>\n<li>Some functions can be extended. For example, create_bitmap has one more additional overloaded version for using with&nbsp;WriteableBitmap.</li>\n<li>Algorithms for drawing primitives can differ from original version(for example, there are a few quite fast ways to draw line).&nbsp;</li>\n<li>Some additional library can be integrated. For example, right now already integrated <a href=\"http://ibaldo.codigolibre.net/ppcol.php\">PPCOL </a>library (Perfect Pixel Collision Detection).</li>\n<li>Encrypted DataFiles is not supported. Also individual compression is not supported. Only global.</li>\n</ol>\n<p><strong>Current project state of AllegroNET. &nbsp;What functionalities are already ported?</strong></p>\n<ul>\n<li>Basic image processing/manipulation&nbsp;</li>\n<li>Drawing primitives</li>\n<li>Sprites</li>\n<li>Perfect Pixel Collision Detection</li>\n<li>DataFiles</li>\n</ul>\n<p><strong>Known projects with AllegroNET</strong></p>\n<ol>\n<li><a href=\"http://gayvoronsky.com/test/\">Star CoNETrol</a>&nbsp;- My port of&nbsp;<a href=\"http://timewarp.sourceforge.net/\">Star Control - Timewarp</a>&nbsp;(coded in Allegro in the deep past). I was in development team in the deep past(1999-2000), but i wanted to reincarnate that project(at least last official release - v0.5) with modern technologies. Also it was my first try to learn C#/Silverlight. Project is not finished yet, but you can see results of using AllegroNET :)</li>\n</ol> \n<ul>\n</ul>\n<p><strong>To do</strong></p>\n<ul>\n<li>Port rest major functionality from original library</li>\n<li>Speed optimization(Although library is already quite fast). Right now main task - port major functionality. Some speed optimization can be done (for example, replace divide/multiply for bit-shifting), but it's not critical.</li>\n<li>Documentation and examples for using that library (although you can easily use documentation from <a href=\"http://www.allegro.cc/manual/\">original library</a>, but as was mentioned before - some functionality can be extended)</li>\n</ul></div><div class=\"ClearBoth\"></div>",
  "TagList": "images,Silverlight,collision detection,WriteableBitmap,Allegro,2D,Game,",
  "LastEdited": "2010-10-12T13:49:41.177-07:00"
}
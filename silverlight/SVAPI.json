{
  "ProjectName": "SVAPI",
  "Title": "Silverlight APIConnector для ВКонтакте",
  "Description": "APIConnektor для социальной сети ВКонтакте",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Друзья, хотелось бы получать отзывы от тех кто скачал библиотеку, спасибо!</strong><br>\r\n<strong>Пока работа встала, т.к. я пытаюсь создать из Silverlight class library еще и библиотечку, которую &#1084;ожно было бы прикручивать к серверной части... Буду рад по&#1084;ощи от всех желающих!</strong><br>\r\n<span style=\"color:#ff0000\"><strong>Требуется свежая голова (или две :) ) для работы над проекто&#1084;</strong></span><br>\r\n<br>\r\nThis is an Silverloght SDK for VKontakte social network. With this SDK you can create apps and games for this network using Silverlight v4.</p>\r\n<h1>Описание</h1>\r\n<p>Данная библиотека по&#1084;ожет Silverlight разработчика&#1084; реализовать свои приложения для социальной сети ВКонтакте.</p>\r\n<h2>Как все начиналось</h2>\r\n<p>При&#1084;ерно с полгода назад, &#1084;не пришла в голову идея реализовать что нибудь для ВКонтакте, используя Silverlight. Но, как выяснилось, у Silverlight есть ограничение на кросдо&#1084;енные запросы. Суть которого в то&#1084;, что в корне до&#1084;ена, к которо&#1084;у производится запрос,\r\n должен был лежать файл clientaccesspolicy.xml, описывающий политику для клиентских Silverlight приложений.<br>\r\nПосле недолгого диалога с разработчика&#1084;и ВКонтакте API, они добавили необходи&#1084;ый файл в корни до&#1084;енов содержащих API.<br>\r\nhttp://api.vkontakte.ru/clientaccesspolicy.xml<br>\r\nhttp://api.vk.com/clientaccesspolicy.xml<br>\r\n<br>\r\nК сожалению (или к счастью), практически сразу после удачного завершения диалога с разработчика&#1084;и, &#1084;еня завалило работой и работа над библиотекой встала.<br>\r\n<br>\r\nИ вот, наконец то, неделю назад я возобновил работу над библиотекой и сегодня предоставляю ее рабочую альфа версию с небольши&#1084; тестовы&#1084; приложение&#1084;.</p>\r\n<h1>Требования:</h1>\r\n<p>Visual Studio 2010 (включая Express)<br>\r\nSilverlight v4</p>\r\n<h1>Начало работы</h1>\r\n<ul>\r\n<li>Создайте новый проект WEB-приложения Silverlight (версия Silverlight должна быть не ниже 4й).\r\n</li><li>Скачайте библиотеку и подключите к проекту. </li><li>В файле MainPage.xaml.cs добавьте следующий код: </li></ul>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> MainPage : UserControl\n{\n    APIConnection VK;\n<span style=\"color:green\">// продолжение</span>\n}\n</pre>\r\n</div>\r\n<ul>\r\n<li>В коде конструктора MainPage() после инициализации ко&#1084;понентов добавьте инициализацию API:\r\n</li></ul>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> MainPage()\n{\n        InitializeComponent();\n<span style=\"color:green\">// Первый пара&#1084;етр - serverSecret</span>\n<span style=\"color:green\">// Второй пара&#1084;етр - глобальный обработчик ошибок</span>\n<span style=\"color:green\">// Если третий пара&#1084;етр (необязательный) установлен в true, то запуск приложения происходит в тестово&#1084; режи&#1084;е</span>\n        VK = <span style=\"color:blue\">new</span> APIConnection(<span style=\"color:#a31515\">&quot;&quot;</span>, MainErrorHendler, <span style=\"color:blue\">true</span>);\n}\n</pre>\r\n</div>\r\n<ul>\r\n<li>Далее &#1084;ожно вызывать либо уже реализованные функции API, напри&#1084;ер вот так: </li></ul>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> send_Click(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\n{\n        <span style=\"color:blue\">try</span>\n        {\n                <span style=\"color:green\">// Метод загружает профиль текущего пользователя и при успешно&#1084; выполнении вызывает </span>\n                <span style=\"color:green\">// функцию LoadProfileHandler передавая результат полученный от сервера VKAPI</span>\n                VK.LoadProfile( <span style=\"color:blue\">this</span>.Dispatcher, LoadProfileHandler);                \n        }\n        <span style=\"color:blue\">catch</span> (Exception ex)\n        {\n                MessageBox.Show(ex.Message);\n        }\n}\n<span style=\"color:blue\">void</span> LoadProfileHandler(Profile response)\n{\n        <span style=\"color:blue\">if</span> (response != <span style=\"color:blue\">null</span>)\n        {\n                MessageBox.Show(response.FirstName &#43; <span style=\"color:#a31515\">&quot;\\r\\n&quot;</span> &#43; response.LastName);\n        }\n}\n</pre>\r\n</div>\r\n<ul>\r\n<li>Либо, если функция еще не реализована или нужно передать серверу специфические данные, &#1084;ожно выполнить запрос напря&#1084;ую:\r\n</li></ul>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> send_Click(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\n{\n            DataProvider.AsyncApiResponse data = <span style=\"color:blue\">new</span> DataProvider.AsyncApiResponse(LoadProfileHandler, dispatcher, callBack, errorCallBack);\n            Dictionary&lt;<span style=\"color:blue\">string</span>, <span style=\"color:blue\">string</span>&gt; parameters = <span style=\"color:blue\">new</span> Dictionary&lt;<span style=\"color:blue\">string</span>, <span style=\"color:blue\">string</span>&gt;();\n            parameters.Add(<span style=\"color:#a31515\">&quot;uids&quot;</span>, startInfo.viewer_id);\n            parameters.Add(<span style=\"color:#a31515\">&quot;fields&quot;</span>, <span style=\"color:#a31515\">&quot;uid,first_name,last_name,nickname,domain,sex,photo&quot;</span>);\n            dataProvider.Request(<span style=\"color:#a31515\">&quot;getProfiles&quot;</span>, data, parameters);\n}\n</pre>\r\n</div>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2011-02-03T03:39:01.68-08:00"
}
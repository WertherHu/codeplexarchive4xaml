{
  "ProjectName": "SilverLightLoadData",
  "Title": "Using WCF Service + Entity Framework => to Load Data into Silverlight DataGrid f",
  "Description": "This is the post about loading data from Northwind database into SilverLight Datagrid\r\nAnd I will use WCF and Entity Framework ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">Hello friends, <br />Nowadays I have just started blogging to share knowledge with others.<br />This is the post about loading data from Northwind database into SilverLight Datagrid<br />And I will use WCF and Entity Framework for that and you just have to following the below simple steps.<br />This is the very basic task and very basic application.<br /><br />System Requirement:<br />\t<br />\tIDE: Microsoft Visual Studio  2010<br />          DATABASE: MSSQL 2005<br />You can find NorthWind Database from Below CodePlex Link<br />http://sqlserversamples.codeplex.com/#databases<br />http://archive.msdn.microsoft.com/northwind/Release/ProjectReleases.aspx?ReleaseId=1401<br /><br />1.\tCreate Silverlight Application<br /><br />•\tFROM File Menu: File-&gt;New-&gt;Project-&gt;SilverLight Application<br /><br />           <br />•\tGive Name to Application : SilverLight_LoadDataUsingWCF<br /><br />•\tNow Press Ok<br /><br />•\tIt will Ask you for Host Your application in WebSite press Ok.<br /><br />Now you can see two projects are created in SolutionExplorer with below name.<br /> \t<br />1. SilverLight_LoadDataUsingWCF<br />2. SilverLight_LoadDataUsingWCF.Web<br /><br />2.\tAdd ADO.NET entity Model(Model of M-V-VM Framwork)<br />            <br />•\tRight Click project SilverLight_LoadDataUsingWCF.Web from SolutionExplorer        and Choose <br />•\tADD-&gt; New Item -&gt; Ado.net Entity Data Model<br />                      <br />•\tGive Name : ContactModel.edmx<br />                   <br />•\tPress ADD button.<br />•\tEntity DataModel Wizard Dialogue box will open<br />•\tSelect Generate From Database and Press Next<br />•\tNow It will asking you for Selecting Database.                                                                                                                                            (I hope NorthWind Database is already hosted on your MSSQL Server if Not then download it and put it in your MSSQL Server) <br />•\tSelecting the NorthWind from ComboBox.(you can add new connection using New Connection… Button if it is not available in ComboBox)<br />•\tNow give Name to the Entity at very below in Dialogue box.<br />Name =&gt;  ContactModelEntity and Press Next Button.<br />•\tIt will Ask for Selecting Table (Which Database object do you want to include in your Model?)<br />•\tExpand the Tables Node and Select only Contacts Table and Press Finish Button.<br /><br />That’s it you have Created Model and Entity which will be used in WCF Service.<br /><br /><br />3.\tCreate WCF Services so we can consume it in our main project. (ContactMdoelEntity will consumed by this WCF service which we have created in Step2)<br /><br /><br /><br />•\tRight Click project SilverLight_LoadDataUsingWCF.Web from SolutionExplorer        and Choose <br />•\tADD-&gt; New Folder and Name It Service.<br />•\tRight Click Service Folder and Choose <br />•\tADD-&gt; New Item -&gt;select Silverlight-enabled WCF Service.<br />•\tName it with : ContactService.svc<br />•\tNow double click the ContactService.svc it will show you ContactService.svc.cs file.<br />•\tAnd Add below code inside ContactService class and remember don’t miss to add attribute <a href=\"https://silverlightloaddata.codeplex.com/wikipage?title=OperationContract&referringTitle=Home\">OperationContract</a> to GetContacts() Method.<br /><br /><br /><br /><a href=\"https://silverlightloaddata.codeplex.com/wikipage?title=OperationContract&referringTitle=Home\">OperationContract</a><br />        public List&lt;SubContact&gt; GetContacts()<br />        {<br />            <br />            using(ContactModeEntity context = new ContactModeEntity())<br />            {<br />                return (from c in context.Contacts<br />                         select new SubContact()<br />                             {<br />                                 ContactName = c.ContactName,<br />                                 ContactTitle = c.ContactTitle,<br />                                 ContactType = c.ContactType,<br />                                 Country = c.Country,<br />                                 <br />                             }).Take&lt;SubContact&gt;(25).ToList&lt;SubContact&gt;();<br />              <br />            }<br />        }<br /><br />        public class SubContact<br />        {<br />            public string ContactName { get; set; }<br />            public string ContactTitle { get; set; }<br />            public string ContactType { get; set; }<br />            public string Country { get; set; }<br />        }<br /><br /><br />•\tNow we have created WCF services and it can be consume by any application by just adding service reference inside the project.<br /><br />4.\tNow we will Add Service Reference in our main project(projectSilverLight_LoadDataUsingWCF) to consume WCF Service which we just have created in Step 3.<br /><br />•\tRight Click project projectSilverLight_LoadDataUsingWCF from SolutionExplorer        and Choose <br />•\tAdd Service Reference…<br />•\tIt will pop up Add Service Reference Dialogue Box.<br />•\tClick on Discover Button.<br />•\tIt will show you available Services in Service Pan. It will also show the service which we have created in Step 3(ContactService).<br />•\tYou can also see available operations in Operations Pan.<br />•\tSelect ContactService.svc .<br />•\tGive the namespace name to Service in textbox in Add Service Reference Dialogue box.<br />•\tHave a look at below image  <br /><br /><br /><br />5.\tWrite some code to use service so, add below code in MainPage.xaml.cs<br /><br />public partial class MainPage : UserControl<br />    {<br />        public MainPage()<br />        {<br />            InitializeComponent();<br />            Service.ContactServiceClient contactServiceClient = new Service.ContactServiceClient();<br /><br />            contactServiceClient.GetContactsCompleted += (s, ea) =&gt;<br />                {<br />                    dataGrid1.AutoGenerateColumns = true;<br />                    dataGrid1.ItemsSource = ea.Result;<br />                };<br />            contactServiceClient.GetContactsAsync();<br />        }<br />    }<br /><br />6.\tDownload Complete Demo Code<br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2011-10-17T04:07:55.18-07:00"
}
{
  "ProjectName": "SilverDuddeToolkitSL",
  "Title": "SilverDudde Toolkit for Silverlight",
  "Description": "SilverDudde Toolkit for Silverlight contains a collection of silverlight controls making life easier for developers. You'll no longer have to worry anymore because these controls will help you guys save your time. It's developed in C# for Silverlight 3.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1><b>Project Description</b></h1>\rSilverDudde Toolkit for Silverlight contains a collection of silverlight controls making life easier for developers. You&#39;ll no longer have to worry anymore because these controls will help you guys save your time. It&#39;s developed in C&#35; for Silverlight 3.<br />\n<h2><b><a href=\"http://silver-dude.webs.com/toolkit/SilverDudeToolkitDemo.htm\">Full Demo Page</a></b></h2>\r\n<h1>Controls included : -</h1>\r\n<h2><b>1. WaitIndicator</b></h2>\r\nWaitIndicator is used while waiting a process to complete, a kind of loading progress concept. <br /><br /><img src=\"http://silver-dude.webs.com/toolkit/images/blue/wait-black.png\" /><br /><br />Properties : WaitLoadingColor, WaitBackgroundColor<br />Methods   : Start(), Stop()<br /><br /><b>Usage</b><br /><br />XAML<br /><pre>\n &lt;toolkit:WaitIndicator x:Name=&quot;wait&quot; &gt;&lt;/toolkit:WaitIndicator&gt;\n</pre><br /><br />C#<br /> <pre> void MyAsynchronousCall()\n {     \n    wait.Start();\n    /* Do somethig here to make async call */\n }  \n\nvoid MyCompletedAsynchronousCall()\n{   \n   wait.Stop();\n   /* Do something here to process the result data */\n} </pre><br /><br /><br /><br />\n<h2><b>2. GlowButton</b></h2>\r\n<img src=\"http://silver-dude.webs.com/toolkit/images/blue/glowbuttons.png\" /><br /><br />Glow Button features a new and unique mouse over effect<br /><br />Properties : GlowText, GlowTextColor, GlowColor<br />Event(s)   : Click<br /><br /><b>Usage</b><br /><br />XAML<br /><pre>\n&lt;toolkit:GlowButton x:Name=&quot;glowbtn&quot; GlowText=&quot;Murad Mohd Zain&quot; HorizontalAlignment=&quot;Left&quot;  \nGlowColor=&quot;Purple&quot; GlowTextColor=&quot;White&quot; Width=&quot;100&quot; Height=&quot;25&quot; /&gt;\n</pre><br /><br />C#<br /><pre>\npublic MainPage()\n{\n   InitializeComponent();           \n   glowbtn.Click += new SL.SilverDude.Toolkit.GlowButton.ClickHandler(glowbtn_Clicked);            \n}\n\nprivate void glowbtn_Clicked()\n{\n   /* Do something here */\n}\n</pre><br /><br /><br />\n<h2><b>3. PagingPanel</b></h2>\r\n<img src=\"http://silver-dude.webs.com/toolkit/images/blue/paging.png\" /><br /><br />Paging panel is used to allow user to navigate item in with paging feature.<br /><br />Properties : PagingTextColor, PagingButtonColor<br />Methods   : InitPaging()<br /><br /><b>Usage</b><br /><br />XAML<br /><pre> &lt;ScrollViewer Height=&quot;300&quot; Width=&quot;300&quot;&gt;\n     &lt;StackPanel x:Name=&quot;sp&quot;&gt;&lt;/StackPanel&gt;\n&lt;/ScrollViewer&gt;\n        \n&lt;toolkit:PagingPanel x:Name=&quot;paging&quot; Width=&quot;300&quot; PagingTextColor=&quot;Black&quot; \nVerticalAlignment=&quot;Bottom&quot;  PagingButtonColor=&quot;Blue&quot;/&gt;\n</pre><br />C#<br /><pre>for (int i = 0; i &lt; 30; i++)\n{                \n    sp.Children.Add(new Button() { Content = &quot;Hello&quot; + i.ToString() });\n}\n     \npaging.ControlToValidate = sp;\npaging.ItemPerPage = 5;\npaging.InitPaging();\n\n</pre><br /><br /><br />\n<h2><b>4. SlidingPanel</b></h2>\r\n<img src=\"http://silver-dude.webs.com/toolkit/images/blue/sliding2.png\" /><br /><br />Sliding Panel is used to allow user to navigate item in an interactive manner.<br /><br />Properties : SlidingButtonColor<br />Methods : InitSliding()<br /><br /><b>Usage</b><br /><br />XAML<br /><pre>\n&lt;toolkit:SlidingPanel x:Name=&quot;slid&quot; Background=&quot;Transparent&quot; Width=&quot;500&quot; SlidingButtonColor=&quot;Blue&quot; \nHorizontalAlignment=&quot;Stretch&quot;&gt;&lt;/toolkit:SlidingPanel&gt;\n</pre><br />C#<br /><pre>\nfor (int i = 0; i &lt; 20; i++)\n{\n    slid.Children.Add(new Button() { Width = 150, Height = 225 });                \n}\nslid.InitSliding();\n</pre><br /><br /><br />\n<h2><b>5. SmartTextBox</b></h2>\r\n<img src=\"http://silver-dude.webs.com/toolkit/images/blue/smart.png\" /><br /><br />SmartTextBox is a universal textbox which combines a few features like normal textbox, password textbox and <br />textbox with search button.<br /><br />Properties : SmartText, SmartThemeColor, SearchEnabled, PasswordBox<br />Events     : ResetClick, SearchClick<br /><br /><b>Usage</b><br /><br /><i>Normal SmartTextBox</i><br />XAML<br /><pre>\n &lt;toolkit:SmartTextBox  x:Name=&quot;sch&quot; SearchEnabled=&quot;False&quot; PasswordBox=&quot;False&quot;  VerticalAlignment=&quot;Top&quot; \nHeight=&quot;26&quot; SmartThemeColor=&quot;Blue&quot;  HorizontalAlignment=&quot;Center&quot;/&gt;\n</pre><br /><br /><i>PasswordBox SmartTextBox</i><br />XAML<br /><pre>\n &lt;toolkit:SmartTextBox  x:Name=&quot;sch&quot; SearchEnabled=&quot;False&quot; PasswordBox=&quot;True&quot;  VerticalAlignment=&quot;Top&quot; \nHeight=&quot;26&quot; SmartThemeColor=&quot;Blue&quot;  HorizontalAlignment=&quot;Center&quot;/&gt;\n</pre><br /><br /><i>Search Enable SmartTextBox</i><br />XAML<br /><pre>\n &lt;toolkit:SmartTextBox  x:Name=&quot;sch&quot; SearchEnabled=&quot;True&quot; PasswordBox=&quot;False&quot;  VerticalAlignment=&quot;Top&quot; \nHeight=&quot;26&quot; SmartThemeColor=&quot;Blue&quot;  HorizontalAlignment=&quot;Center&quot;/&gt;\n</pre><br />C#<br /><pre>\n//Need to subscribe the SearchClick event                   \nsch.SearchClick += new SL.SilverDude.Toolkit.SmartTextBox.SearchClickHandler(sch_SearchClick);\n       \nvoid sch_SearchClick(string text)\n{\n    /* Do something here */\n}\n</pre><br /><br /><br />\n<h2><b>6. PopupMessageBox</b></h2>\r\n<img src=\"http://silver-dude.webs.com/toolkit/images/blue/popup.png\" /><br /><br />PopupMessageBox is used to display  a popup message in your application. <br /><br />Properties : PopupMessageIcon, PopupBackgroundColor, PopupMessageType, PopupButtonGlowColor<br />Methods   : Show()<br />Events       : OkButtonClick, YesButtonClick, NoButtonClick, CancelButtonClick, RefreshButtonClick<br /><br /><b>Usage</b><br /><br />XAML<br /><pre>&lt;toolkit:PopupMessageBox x:Name=&quot;popupmsg&quot; PopupMessageType=&quot;OK&quot; PopupMessageIcon=&quot;Exclamation&quot;   \nPopupBackgroundColor=&quot;Black&quot; PopupButtonGlowColor=&quot;Blue&quot; /&gt; \n</pre><br />There a a few options for PopupMessageType :<br /><b><i>OK, YesNo, YesCancel, OkCancel, Refresh</i></b> <br /><br />There a a few options for PopupMessageIcon :<br /><b><i>Exclamation, Information, Question, Error, Success, None</i></b><br /><br />C# <br /><pre>popupmsg.Show(&quot;Hello Murad&quot;); \n</pre><br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "Silverlight Toolkit,Silverlight Controls,Silverlight 3,murad,murad mohd zain,silverdude,wait indicator,sliding panel,paging panel,sliding,paging,glow button,popup,messagebox,smart textbox,slidingpanel,pagingpanel,waitindicator,smarttextbox,popupmessage,",
  "LastEdited": "2010-06-24T09:06:28.817-07:00"
}
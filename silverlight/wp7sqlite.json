{
  "ProjectName": "wp7sqlite",
  "Title": "C# Sqlite For WP7",
  "Description": "C# Sqlite Port for Windows phone 7 and possibly Silverlight 3, 4. The core engine was slightly modified to be used with IsolatedStorage and SqliteClient were ported by using missing codes from Mono project in order to maximize usability and portability from desktop.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><span style=\"color:#ff0000\"><strong>NOTE: This project was a solution long before Windows Phone have built-in Database Support. You should be using Local Database support provided by Windows Phone itself!</strong></span></p>\r\n<p>&nbsp;</p>\r\n<p><strong>Project Description</strong> <br>\r\nC# Sqlite Port for Windows phone 7 and possibly Silverlight 3, 4. The core engine was slightly modified to be used with IsolatedStorage and SqliteClient were ported by using missing codes from Mono project in order to maximize usability and portability from\r\n desktop.</p>\r\n<p>Based on latest source of <a title=\"http://code.google.com/p/csharp-sqlite/\" href=\"http://code.google.com/p/csharp-sqlite/\">\r\nhttp://code.google.com/p/csharp-sqlite/</a> (revision <strong>78fcda0bf7</strong>)</p>\r\n<p><strong>Summary of Changes:</strong></p>\r\n<ul>\r\n<li>Conversion from ArrayList, HashTable to List and Dictionary </li><li>Removal of functions that use DataTable </li><li>Filled in Missing ADO.NET classes, enums from <a href=\"https://github.com/mono/mono\" target=\"_blank\">\r\nProject Mono Source</a> </li><li>Filled in Missing ASCII encoding class from <a title=\"http://www.hardcodet.net/2010/03/silverlight-text-encoding-class-generator\" href=\"http://www.hardcodet.net/2010/03/silverlight-text-encoding-class-generator\">\r\nhttp://www.hardcodet.net/2010/03/silverlight-text-encoding-class-generator</a> </li><li>Conversion from normal file IO to IsolatedStorage <br>\r\n<span style=\"color:#ff0000\">(NOTE: it will not work with files added as resource/content in the application &ndash; you need to copy it to\r\n<strong>IsolatedStorage</strong> first)</span> </li><li>Fixed Issues of core engine which does not close the file properly and prevent deletion of journal\r\n</li></ul>\r\n<p><br>\r\n<a href=\"http://download.codeplex.com/download?ProjectName=wp7sqlite&DownloadId=191373\"><img title=\"image\" src=\"http://download.codeplex.com/download?ProjectName=wp7sqlite&DownloadId=191374\" border=\"0\" alt=\"image\" width=\"300\" height=\"545\" style=\"padding-left:0px; padding-right:0px; display:inline; padding-top:0px; border:0px\"></a></p>\r\n<p>General Usage pattern follows normal ADO.NET classes, however &ndash; SqliteClient did not inheirted or implements any ADO.NET interfaces or classes.</p>\r\n<p><strong>Some Recommendations:</strong></p>\r\n<ul>\r\n<li>Queries are converted to ASCII (ISO-8859-1) which means all international characters will not work.\r\n<span style=\"background-color:#ffff00\"><strong>Always use Parameter to store data.</strong></span>\r\n</li><li><span style=\"background-color:#ffff00\">&nbsp;</span>Phones use Flash based storage which works well for large block access &ndash; always use transaction. It seems like internally, SQLite would create a journal file every time there is a change to database,\r\n using transaction will only create one journal file per transaction. Without transaction, journal file gets created every time.\r\n</li><li>Closing the connection will also close the database and disposal of associated stream, there is no connection pooling.\r\n</li></ul>\r\n<p><strong>Further Improvements:</strong></p>\r\n<ul>\r\n<li>Storing Journal using MemoryStream instead of IsolatedStorage file stream. Have to verify whether journal file were used to recover anything.\r\n</li></ul>\r\n<p>&nbsp;</p>\r\n<div id=\"scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:87a35ab6-660a-4f78-8240-059aaf0b1214\" style=\"margin:0px; display:inline; float:none; padding:0px\">\r\n<div style=\"border:#000080 1px solid; color:#000; font-family:'Courier New',Courier,Monospace; font-size:10pt\">\r\n<div style=\"background:#000080; color:#fff; font-family:Verdana,Tahoma,Arial,sans-serif; font-weight:bold; padding:2px 5px\">\r\nExtension</div>\r\n<div style=\"background:#ddd; max-height:400px; overflow:auto\">\r\n<ol style=\"background:#ffffff; margin:0 0 0 2.5em; padding:0 0 0 5px; white-space:nowrap\">\r\n<li><span style=\"color:#2b91af\">IsolatedStorageFile</span> isf = <span style=\"color:#2b91af\">\r\nIsolatedStorageFile</span>.GetUserStoreForApplication(); </li><li style=\"background:#f3f3f3\">isf.DeleteFile(<span style=\"color:#a31515\">&quot;test.db&quot;</span>);\r\n</li><li>&nbsp; </li><li style=\"background:#f3f3f3\"><span style=\"color:#0000ff\">using</span> (<span style=\"color:#2b91af\">SqliteConnection</span> conn =\r\n<span style=\"color:#0000ff\">new</span> <span style=\"color:#2b91af\">SqliteConnection</span>(<span style=\"color:#a31515\">&quot;Version=3,uri=file:test.db&quot;</span>))\r\n</li><li>{ </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;conn.Open(); </li><li>&nbsp; </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#0000ff\">using</span> (<span style=\"color:#2b91af\">SqliteCommand</span> cmd = conn.CreateCommand())\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;{ </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.CommandText =\r\n<span style=\"color:#a31515\">&quot;CREATE TABLE test ( [id] INTEGER PRIMARY KEY, [col] INTEGER UNIQUE, [col2] INTEGER, [col3] REAL, [col4] TEXT, [col5] BLOB)&quot;</span>;\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.ExecuteNonQuery(); </li><li style=\"background:#f3f3f3\">&nbsp; </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Transaction = conn.BeginTransaction();\r\n</li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.CommandText =\r\n<span style=\"color:#a31515\">&quot;INSERT INTO test(col, col2, col3, col4, col5) VALUES(@col, @col2, @col3, @col4, @col5);SELECT last_insert_rowid();&quot;</span>;\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters.Add(<span style=\"color:#a31515\">&quot;@col&quot;</span>,\r\n<span style=\"color:#0000ff\">null</span>); </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters.Add(<span style=\"color:#a31515\">&quot;@col2&quot;</span>,\r\n<span style=\"color:#0000ff\">null</span>); </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters.Add(<span style=\"color:#a31515\">&quot;@col3&quot;</span>,\r\n<span style=\"color:#0000ff\">null</span>); </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters.Add(<span style=\"color:#a31515\">&quot;@col4&quot;</span>,\r\n<span style=\"color:#0000ff\">null</span>); </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters.Add(<span style=\"color:#a31515\">&quot;@col5&quot;</span>,\r\n<span style=\"color:#0000ff\">null</span>); </li><li style=\"background:#f3f3f3\">&nbsp; </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af\">DateTime</span> start =\r\n<span style=\"color:#2b91af\">DateTime</span>.Now; </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#0000ff\">this</span>.lstResult.Items.Add(<span style=\"color:#a31515\">&quot;Inserting 100 Rows with transaction&quot;</span>);\r\n</li><li>&nbsp; </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#0000ff\">for</span> (<span style=\"color:#0000ff\">int</span> i = 0; i &lt; 100; i&#43;&#43;)\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters[<span style=\"color:#a31515\">&quot;@col&quot;</span>].Value = i;\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters[<span style=\"color:#a31515\">&quot;@col2&quot;</span>].Value = i;\r\n</li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters[<span style=\"color:#a31515\">&quot;@col3&quot;</span>].Value = i * 0.515;\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters[<span style=\"color:#a31515\">&quot;@col4&quot;</span>].Value =\r\n<span style=\"color:#a31515\">&quot;สวัสดี な. あ &middot; か &middot; さ &middot; た &middot; な &middot; は &middot; ま &middot; や &middot; ら &middot; わ. 形容詞 hello &quot;</span> &#43; i;\r\n</li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Parameters[<span style=\"color:#a31515\">&quot;@col5&quot;</span>].Value =\r\n<span style=\"color:#2b91af\">Encoding</span>.UTF8.GetBytes(<span style=\"color:#a31515\">&quot;สวัสดี&quot;</span>);\r\n</li><li>&nbsp; </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#0000ff\">object</span> s = cmd.ExecuteScalar();\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Transaction.Commit();\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.Transaction = <span style=\"color:#0000ff\">\r\nnull</span>; </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#0000ff\">this</span>.lstResult.Items.Add(<span style=\"color:#a31515\">&quot;Time taken :&quot;</span> &#43;\r\n<span style=\"color:#2b91af\">DateTime</span>.Now.Subtract( start ).TotalMilliseconds &#43;\r\n<span style=\"color:#a31515\">&quot; ms.&quot;</span>); </li><li>&nbsp; </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cmd.CommandText =\r\n<span style=\"color:#a31515\">&quot;SELECT * FROM test&quot;</span>; </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#0000ff\">using</span> (<span style=\"color:#2b91af\">SqliteDataReader</span> reader = cmd.ExecuteReader())\r\n</li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#0000ff\">while</span> (reader.Read())\r\n</li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#0000ff\">var</span> bytes = (<span style=\"color:#0000ff\">byte</span>[])reader.GetValue(5);\r\n</li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#0000ff\">this</span>.lstResult.Items.Add(<span style=\"color:#0000ff\">string</span>.Format(<span style=\"color:#a31515\">&quot;{0},{1},{2},{3},{4},\r\n {5}&quot;</span>, </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.GetInt32(0),\r\n</li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.GetInt32(1),\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.GetInt32(2),\r\n</li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.GetDouble(3),\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reader.GetString(4),\r\n</li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:#2b91af\">Encoding</span>.UTF8.GetString(bytes, 0, bytes.Length)));\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} </li><li>&nbsp; </li><li style=\"background:#f3f3f3\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;conn.Close();\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;} </li><li style=\"background:#f3f3f3\">} </li></ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2012-04-23T13:56:16.557-07:00"
}
{
  "ProjectName": "silverlightwebpart",
  "Title": "Generic webpart for hosting Silverlight content on SharePoint sites (WSS,MOSS)",
  "Description": "This is a generic webpart for hosting Silverlight content on WSS 30 & MOSS 2007 sites. The objective of creating a generic webpart was to make it easy for users to enrich their web sites with Silverlight content without having to deploy a new webpart each time.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>About Generic Silverlight Host WebPart</h1>\rSharePoint and Silverlight when combined together provide a powerful platform for building Rich Internet Applications. The Generic Silverlight WebPart was inspired by the need to aovid going back to the SharePoint administrator and begging for a new webpart to be deployed each time you wanted to host some silverlight content. The focus was also on improving the user experience while editing the initialization parameters. A custom popup dialog has been provided to where an user can edit a comma separated string to specify the initializaiton parameters. Additionally, there is also a popup dialog that renders a Silverlight user interface to let the user edit the initialization parameters in a Grid like interface.<br />\n<h1>Quick Install Guide</h1>\r<ul><li>If not done already, please add a MIME type entry for .XAP file extension as described in the section below.</li>\n<li>Download <b>SharePointSilverlightHosting.wsp</b></li>\n<li>Use <b>stsadm -o addsolution -filename {path to SharePointSilverlightHosting.wsp} </b> , followed by deployment to the web application of your choice using <b>Central Administration</b> or <b>stsadm</b> .</li>\n<li>As an example, I have provided a dummy <b>HelloWorld.xap</b> to help you test the deployment. This could be any Silverlight Application</li>\n<li>Download <b>HelloWorld.xap</b>file from CodePlex and upload it to a document library in your SharePoint web site.</li>\n<li>Create a webpart page and add an instance of the <b>GenericSilverlightWebPart</b> to the page  </li></ul>\n<img src=\"http://saurabhmoss.files.wordpress.com/2010/02/webparttitle.jpg\" />\n<ul><li>In the webpart properties pane, select the field <b>Path to Silverlight Application</b> and provide the relative/absolute URL to the .XAP file which you have uploaded in the  previous step.</li>\n<li>Select the field <b>Initialization Parameters</b> to provide the name-value pairs that are required for your Silverlight Application to function. </li></ul>\n<img src=\"http://saurabhmoss.files.wordpress.com/2010/02/initparams.jpg\" /><br />\n<h1>Enabling IIS to allow .XAP file types</h1>\r<ul><li>MIME types in IIS needs to be configured such that it can allow the smooth passage of files with the extension .XAP.</li>\n<li>Should not take more than a couple of minutes. Please follow the steps in this article <a href=\"http://learn.iis.net/page.aspx/262/configuring-iis-for-silverlight-applications/\">http://learn.iis.net/page.aspx/262/configuring-iis-for-silverlight-applications/</a> .</li></ul>\n<h1>Custom WebPart Properties</h1>\r<ul><li><b>Plugin Width &amp; Height</b> -  This will govern the size of the Silverlight plug-in. To control the overall surface area of the webpart, please modify the Width &amp; Height under the <b>Appearance</b> category.</li>\n<li><b>InitializatIon Parameters</b> - You can use the popup editor OR click on the button <b>Init Params - Advanced</b> to edit the name-value pairs that will be fed into the Silverlight Application. </li></ul>\n<img src=\"http://saurabhmoss.files.wordpress.com/2010/02/sl_initparams.jpg\" /><br />\n<h1>Installing the Silverview Application from MSDN</h1>\r<ul><li>This is a wonderful Silverlight sample application that showcases the strengths of Silverlight &amp; SharePoint web services</li>\n<li>The original article can be accessed from the MSDN <a href=\"http://code.msdn.microsoft.com/ssv\">site</a>. The compiled .XAP can also be downloaded from the <b>Downloads</b> section of this project.</li>\n<li>Silverview uses the out of box SharePoint web services to implement a rich Explorer like user interface for navigating through document libraries.</li></ul>\n<img src=\"http://code.msdn.microsoft.com/download?ProjectName=ssv&amp;DownloadId=4757\" />\n<ul><li>To configure Silverview, the URL of the site needs to be specified whose Document libraries will be displayed within the application. This value should be specified using the <b>SPURL</b> init params property.</li>\n<li>Example:  <b>SPURL=http://myserver/sites/SomeSite</b></li></ul></div><div class=\"ClearBoth\"></div>",
  "TagList": "Sharepoint,Silverlight,MOSS,WSS 3.0,",
  "LastEdited": "2010-03-05T13:21:59.713-08:00"
}
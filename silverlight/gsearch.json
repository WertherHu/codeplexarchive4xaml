{
  "ProjectName": "gsearch",
  "Title": "GSearch: Google search for .NET 3.5 and Silverlight 2",
  "Description": "GSearch is a modular class library for conducting many types of Google searches from .NET 3.5 and Silverlight 2 managed code. GSearch supports blog, book, image, location, news, patent, video, and web searches, returning the results in easy-to-traverse collections. Language: C#.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h2>Project Description</h2>\rGSearch is a modular class library for conducting many types of Google searches from .NET 3.5 and Silverlight 2 managed code. GSearch supports blog, book, image, location, news, patent, video, and web searches, returning the results in easy-to-traverse collections. Language&#58; C&#35;.\n<h2>Overview</h2>\r<b>Update</b>: I&#39;ve started work on version 1.2 of the GSearch libraries, which will add support for new image and web search arguments, as well as make some improvements to the code structure and bring everything into line with the current state of Google&#39;s json API. I have started a <a href=\"http://gsearch.codeplex.com/Thread/View.aspx?ThreadId=203620\">discussion</a> topic to keep track of the work and collect any ideas GSearch users have. Please have a look and comment.<br /><br />GSearch arose out of a silly idea I had for a Silverlight 2 game; just something to do for an exercise. The idea was to take search terms from the user, search Google images, and arrange the results into a memory grid. In the process of writing that game I became familiar with the Google search API, and once it was done I decided to extend the search code into a library covering the whole API. You can play the game <a href=\"http://www.markbetz.net/sl/gmemory\">here</a> if you&#39;re interested, and have Silverlight 2.0 installed.<br /><br />Google formerly supported a SOAP webservice which is now being somewhat deprecated in favor of the RESTful service, which returns a stream of JSON objects rather than the very verbose SOAP responses. GSearch deserializes the JSON results using DataContractJsonSerializer, which is why it is a .NET 3.5/Silverlight 2 library. You can read more about the Google API on their <a href=\"http://code.google.com/apis/ajaxsearch/documentation/reference.html\">documentation site</a>.<br /><br /><b>Note</b> that there are two versions of the libraries. The default release for this project, linked at right, is the .NET 3.5 assemblies. If you want to use GSearch in a Silverlight application you&#39;ll need the GSearch.SL2 runtimes release. There is very little difference between the two libraries, but Silverlight needs to have the assemblies built against its runtime.\n<h2>Architecture</h2>\rIn order to keep the payload at a minimum for Silverlight applications, and just provide overall flexibility, GSearch is structured as a set of small assemblies. The GSearch.Core.dll assembly implements the core search engine and does almost all of the work. It weighs in at around 21k and is needed by all applications that want to use GSearch. There are eight smaller assemblies that perform the specific search types. Their names are self-evident, i.e. GSearch.Blog.dll. All these assemblies do is implement classes that provide a strongly-typed layer over the core search methods, search arguments, and event arguments. <br /><br />The classes are very simple to use. Release documentation includes a compiled class reference for the GSearch namespace, as well as a readme.txt file with basic usage examples.</div><div class=\"ClearBoth\"></div>",
  "TagList": "Silverlight 2.0,Google Search,.NET 3.5,Library,wjts,http://www.codeplex.,http://books.google.,Google API,",
  "LastEdited": "2010-03-02T19:20:39.36-08:00"
}
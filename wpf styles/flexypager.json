{
  "ProjectName": "flexypager",
  "Title": "Flexy Pager for ASP.NET WebForm & MVC",
  "Description": "A pager generator for ASP.NET WebForm and MVC. The generated pager is in HTML Table Format. Support CSS styling. Developers can use own flavor of CSS style.",
  "MovedLink": "https://github.com/adriancs2/FlexyPager.net",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<h2>We have moved!</h2>\r\n<div style=\"padding:10px; background:lightpink\">We have moved to new site. This site is no more maintained. Please visit new site at:\r\n<a href=\"https://github.com/adriancs2/FlexyPager.net\">https://github.com/adriancs2/FlexyPager.net\r\n</a>. Thanks.</div>\r\n<p><strong>Screenshots &amp; Examples:</strong></p>\r\n<p><img src=\"/projects/flexypager/7344ed22-4d6e-47e9-af5c-44d8a6d31d49\" alt=\"\" width=\"493\" height=\"525\"></p>\r\n<h2>Content</h2>\r\n<ol>\r\n<li>Introduction </li><li>Using the Code </li><li>Page URL Formatting </li><li>Simple CSS Customization </li><li>History </li></ol>\r\n<h2>1. Introduction</h2>\r\n<p>This is a pager generator for ASP.NET WebForm &amp; MVC. It's basically generates a HTML Table and it is styled/colored by CSS.</p>\r\n<h2>2. Using the Code</h2>\r\n<p><img src=\"/projects/flexypager/f0b07048-5761-4f81-abcc-4d1abc04d054\" alt=\"\" width=\"491\" height=\"167\"></p>\r\n<p>C# Code behind examples:</p>\r\n<pre lang=\"cs\">FlexyPager fp = new FlexyPager();\nfp.PageUrlFormat = &quot;Default.aspx?page={p}&quot;;\nfp.TotalRecords = 1000;\nfp.TotalRecordsPerPage = 100;\nfp.TotalSlots = 10;\nfp.CurrentPage = 1;\nfp.CssClass = &quot;pager_simple_orange&quot;;\nfp.CssClassCurrentPage = &quot;active&quot;;\nfp.FirstPageDisplayText = &quot;First&quot;;\nfp.LastPageDisplayText = &quot;Last&quot;;\n\nstring pagerHtml = fp.GetHtml();</pre>\r\n<p>Example of rendering result:</p>\r\n<p><img src=\"/projects/flexypager/b135e757-4fe8-4712-bdc2-b471249c615a\" alt=\"\" width=\"441\" height=\"34\"></p>\r\n<p>This is the generated HTML Table from above code:</p>\r\n<pre lang=\"html\">&lt;div class=&quot;pager_simple_orange&quot;&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;td class=&quot;&quot;&gt;&lt;a href=&quot;Default.aspx?page=1&quot;&gt;First&lt;/a&gt;&lt;/td&gt;\n            &lt;td class=&quot;active&quot;&gt;&lt;a href=&quot;Default.aspx?page=1&quot;&gt;1&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=2&quot;&gt;2&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=3&quot;&gt;3&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=4&quot;&gt;4&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=5&quot;&gt;5&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=6&quot;&gt;6&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=7&quot;&gt;7&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=8&quot;&gt;8&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=9&quot;&gt;9&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=10&quot;&gt;10&lt;/a&gt;&lt;/td&gt;\n            &lt;td class=&quot;&quot;&gt;&lt;a href=&quot;Default.aspx?page=100&quot;&gt;Last&lt;/a&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;</pre>\r\n<p>You'll noticed that the table is wrapped inside a <code>DIV</code> with the CSS Class &quot;<code>pager_simple_orange</code>&quot;. This is the content of the CSS Class:</p>\r\n<pre lang=\"css\">.pager_simple_orange td{\n    padding: 1px;\n}\n\n.pager_simple_orange a{\n    text-decoration: none;\n    font: 12px Arial;\n    font-weight: normal;\n    color: black;\n    display: block;\n    padding: 5px 10px;\n    border: 1px solid #fe8c00;\n    background-color: #ffd9b4;\n}\n\n.pager_simple_orange .active a, \n.pager_simple_orange a:hover{\n    border: 1px solid black;\n    background-color: #fe8c00;\n}</pre>\r\n<h2>2. Page URL Formatting</h2>\r\n<p>This refers to the URL address (Link) of the page numbers.</p>\r\n<p><code>{p}</code> will be replaced by page numbers.</p>\r\n<p>Example URL 1: http://www.mywebsite.com/product/page-1</p>\r\n<p>Code:</p>\r\n<pre lang=\"cs\">fp.PageUrlFormat = &quot;product/page-{p}&quot;;\n// or\nfp.PageUrlFormat = &quot;http://www.mywebsite.com/product/page-{p}&quot;;</pre>\r\n<p>Example URL 2: http://www.mywebsite.com/searchmember.aspx?page=1</p>\r\n<p>Code:</p>\r\n<pre lang=\"cs\">fp.PageUrlFormat = &quot;searchmember.aspx?page={p}&quot;;\n// or\nfp.PageUrlFormat = &quot;http://www.mywebsite.com/searchmember.aspx?page={p}&quot;;</pre>\r\n<p>Example URL 3: http://www.mywebsite.com/Search.aspx?page=1&amp;teamid=2&amp;locationid=3</p>\r\n<p>Code:</p>\r\n<pre lang=\"cs\">fp.PageUrlFormat = &quot;Search.aspx?page={p}&amp;teamid=2&amp;locationid=3&quot;;\n// or\nfp.PageUrlFormat = &quot;http://www.mywebsite.com/Search.aspx?page={p}&amp;teamid=2&amp;locationid=3&quot;;</pre>\r\n<p>If you want to redefine the format of the generated URL (you have your own formula or maybe you want to encrypt the query string), you can modify the source code. Look for this block:</p>\r\n<pre lang=\"cs\">private string GenerateUrl(int pageNumber)\n{\n    return PageUrlFormat.Replace(&quot;{p}&quot;, pageNumber.ToString());\n}</pre>\r\n<p>and modify it to your flavor.</p>\r\n<h2>4. Simple CSS Customization</h2>\r\n<p>Here, I will introduce some simple customization of CSS for this pager. There are four entries (public string properties) in the pager that can insert CSS Class:</p>\r\n<ul>\r\n<li>CssClass </li><li>CssClassCurrentPage </li><li>CssClassFirstPage </li><li>CssClassLastPage </li></ul>\r\n<p>Let's take this as example of code with FlexyPager:</p>\r\n<pre lang=\"cs\">FlexyPager fp = new FlexyPager();\nfp.CssClass = &quot;aaa&quot;;\nfp.CssClassCurrentPage = &quot;bbb&quot;;\nfp.CssClassFirstPage = &quot;ccc&quot;;\nfp.CssClassLastPage = &quot;ddd&quot;;</pre>\r\n<p>Location of the class in generated HTML (look for aaa, bbb, ccc and ddd):</p>\r\n<pre lang=\"html\">&lt;div class=&quot;aaa&quot;&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;td class=&quot;ccc&quot;&gt;&lt;a href=&quot;Default.aspx?page=1&quot;&gt;First&lt;/a&gt;&lt;/td&gt;\n            &lt;td class=&quot;bbb&quot;&gt;&lt;a href=&quot;Default.aspx?page=1&quot;&gt;1&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=2&quot;&gt;2&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=3&quot;&gt;3&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=4&quot;&gt;4&lt;/a&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;a href=&quot;Default.aspx?page=5&quot;&gt;5&lt;/a&gt;&lt;/td&gt;\n            &lt;td class=&quot;ddd&quot;&gt;&lt;a href=&quot;Default.aspx?page=100&quot;&gt;Last&lt;/a&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n&lt;/div&gt;</pre>\r\n<p>Now, let us make the link (html tag of &quot;<code>a</code>&quot;) becomes a button. This is how the CSS looks like:</p>\r\n<pre lang=\"css\">a {\n    text-decoration: none;\n    font: 12px Arial;\n    font-weight: normal;\n    color: black;\n    display: block;\n    padding: 5px 10px;\n    border: 1px solid #fe8c00;\n    background-color: #ffd9b4;\n}</pre>\r\n<p><code>text-decoration: none</code> - This will hide the underscore of the <code>\r\na</code> (the link)</p>\r\n<p><code>font-weight: normal</code> - Normal, means don't bold the text (You can bold it, of course).</p>\r\n<p><code>color: black</code> - Color of text</p>\r\n<p><code>display: block</code> - Make the link (the &quot;<code>a</code>&quot;) becomes a rectangular block. It becomes a button now.</p>\r\n<p><code>padding: 5px 10px</code> - Used to define the size of the block.</p>\r\n<p><img src=\"/projects/flexypager/9265fb3c-a4e8-44e7-b72c-4e1b5e9f35a8\" alt=\"\" width=\"308\" height=\"144\"></p>\r\n<p><code>border</code> - Defines the color of the border.</p>\r\n<p><code>background-color</code> - Defines the color of the background of the block</p>\r\n<p>If we use the above CSS code, it will change all the links (html tag of <code>\r\na</code>) in the whole page to meet this behavior. This is not what we want. We only want the links (the &quot;<code>a</code>&quot;) in the pager to behave like this. Therefore we need to add the CSS Class of the DIV (which wrap the table) -&quot;<code>aaa</code>&quot; before\r\n the &quot;<code>a</code>&quot;.</p>\r\n<p>Then, the CSS will look like this:</p>\r\n<pre lang=\"css\">.aaa a{\n    text-decoration: none;\n    font: 12px Arial;\n    font-weight: normal;\n    color: black;\n    display: block;\n    padding: 5px 10px;\n    border: 1px solid #fe8c00;\n    background-color: #ffd9b4;\n}</pre>\r\n<p>This line:</p>\r\n<pre lang=\"text\">.aaa a</pre>\r\n<p>means: All the <code>a</code> within the block of <code>aaa</code> will behave like this, else won't.</p>\r\n<p>For the mouse hover effect, add the keyword of <code>:hover</code> to the specific CSS Class:</p>\r\n<pre lang=\"css\">.aaa a:hover{\n    ....\n    /* define some behaviour */\n    ....\n}</pre>\r\n<p>The CSS Class of <code>bbb</code> indicates the <strong>current active page</strong>. Lets make it has the same visual effect as\r\n<code>a:hover</code>. Multiple class can be joined together by separating it with comma:</p>\r\n<pre lang=\"css\">.aaa a:hover, .aaa .bbb{\n    ....\n    /* define some behaviour */\n    ....\n}</pre>\r\n<p>For the <code>FirstPage</code> and <code>LastPage</code>, you can display image in stead of text. You just define it in CSS. Example:</p>\r\n<p>C#,</p>\r\n<pre lang=\"cs\">// assign blank value\nfp.FirstPageDisplayText = &quot;&quot;;\nfp.LastPageDisplayText = &quot;&quot;;</pre>\r\n<p>CSS,</p>\r\n<pre lang=\"css\">.aaa .ccc a{\n    display:block;\n    padding: 5px 10px;\n    background-image: url('/images/leftArrow.gif');\n    background-repeat: no-repeat;\n    background-color: white;\n}\n\n.aaa .ddd a{\n    display:block;\n    padding: 5px 10px;\n    background-image: url('/images/rightArrow.gif');\n    background-repeat: no-repeat;\n    background-color: white;\n}</pre>\r\n<p>With advance CSS3 elements, you can make the pager looks very fancy and beautiful. It can even animate. There are some ready made CSS examples available in the demo app. You can have a look at it.</p>\r\n<h2>5. History</h2>\r\n<ul>\r\n<li>25 March 2014 - Minor typo update/correction </li><li>23 March 2014 - Initial work </li></ul>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2017-11-22T19:35:53.013-08:00"
}
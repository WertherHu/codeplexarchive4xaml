{
  "ProjectName": "sl3routedevents",
  "Title": "RoutedEvents implementation for Silverlight 3 including WPF compatability",
  "Description": "Implementation of custom routed events for silverlight 3, including a common compatablity layer so the same code base works for both silverlight and WPF.\r\n\r\nThis includes support for RegisterClassHandler/AddHandler implementations. Currently supports direct and bubble routing.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Implementation of custom routed events for silverlight 3, including a common compatablity layer so the same code base works for both silverlight and WPF.<br /><br />This includes support for RegisterClassHandler&#47;AddHandler implementations. Currently supports direct and bubble routing.<br /><br />Enjoy !!<br />Andrew Whiddett and all the Development team (special thanks to Josh Wagoner/Jonathan Russ/Laurent Bugnion/Josh Smith)<br />And all from IdentityMine: <a href=\"http://www.identitymine.com\">http://www.identitymine.com</a><br /><br /><b>Creating custom Routed events really make life a lot easier - and is one of the superstars of the .net 3 platfom (we love you Microsoft) ..We thought that this functionality should be available to all Silverlight 3 developers : </b><br />\n<h1>Quick summary of implementation:-</h1>\r\n<u>Quick Quick Summary - Add &#39;Ex&#39; to the end of the routed event classes - e.g. EventManagerEx/RoutedEventEx/RoutedEventArgsEx and the extension methods on UIElement e.g. RaiseEventEx/AddHandlerEx</u><br />\n<h2>Registering your custom routed event:-</h2>\r\n<b>(Attached event example shown)</b><br /><br />_       public delegate void HoverEnterRoutedEventHandler(object sender, RoutedEventArgsEx e);<br />        public static readonly RoutedEventEx HoverEnterEvent = EventManagerEx.RegisterRoutedEvent(&quot;HoverEnter&quot;, RoutingStrategy.Bubble, typeof(HoverEnterRoutedEventHandler), typeof(UserControl1));<br /><br />        public static void AddHoverEnterHandler(DependencyObject o, HoverEnterRoutedEventHandler handler)<br />        {<br />            ((UIElement)o).AddHandlerEx(HoverEnterEvent, handler);<br />        }<br /><br />        public static void RemoveHoverEnterHandler(DependencyObject o, HoverEnterRoutedEventHandler handler)<br />        {<br />            ((UIElement)o).RemoveHandlerEx(HoverEnterEvent, handler);<br />        }<br />_<br />\n<h2>Raising an event:</h2>\r\n_ private void OnClick(object sender, System.Windows.RoutedEventArgs e)<br /> {<br />   \tthis.RaiseEventEx(new RoutedEventArgsEx(HoverEnterEvent));<br /> }<br />_<br />\n<h2>Subscription to an event:</h2>\r\n<b>(Class handler style):</b><br /><br />_public MainPage()<br />{<br />\t// Required to initialize variables<br />\tInitializeComponent();<br /><br />              EventManagerEx.RegisterClassHandler(typeof(MainPage), UserControl1.HoverEnterEvent, new UserControl1.HoverEnterRoutedEventHandler(OnHover));<br />}<br />_<br /><br /><b>(Add Handler style):</b><br /><br />_private void OnLoaded(object sender, System.Windows.RoutedEventArgs e)<br />{<br />          UserControl1.AddHoverEnterHandler(this, new UserControl1.HoverEnterRoutedEventHandler(OnHover));<br />}<br />_<br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "RoutedEvents,Silverlight,Silverlight 3,WPF,.NET 3.5,WPF Silverlight,IdentityMine,Andrew Whiddett,HintonBR,Silverlight 3.0,",
  "LastEdited": "2009-05-15T13:38:13.253-07:00"
}
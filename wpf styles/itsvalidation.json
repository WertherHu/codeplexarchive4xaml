{
  "ProjectName": "itsvalidation",
  "Title": "Its.Validation",
  "Description": "A C# DSL for writing rules in a composable, functional style.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Project description</h1>\rA C&#35; DSL for writing rules in a composable, functional style.<br />\n<h3>Define a validation rule:</h3>\r\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> wontGoBadTooSoon = Validate.That&lt;Fruit&gt;(fruit =&gt; fruit.ExpirationDate &gt; DateTime.Now.AddDays(5));\n<span style=\"color:Blue;\">bool</span> isValid = wontGoBadTooSoon.Check(lemon);\r\n</pre></div>\n<h3>Compose it into other rules:</h3>\r\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> basketWontGoBadTooSoon = Validate.That&lt;FruitBasket&gt;(basket =&gt;\n                                                        basket.Fruits.Every(wontGoBadTooSoon));\r\n</pre></div>\n<h3>Get information from the rule for display:</h3>\r\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> wontGoBadTooSoon = Validate.That&lt;Fruit&gt;(fruit =&gt;\n                                            fruit.ExpirationDate.As(<span style=\"color:#A31515;\">&quot;expiration&quot;</span>) &gt; DateTime.Now.AddDays(5));\r\n</pre></div>\n<h3>Transform and format the information for display:</h3>\r\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> wontGoBadTooSoon = Validate.That&lt;Fruit&gt;(fruit =&gt;\n                                            fruit.As(<span style=\"color:#A31515;\">&quot;fruitname&quot;</span>, f =&gt; f.Name).ExpirationDate.As(<span style=\"color:#A31515;\">&quot;expiration&quot;</span>) &gt;\n                                            DateTime.Now.AddDays(5.As(<span style=\"color:#A31515;\">&quot;days_in_transit&quot;</span>)))\n                               .WithMessage(<span style=\"color:#A31515;\">&quot;A {fruitname} that expires on {expiration:D} won&#39;t last for {days_in_transit} days.&quot;</span>);\n\n<span style=\"color:Green;\">// OR localized:</span>\n\n                               .WithMessage(Resources.BasketMustPreventScurvy);\r\n</pre></div>\n<h3>Combine rules:</h3>\r\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> plan = <span style=\"color:Blue;\">new</span> ValidationPlan&lt;FruitBasket&gt;\n               {\n                    basketHasFruit,\n                    basketWontGoBadTooSoon\n               };\r\n</pre></div>\n<h3>Define rule dependencies:</h3>\r\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> plan = <span style=\"color:Blue;\">new</span> ValidationPlan&lt;FruitBasket&gt;\n               {\n                    basketHasFruit,               \n                    basketWontGoBadTooSoon.When(basketHasFruit)\n               };\r\n</pre></div>\n<h3>Test your validation plan:</h3>\r\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> basket = <span style=\"color:Blue;\">new</span> FruitBasket();\n\n<span style=\"color:Blue;\">var</span> failures = plan.Execute(basket);\n\nAssert.That(\n    failures.Count(f =&gt; f.Message == <span style=\"color:#A31515;\">&quot;Your basket must contain some fruit.&quot;</span>),\n    Is.EqualTo(1));\r\n</pre></div>\n<h3>Extend the validation results with your own types:</h3>\r\n<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> upcCodeExists = Validation.That&lt;Fruit&gt;(fruit =&gt; database.UpcCodes.Exists(upc =&gt; upc.Code == fruit.UpcCode))\n                              .With&lt;DatabaseError&gt;(DatabaseErrors.UpcCodeDoesNotExist);\r\n</pre></div>\n<h1>Questions?</h1>\r\n<a href=\"https://itsvalidation.codeplex.com/wikipage?title=What%27s%20different%20about%20Its.Validation%3f&referringTitle=Home\">What&#39;s different about Its.Validation&#63;</a><br /><br /><br /><br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2012-08-30T07:47:46.5-07:00"
}
{
  "ProjectName": "wpfinspector",
  "Title": "WPF Inspector",
  "Description": "WPF Inspector is a utility that attaches to a running WPF application to troubleshoot common problems with layouting, databinding or styling. WPF Inspector allows you to explore a live view of the logical- and visual tree, read and edit property values of elements, watch the data",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<div>\r\n<h1>WPF Inspector</h1>\r\n<h3>Do you like WPF Inspector?</h3>\r\n<p>You can now support my work with a donation.</p>\r\n<p><a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=2B6BDLXZ6995A\"><img src=\"http://www.wpftutorial.net/images/donate.gif\" alt=\"\" width=\"130\" height=\"36\"></a></p>\r\n<h2>Introduction</h2>\r\n<p>WPF Inspector is a utility that attaches to a running WPF application to troubleshoot common problems with layouting, databinding or styling. WPF Inspector allows you to explore a live view of the logical- and visual tree, read and edit property values&nbsp;of\r\n elements, watch the data context, debug triggers, trace styles and much more.</p>\r\n<p><strong>Contact Information:</strong><br>\r\nChristian Moser<br>\r\nE-Mail: <a href=\"mailto:moc@zuehlke.com\">moc@zuehlke.com</a><br>\r\nTwitter: <a href=\"http://www.twitter.com/moser_christian\" target=\"_blank\">@moser_christian</a><br>\r\nWeb: <a href=\"http://www.wpftutorial.net\" target=\"_blank\">www.wpftutorial.net</a></p>\r\n<h2>A quick Roadmap</h2>\r\n<p>Before <strong>Version, 1.0</strong> I plan to do the following:</p>\r\n<ul>\r\n<li>Add a collapsible panel to the rules view (including disabling of rules) </li><li>Add support for storyboards, EnterActions and ExitActions </li><li>Finish the implementation of the binding editor </li><li>Improve synchronization between logical and visual tree </li><li>Add better visualizers for resource entries (e.g. styles </li><li>Add more editors for special data types in the property grid </li><li>Online Update Mechanism (Notify when an update is available and automatically download the new version)\r\n</li></ul>\r\n<p>Ideas for <strong>future versions</strong>:</p>\r\n<ul>\r\n<li>Add support for silverlight (the SilverlightInspector :-) </li><li>Refactor the whole app to have a client view and a remote agent </li><li>Add plugin support (provide a data model and a public API) </li><li>Add a UIAutomation view (like in Spy&#43;&#43;) </li><li>Allow some manipulations in the tree (remove items, reorder, evt. add) </li><li>And a lot more... </li></ul>\r\n<h2>Attaching to a running application</h2>\r\n<p>When WPF Inspector is launched, you see a list of running WPF applications. Doubleclick one or select and press &quot;Attach&quot; to start the inspection.</p>\r\n<p><img src=\"http://www.wpftutorial.net/images/wpfinspector1.png\" alt=\"Attaching to a running application\" width=\"415\"></p>\r\n<h2>Inspecting the visual and logical tree</h2>\r\n<p>After attaching to the application, the inspector window is opened. It shows the elements of either the visual or logical tree. By selecting one, you can see and edit all properties of the elements.</p>\r\n<p>Hovering over the application while pressing the CTRL key automatically selects the element that is below the cursor. By pressing CTRL&#43;SHIFT you can also select parts of the control template.</p>\r\n<p>Major parts of the view are marked bold. The number next to the element shows the number of descendants. When hovering over an element in the tree, a tooltip shows the visual representation of the element.</p>\r\n<p><img src=\"http://www.wpftutorial.net/images/wpfinspector2.png\" alt=\"Inspecting logical and visual tree\"></p>\r\n<h2>View and edit Properties</h2>\r\n<p>WPF Inspector provides a mature property grid that includes editors for all common data types including a search. The square behind the property shows the source of the value. If the value is databound, a yellow border is shown and you can see the binding\r\n expression. Modified values are highlighted by a blue background for a few seconds. You can also set breakpoints to any property that breaks into the debugger, when the value changes.</p>\r\n<p><img src=\"http://www.wpftutorial.net/images/wpfinspector3.png\" alt=\"The property grid\"></p>\r\n<h2>See the DataContext</h2>\r\n<p>Another useful functionality is to see the content of the DataContext. This is very helpful to search for problems in bindings. The property grid updates live and allows expansion of complex types.</p>\r\n<p><img src=\"http://www.wpftutorial.net/images/wpfinspector4.png\" alt=\"The property grid\"></p>\r\n<h2>Debugging Triggers</h2>\r\n<p>Triggers are very powerful, but they can also be very tricky to debug, since they are part of WPF, so there is no chance to set a breakpoint and see the values. WPF Inspector provides the very unique functionality to live see the values and conditions of\r\n triggers.</p>\r\n<p><img src=\"http://www.wpftutorial.net/images/wpfinspector5.png\" alt=\"The property grid\"></p>\r\n<h2>Style tracing</h2>\r\n<p>Styles are often inherited multiple times. So it's hard to know which setter finally affects the value. The style tracer of WPF Inspector easily shows the inheritance of styles and the overwritten values.</p>\r\n<p><img src=\"http://www.wpftutorial.net/images/wpfinspector6.png\" alt=\"Style tracing\"></p>\r\n<h2>Resource explorer</h2>\r\n<p>Another useful feature of the WPF Inspector is the resource explorer. It lists up all resources that are visible for the currently selected element. They can be either local, inherited or theme resources.</p>\r\n<p><img src=\"http://www.wpftutorial.net/images/wpfinspector7.png\" alt=\"Style tracing\"></p>\r\n<h2>Checks for Performance, Maintainability and Stability</h2>\r\n<p>Finally WPF Inspector includes a set of rules for performance, maintainability and stability of a WPF application. These rules are continously monitored while the inspector is running. Violations are shown as informations, warnings or errors on the bottom\r\n of the window.</p>\r\n<p><img src=\"http://www.wpftutorial.net/images/wpfinspector8.png\" alt=\"Rule checking\"></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</div>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "debugging,Controls,Tools,WPF,analysis,utility,Performance,Theme,Resources,databinding,MVVM,trigger,visual tree,VisualTree,Inspector,desp,inspect,",
  "LastEdited": "2017-04-17T13:01:10.077-07:00"
}
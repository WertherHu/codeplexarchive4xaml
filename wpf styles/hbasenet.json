{
  "ProjectName": "hbasenet",
  "Title": "HBase.NET",
  "Description": "HBase.NET is a powerful, object-oriented HBase client for .NET which supports ORM-style HBase reads and writes.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br /><br />HBase.NET is a powerful, object-oriented HBase client for .NET which supports ORM-style HBase reads and writes. HBase.NET uses reflection to serialize POCOs and store them in HBase appropriately. The HBase client will preform it&#39;s own connection pooling internally, and could optionally also only use a single connection to the thrift server.<br /><br /><b>License</b><br /><br />Copyright 2012 CareerBuilder, LLC. - http://www.careerbuilder.com<br /><br />Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);<br />you may not use this file except in compliance with the License.<br />You may obtain a copy of the License at<br /><br />   http://www.apache.org/licenses/LICENSE-2.0<br /><br />Unless required by applicable law or agreed to in writing, software<br />distributed under the License is distributed on an &quot;AS IS&quot; BASIS,<br />WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br />See the License for the specific language governing permissions and<br />limitations under the License.<br /><br /><b>Contributors</b><br /><br />Thomas Rega<br />Mauricio Morales<br />Geoffrey Jacoby<br /><br />See Acknowledgements for additional contributions.<br /><br /><b>Acknowledgements</b><br /><br />This project uses apache thrift&#39;s thrift-0.9.2.exe in unison with hbase.thrift to autogenerate the low-level hbase thrift client. (see: http://archive.apache.org/dist/thrift/0.9.2/; http://svn.apache.org/viewvc/hbase/trunk/hbase-thrift/src/main/resources/org/apache/hadoop/hbase/thrift/)<br /><br />This project uses apache thrift&#39;s thrift.dll to communicate with HBase. (see: http://wiki.apache.org/thrift/ThriftUsageCSharp)<br /><br />This project uses Castle Dynamic Proxy (see: http://www.castleproject.org/projects/dynamicproxy/) to construct and intercept interfaces. Without Castle, returning proxies of interfaces would not have been possible.<br /><br />This project heavily uses Rhino Mocks (see: http://hibernatingrhinos.com/open-source/rhino-mocks) in order to easily test the underlying functionality of the high-level client.<br /><br />All open source licenses have been included with their respective files.</div><div class=\"ClearBoth\"></div>",
  "TagList": "hbase,",
  "LastEdited": "2015-01-09T10:15:53.66-08:00"
}
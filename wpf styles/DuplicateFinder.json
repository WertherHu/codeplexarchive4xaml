{
  "ProjectName": "DuplicateFinder",
  "Title": "DuplicateFinder",
  "Description": "Duplicate Finder is a simple utility to look though files and find identical lines, which indicates duplicate code or cut-and-paste coding. It is written in C# using some .net 2.0 features. ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Duplicate Finder is a simple utility to look though files and find identical lines, which indicates duplicate code or cut-and-paste coding. It is written in C&#35; using some .net 2.0 features. <br /><br />It is aimed at detecting duplicate statements in source code, but uses simple text comparison techniques that should work on other kinds of text files.<br /><br />I wrote this program for people like myself: C# programmers with an interest in code quality and automated tools to find code quality problems. However you may find other uses for it.<br /><br />The source code program consists of:<br />DuplicateFinderLib - the engine for finding duplicates<br />DupFinder.exe - the command-line tool that uses the engine<br />DuplicateFinder.Tasks - the MSBuild task for the engine. This allows integration with C# automated builds.<br />DuplicateFinder.TestLibrary unit test cases using NUnit<br /><br /><a href=\"https://duplicatefinder.codeplex.com/releases/view/31474\">DuplicateFinder 1.5</a> is out.<br /><br />Usage of the command-line tool is as follows, eg:<br /><pre>\n&gt;DupFinder.exe -t4 test5*.txt\nProcessing in C:\\Code\\DuplicateFinder\\TestData\n2 files read\nDuplicate of length 5 at:\n Line 2-6 in C:\\Code\\DuplicateFinder\\TestData\\Test5Lines1.txt\n Line 2-6 in C:\\Code\\DuplicateFinder\\TestData\\Test5Lines2.txt\n1 duplicate found\n</pre><br /><br />A more realistic example for C# code, looking through all files in the source tree, for duplicates of 9 lines or more, excluding the generated files called <i>AssemblyInfo.cs:</i><br /><pre>\n&gt; C:\\Code\\DuplicateFinder&gt;DupFinder.exe -t9 -r -eAssemblyInfo.cs *.cs\n\nProcessing in C:\\Code\\DuplicateFinder\n11 files read\nDuplicate of length 11 at:\n Line 1-11 in C:\\Code\\DuplicateFinder\\TestLibrary\\TestAllFiles.cs\n Line 1-11 in C:\\Code\\DuplicateFinder\\TestLibrary\\TestFiles.cs\n Line 1-11 in C:\\Code\\DuplicateFinder\\TestLibrary\\TestProgramFile.cs\n1 duplicate found\n</pre><br />The duplicate finder has found that the test cases have the same using and namespace lines at the top.<br /><br /><a href=\"https://duplicatefinder.codeplex.com/wikipage?title=Commandline%20arguments&referringTitle=Home\">Duplicate Finder Commandline arguments explained</a><br />The <a href=\"https://duplicatefinder.codeplex.com/wikipage?title=MSBuild%20Task&referringTitle=Home\">MSBuild Task</a></div><div class=\"ClearBoth\"></div>",
  "TagList": "C#,tool,text,Tools,build,utility,file,build tools,Build Task,Style,duplicate,cut and paste,duplicity,file text source,Test NPE,",
  "LastEdited": "2009-08-12T14:05:09.393-07:00"
}
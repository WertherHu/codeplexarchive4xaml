{
  "ProjectName": "fwr",
  "Title": "Fluent WebRequest",
  "Description": "A simple wrapper of WebRequest class using Fluent style",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Fluent Web Request (A simple wrapper of WebRequest class using Fluent style) </b><br /><br />The need to consume services increases every day. It is common for a single project have to exchange information with multiple (2, 3, 5, 10) services, particularly REST type services.<br /><br />Using .NET <a href=\"http://msdn.microsoft.com/en-us/library/system.net.webrequest(v=vs.100).aspx\">WebRequest class</a> it is relatively simple, so it&#39;s normal to find code like this in our projects:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">string</span> serviceUrl = <span style=\"color:#A31515;\">@&quot;https://www.acme.com/services/data/url&quot;</span>;\n\nHttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create(serviceUrl);\nhttpRequest.ContentType = <span style=\"color:#A31515;\">&quot;application/json; charset=utf-8&quot;</span>;\nhttpRequest.Method = WebRequestMethods.Http.Post;\n\nJObject jsonRequest = <span style=\"color:Blue;\">new</span> JObject(<span style=\"color:Blue;\">new</span> JProperty(<span style=\"color:#A31515;\">&quot;dataForRequestBody&quot;</span>, someValue));\n<span style=\"color:Blue;\">string</span> requestBody = JsonConvert.SerializeObject(jsonRequest);\n\n<span style=\"color:Blue;\">using</span> (StreamWriter streamWriter = <span style=\"color:Blue;\">new</span> StreamWriter(httpRequest.GetRequestStream()))\n{\n\tstreamWriter.Write(requestBody);\n}\n\n<span style=\"color:Blue;\">using</span> (HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse())\n{\n\t<span style=\"color:Blue;\">using</span> (StreamReader streamReader = <span style=\"color:Blue;\">new</span> StreamReader(httpResponse.GetResponseStream()))\n\t{\n\t\t<span style=\"color:Blue;\">string</span> response = streamReader.ReadToEnd();\n\t\t<span style=\"color:Green;\">// initialize an object to wrap the response</span>\n\t\t<span style=\"color:Green;\">// A lot of code to create an object response</span>\n\t}\n}\r\n</pre></div>But, what if instead of use the &quot;traditional&quot; style, we use the Fluent style that make it code easier to read and self-expressive? Then, the same above code would look like this:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\nJObject jsonRequest = <span style=\"color:Blue;\">new</span> JObject(<span style=\"color:Blue;\">new</span> JProperty(<span style=\"color:#A31515;\">&quot;dataForRequestBody&quot;</span>, someValue));\n\nSomeResponseClass response = WebRequestBuilder&lt;SomeResponseClass&gt;\n\t.ForUrl(<span style=\"color:#A31515;\">&quot;https://www.acme.com/services/data/url&quot;</span>)\n\t.WithBody(jsonRequest)\n\t.Submit()\n\t.Post();\r\n</pre></div><br />I implemented some classes and interfaces that allow it. They are fairly simple and easy to understand (I hope).<br /><br />More samples see <a href=\"https://fwr.codeplex.com/documentation?referringTitle=Home\">Documentation</a> and <a href=\"http://alvarotorrestatis.com\">My Blog</a></div><div class=\"ClearBoth\"></div>",
  "TagList": "C#,Fluent,WebRequest,Fluent Interface,",
  "LastEdited": "2013-01-22T12:08:51.747-08:00"
}
{
  "ProjectName": "jsdocparser",
  "Title": "JSDocParser",
  "Description": "Ever wondered how to get annotation for JavaScript if you use a module loading system like require.js? Use this small script to create stub files that can be used by nearly all IDE's, even Visual Studio and Eclipse. \r\nThis is a small Javascript that creates namespaces and property-stubs from JSDoc-style comments for easier IDE autocomplete. You can annotate variables with the JSDoc @type parameter. These variables will then be displayed by the IDE as the correct objects (which is normally a pain in the a** because of the complexity and freedom of javascript code).",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description<br>\r\n</strong>Ever wondered how to get annotation for JavaScript if you use a module loading system like require.js? Use this small script to create stub files that can be used by nearly all IDE's.&nbsp;</p>\r\n<p>This is a small Javascript that creates namespaces and property-stubs from JSDoc-style comments for easier IDE autocomplete. You can annotate variables with the JSDoc @type parameter. These variables will then be displayed by the IDE as the correct objects\r\n (which is normally a pain in the a** because of the complexity and freedom of javascript code).<br>\r\nPlease run the file with Windows Scripting Host.</p>\r\n<p>The main problem why I created this project was this: <a href=\"http://jsdocparser.codeplex.com/wikipage?title=Module%20Pattern%20or%20require.js\">\r\nModule Pattern</a></p>\r\n<p><br>\r\n<strong>Example:</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><div style=\"color:black; background-color:white\"><pre>define(<span style=\"color:#a31515\">&quot;TestNamespace&quot;</span>, <span style=\"color:blue\">function</span> () {\n\t<span style=\"color:green\">/** @namespace TestNamespace */</span>\n\t<span style=\"color:blue\">function</span> TestNameSpace() {\n\t\t<span style=\"color:green\">/** \n\t\t * @class TestNamespace.Test\n\t\t * @constructor\n\t\t * @name Test\n\t\t * @param String testParam\n\t\t */</span>\n\t\t<span style=\"color:blue\">this</span>.Test = <span style=\"color:blue\">function</span> (testParam) {\n\t\t};\n\t\n\t\t<span style=\"color:green\">/** \n\t\t * @type String\n\t\t * @memberOf TestNamespace.Test\n\t\t * @name testProperty\n\t\t */</span>\n\t\t<span style=\"color:blue\">this</span>.testProperty = <span style=\"color:#a31515\">&quot;&quot;</span>;\n\t\n\t\t<span style=\"color:green\">/** \n\t\t * @memberOf TestNamespace.Test\n\t\t * @returns Boolean\n\t\t */</span>\n\t\t<span style=\"color:blue\">function</span> VirtualTestFunction() {\n\t\t\t\n\t\t}\n\t}\n\t<span style=\"color:blue\">return</span> <span style=\"color:blue\">new</span> TestNameSpace();\n});\n</pre>\n</div>\n</pre>\r\n</div>\r\n<p><strong>Will result in this output file:</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">/** @namespace TestNamespace */</span>\n<span style=\"color:blue\">var</span> TestNamespace = {};\n\t<span style=\"color:green\">/** \n\t * @class TestNamespace.Test\n\t * @constructor\n\t * @name Test\n\t * @param String testParam\n*/</span>\nTestNamespace.Test = <span style=\"color:blue\">function</span>(testParam) {\n\n};\n\t<span style=\"color:green\">/** \n\t * @type String\n\t * @memberOf TestNamespace.Test\n\t * @name testProperty\n*/</span>\nTestNamespace.Test.testProperty = <span style=\"color:#a31515\">&quot;&quot;</span>;\n\t<span style=\"color:green\">/** \n\t * @memberOf TestNamespace.Test\n\t * @returns Boolean\n*/</span>\nTestNamespace.Test.VirtualTestFunction = <span style=\"color:blue\">function</span>() {\n<span style=\"color:blue\">return</span> <span style=\"color:blue\">new</span> Boolean();\n};\n</pre>\r\n</div>\r\n<p>Nearly all good IDE's (e.g. JavaScript Eclipse or WebStorm) can now autocomplete custom properties:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">/** @type TestNamespace.Test */</span>\n<span style=\"color:blue\">var</span> someObject = require(<span style=\"color:#a31515\">&quot;TestNamespace&quot;</span>);\n\n<span style=\"color:green\">// most IDE's got autocomplete now without </span>\n<span style=\"color:green\">// initiating the actual object directly...</span>\nsomeObject.testProperty;\n</pre>\r\n</div>\r\n</div>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "jsdoc,javascript,Windows Scripting,autocomplete,visual studio,Eclipse,",
  "LastEdited": "2012-03-07T13:59:09.887-08:00"
}
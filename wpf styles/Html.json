{
  "ProjectName": "Html",
  "Title": "Html",
  "Description": "The Html library makes generating html from code easy.  It eliminates the need for StringBuilder, StringWriter, string concatenation, and any other random methods of generating html from code.  Safely add css classes, styles, and attributes without worrying about quotes.  Save to any Stream, TextWriter, or XmlWriter.  ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Html</h1>\r\nHtml is a library for generating html through code.  Here are some examples of what it does.\n<h3>Simple Html With Content</h3>\r\n<div style=\"color:Black;background-color:White;\"><pre>\r\nConsole.WriteLine(<span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;b&quot;</span>).Update(<span style=\"color:#A31515;\">&quot;Chris&quot;</span>));\r\n</pre></div>produces:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">b</span><span style=\"color:Blue;\">&gt;</span>Chris<span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">b</span><span style=\"color:Blue;\">&gt;</span>\r\n</pre></div><h3>Attributes Should Be Easy</h3>\r\nEasily add attributes without worrying about double quotes, single quotes, no quotes, just enter the attributes and Html will take care of the rest:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\nConsole.WriteLine(<span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;input&quot;</span>, <span style=\"color:#A31515;\">&quot;type=text;id=firstname;&quot;</span>));\r\n</pre></div>produces:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">input</span> <span style=\"color:Red;\">type</span><span style=\"color:Blue;\">=</span><span style=\"color:Blue;\">&quot;text&quot;</span> <span style=\"color:Red;\">id</span><span style=\"color:Blue;\">=</span><span style=\"color:Blue;\">&quot;firstname&quot;</span><span style=\"color:Blue;\">&gt;</span><span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">input</span><span style=\"color:Blue;\">&gt;</span>\r\n</pre></div><h3>Output to Anything</h3>\r\nOutput to any <b>TextWriter</b>:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;i&quot;</span>)\n  .Update(<span style=\"color:#A31515;\">&quot;Wow&quot;</span>)\n  .Render(Console.Out);\r\n</pre></div>Produces this in the console output window:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">i</span><span style=\"color:Blue;\">&gt;</span>Wow<span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">i</span><span style=\"color:Blue;\">&gt;</span>\r\n</pre></div>Output to any <b>Stream</b><br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">string</span> expected = <span style=\"color:#A31515;\">&quot;&lt;p&gt;Hello World&lt;/p&gt;&quot;</span>;\n<span style=\"color:Blue;\">byte</span>[] buffer = <span style=\"color:Blue;\">new</span> <span style=\"color:Blue;\">byte</span>[expected.Length];\n<span style=\"color:Blue;\">using</span> (MemoryStream stream = <span style=\"color:Blue;\">new</span> MemoryStream(buffer)){\n  Element para = <span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;p&quot;</span>).Update(<span style=\"color:#A31515;\">&quot;Hello World&quot;</span>);\n  para.Render(stream);\n  <span style=\"color:Blue;\">string</span> actual = System.Text.ASCIIEncoding.ASCII.GetString(buffer);\n  Assert.AreEqual(expected, actual);\n}\r\n</pre></div>Want to control formatting? Use an <b>XmlTextWriter</b>:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\nElement <span style=\"color:Blue;\">select</span> = <span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;select&quot;</span>);\n<span style=\"color:Blue;\">for</span>(<span style=\"color:Blue;\">int</span> i=0;i&lt;5;i++){\n  <span style=\"color:Blue;\">select</span>.Append(\n    <span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;option&quot;</span>)\n      .AddAttribute(<span style=\"color:#A31515;\">&quot;value&quot;</span>, i)\n      .Update(<span style=\"color:#A31515;\">&quot;Item {0}&quot;</span>, i));\n}\n<span style=\"color:Blue;\">using</span> (StringWriter text = <span style=\"color:Blue;\">new</span> StringWriter()){\n  XmlTextWriter xml = <span style=\"color:Blue;\">new</span> XmlTextWriter(text);\n  xml.Formatting = Formatting.Indented;\n  <span style=\"color:Blue;\">select</span>.Render(xml);\n  Console.WriteLine(text.ToString());\n}  \r\n</pre></div><h3>Styles and CSS Classes</h3>\r\nAdd styles and css classes easily with Html&#39;s fluent interfaces:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;p&quot;</span>)\n  .AddCssClasses(<span style=\"color:#A31515;\">&quot;blog&quot;</span>)\n  .AddStyle(<span style=\"color:#A31515;\">&quot;padding:10px;line-height:150%;&quot;</span>)\n  .Render(Console.Out);\r\n</pre></div>produces:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">p</span> <span style=\"color:Red;\">style</span><span style=\"color:Blue;\">=</span><span style=\"color:Blue;\">&quot;padding:10px;line-height:150%;&quot;</span> <span style=\"color:Red;\">class</span><span style=\"color:Blue;\">=</span><span style=\"color:Blue;\">&quot;blog&quot;</span><span style=\"color:Blue;\">&gt;</span><span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">p</span><span style=\"color:Blue;\">&gt;</span>\r\n</pre></div><h3>Everything is a String</h3>\r\n<b>Elements are implicitly converted to strings</b>.  Therefore any method that needs to return a string, can return an Element; and any method that accepts a string can accept an element.<br /><br />Given this method:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">string</span> CreateSelect(){\n  Element <span style=\"color:Blue;\">select</span> = <span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;select&quot;</span>);\n  <span style=\"color:Blue;\">for</span>(<span style=\"color:Blue;\">int</span> i=0;i&lt;5;i++){\n    <span style=\"color:Blue;\">select</span>.Append(\n      <span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;option&quot;</span>)\n        .AddAttribute(<span style=\"color:#A31515;\">&quot;value&quot;</span>, i)\n        .Update(<span style=\"color:#A31515;\">&quot;Item {0}&quot;</span>, i));\n  }\n  <span style=\"color:Blue;\">return</span> <span style=\"color:Blue;\">select</span>;\n}\r\n</pre></div>The following line:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\nConsole.WriteLine(CreateSelect());\r\n</pre></div>produces:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">select</span><span style=\"color:Blue;\">&gt;</span><span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">option</span> <span style=\"color:Red;\">value</span><span style=\"color:Blue;\">=</span><span style=\"color:Blue;\">&quot;0&quot;</span><span style=\"color:Blue;\">&gt;</span>Item 0<span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">option</span><span style=\"color:Blue;\">&gt;</span><span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">option</span> <span style=\"color:Red;\">value</span><span style=\"color:Blue;\">=</span><span style=\"color:Blue;\">&quot;1&quot;</span><span style=\"color:Blue;\">&gt;</span>Item 1<span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">option</span><span style=\"color:Blue;\">&gt;</span><span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">option</span> <span style=\"color:Red;\">value</span><span style=\"color:Blue;\">=</span><span style=\"color:Blue;\">&quot;2&quot;</span><span style=\"color:Blue;\">&gt;</span>Item 2<span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">option</span><span style=\"color:Blue;\">&gt;</span><span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">option</span> <span style=\"color:Red;\">value</span><span style=\"color:Blue;\">=</span><span style=\"color:Blue;\">&quot;3&quot;</span><span style=\"color:Blue;\">&gt;</span>Item 3<span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">option</span><span style=\"color:Blue;\">&gt;</span><span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">option</span> <span style=\"color:Red;\">value</span><span style=\"color:Blue;\">=</span><span style=\"color:Blue;\">&quot;4&quot;</span><span style=\"color:Blue;\">&gt;</span>Item 4<span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">option</span><span style=\"color:Blue;\">&gt;</span><span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">select</span><span style=\"color:Blue;\">&gt;</span>\r\n</pre></div><b>Concatenate strings and Elements</b><br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\nConsole.WriteLine(<span style=\"color:#A31515;\">&quot;&lt;b&gt;Hello&lt;/b&gt; &quot;</span>+<span style=\"color:Blue;\">new</span> Element(<span style=\"color:#A31515;\">&quot;i&quot;</span>).Update(<span style=\"color:#A31515;\">&quot;World&quot;</span>));\r\n</pre></div>produces:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">b</span><span style=\"color:Blue;\">&gt;</span>Hello<span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">b</span><span style=\"color:Blue;\">&gt;</span> <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">i</span><span style=\"color:Blue;\">&gt;</span>World<span style=\"color:Blue;\">&lt;/</span><span style=\"color:#A31515;\">i</span><span style=\"color:Blue;\">&gt;</span>\r\n</pre></div></div><div class=\"ClearBoth\"></div>",
  "TagList": "HTML Builder,",
  "LastEdited": "2008-07-30T19:34:47.4-07:00"
}
{
  "ProjectName": "JSLINQ",
  "Title": "LINQ to JavaScript",
  "Description": "LINQ to JavaScript (JSLINQ) is LINQ to Objects for JavaScript arrays, and adds power and flexibility of LINQ style queries to traditional JavaScript code.",
  "MovedLink": "https://github.com/crpietschmann/jslinq",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />LINQ to JavaScript &#40;JSLINQ&#41; is LINQ to Objects for JavaScript arrays, and adds power and flexibility of LINQ style queries to traditional JavaScript code.<br />\n<h2>What is LINQ to JavaScript?</h2>\r\nLINQ to JavaScript (JSLINQ for short) is an implementation of LINQ to Objects implemented in JavaScript. It is built using a set of extension methods built on top of the JavaScript Array object. If you are using Arrays then you can use JSLINQ; it&#39;s that simple!<br />\n<h2>Nuget Package</h2>\r<a href=\"http://nuget.org/packages/jslinq\">http://nuget.org/packages/jslinq</a><br /><br /><a href=\"http://nuget.org/packages/jslinq\"><img style=\"border:none;\" src=\"http://download-codeplex.sec.s-msft.com/Download?ProjectName=jslinq&amp;DownloadId=639406\" alt=\"Install SQLinq via Nuget\" title=\"Install SQLinq via Nuget\" /></a><br /><br /><br />If you don&#39;t know what LINQ is; it&#39;s a new featureset in the .NET Framework 3.5 that allows more SQL-like querying of any kind of data. In the case of LINQ to JavaScript, it provides the ability to query against Arrays.<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> myList = [\n            {FirstName:<span style=\"color:#A31515;\">&quot;Chris&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Pearson&quot;</span>},\n            {FirstName:<span style=\"color:#A31515;\">&quot;Kate&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Johnson&quot;</span>},\n            {FirstName:<span style=\"color:#A31515;\">&quot;Josh&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Sutherland&quot;</span>},\n            {FirstName:<span style=\"color:#A31515;\">&quot;John&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Ronald&quot;</span>},\n            {FirstName:<span style=\"color:#A31515;\">&quot;Steve&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Pinkerton&quot;</span>}\n            ];\n            \n<span style=\"color:Blue;\">var</span> exampleArray = JSLINQ(myList)\n                   .Where(<span style=\"color:Blue;\">function</span>(item){ <span style=\"color:Blue;\">return</span> item.FirstName == <span style=\"color:#A31515;\">&quot;Chris&quot;</span>; })\n                   .OrderBy(<span style=\"color:Blue;\">function</span>(item) { <span style=\"color:Blue;\">return</span> item.FirstName; })\n                   .Select(<span style=\"color:Blue;\">function</span>(item){ <span style=\"color:Blue;\">return</span> item.FirstName; });\r\n</pre></div><h2>Using LINQ to JavaScript</h2>\rWe will use this Array for the following examples:<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> myList = [\n            {FirstName:<span style=\"color:#A31515;\">&quot;Chris&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Pearson&quot;</span>},\n            {FirstName:<span style=\"color:#A31515;\">&quot;Kate&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Johnson&quot;</span>},\n            {FirstName:<span style=\"color:#A31515;\">&quot;Josh&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Sutherland&quot;</span>},\n            {FirstName:<span style=\"color:#A31515;\">&quot;John&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Ronald&quot;</span>},\n            {FirstName:<span style=\"color:#A31515;\">&quot;Steve&quot;</span>,LastName:<span style=\"color:#A31515;\">&quot;Pinkerton&quot;</span>}\n            ];\r\n</pre></div>\n<h3>Create an Instance of the JSLINQ object with your data</h3>\rYou need to create a new JSLINQ object and pass it the javascript array of data that you will be querying.<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> example = JSLINQ(myList);\r\n</pre></div>\n<h3>Using the Where operator to specify query criteria</h3>\rIn this case, we&#39;re getting all items in the Array that have FirstName property set to Chris.<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> whereExample1 = JSLINQ(myList).\n                      Where(<span style=\"color:Blue;\">function</span>(item){ <span style=\"color:Blue;\">return</span> item.FirstName == <span style=\"color:#A31515;\">&quot;Chris&quot;</span>; });\r\n</pre></div>\n<h3>Using the Select operator to specify which data to return</h3>\rIn this case, we&#39;re going to return only the FirstName property of each item in the Array.<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> selectTest2 = JSLINQ(myList).\n                Select(<span style=\"color:Blue;\">function</span>(item){ <span style=\"color:Blue;\">return</span> item.FirstName; });\r\n</pre></div>\n<h3>Using the OrderBy operator to determine how to sort the order of the items in the Array</h3>\rIn this case, we&#39;re going to order them by the FirstName property.<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">var</span> sortTest1 = JSLINQ(myList)\n             .OrderBy(<span style=\"color:Blue;\">function</span>(item){ <span style=\"color:Blue;\">return</span> item.FirstName; });\r\n</pre></div>\n<h2>Acticles / News</h2>\r<a href=\"http://secretgeek.net/JsLinq/\">JSLinq Editor</a><br />2010/03/16: <a href=\"http://www.gregshackles.com/2010/03/linq-for-javascript-using-and-extending-jslinq/\">LINQ for JavaScript: Using and Extending JSLINQ</a><br />2008/01/24: <a href=\"http://pietschsoft.com/post/2008/01/24/LINQ-to-JavaScript-%28JSLINQ%29-Open-Source-Project-Launched!.aspx\">LINQ to JavaScript (JSLINQ) Open Source Project Launched!</a><br />\n<h2>Contributors</h2>\rThis project is maintained by <a href=\"http://pietschsoft.com\">Chris Pietschmann</a>. He is a Microsoft MVP for Bing Maps, a Co-Founder of <a href=\"http://carto.com\">Carto LLC</a>, and the Owner of <a href=\"http://simplovation.com\">Simplovation LLC</a> a software development consulting company that specializes in Mapping/GIS related application development.</div><div class=\"ClearBoth\"></div>",
  "TagList": "LINQ to Objects,LINQ,JavaScript,Web 2.0,ajax,JSON,JScript,javascript must,",
  "LastEdited": "2013-03-16T08:30:46.407-07:00"
}
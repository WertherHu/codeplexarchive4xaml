{
  "ProjectName": "PipelineStyle",
  "Title": "Pipeline Style Programming in C#. Inspired by F#.",
  "Description": "Add F# pipelining like capabilities to your C# code and increase your functional programming experience. Can be ported to be used in Java too.",
  "MovedLink": "https://github.com/hocho/PipelineStyle",
  "HomeWiki": "<div class=\"wikidoc\"><b>Pipeline Style</b><br /><br />Pipeline Style programming brings a more functional programming style of coding to C#. Inspired by the F# pipe operator and C# LINQ method syntax, this tiny set of C# extension functions, add more functional programming features to C#, using combinators.<br /><br />Some of the benefits of Pipeline Style \n<ul><li>Creates a fluent programming paradigm, converting statements to expressions and chaining them together</li>\n<li>Replaces code nesting with linear sequencing</li>\n<li>Eliminates variable declaration - does not even require a var</li>\n<li>Provides some form of variable immutability and scope isolation</li>\n<li>Structures code into small lambda expressions with clear responsibilities</li>\n<li>Builds sort of &#39;monadic computations&#39;</li></ul>\nHopefully similar features make it into future versions of C# as first class parts of the language. Pipeline Style can be easily ported to and used in Java.<br /><br /><b>Cheat sheet:</b> Pipeline Style uses extensions methods named with the verbs, &#39;Do&#39; for Actions &amp; &#39;To&#39; for Functions. &#39;Do&#39; extensions return the original parameter. &#39;To&#39; extensions transform the original parameter to another value/type. <br /><br />See below a small sample of the extension methods and how they replace conventional C# coding.  <br /><br /><img src=\"/projects/PipelineStyle/77fb6d3f-aaa5-4385-a43e-7e219525c788\" alt=\"Conventional.PNG\" title=\"Conventional.PNG\" /><br /><br /><img src=\"/projects/PipelineStyle/6fe537c8-0b4a-4447-9fd9-4f7e0a8da2ff\" alt=\"PipelineStyle.PNG\" title=\"PipelineStyle.PNG\" /></div><div class=\"ClearBoth\"></div>",
  "TagList": "C#,F#,Functional,Java,Pipeline,Pipe,",
  "LastEdited": "2014-09-05T20:01:33.163-07:00"
}
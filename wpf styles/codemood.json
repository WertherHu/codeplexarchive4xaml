{
  "ProjectName": "codemood",
  "Title": "CodeMood",
  "Description": "CodeMood is a project which is written in c++. It intention is to demonstrates modern c++ style to help programmers write safer and more elegant c++ code.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h2>Intro</h2>\r\nCodeMood is a project which is written in C++. It consist of some code examples from our daily work and study. On the other hand, we also want to use these code examples to demonstrate modern C++ style to help programmers write safer and more elegant C++ code.<br />\n<h2>Concept</h2>\r\n<b>C++11</b>: C++11 (formerly known as C++0x) is the most recent version of the standard of the C++ programming language. It was approved by ISO on 12 August 2011, replacing C++03. The name follows the tradition of naming language versions by the year of the specification&#39;s publication. Most of its features are supported by Visual Studio 2012, such as move semantics, new smart pointers, lambda expression and so on. Click <a href=\"http://en.wikipedia.org/wiki/C%2B%2B11\">http://en.wikipedia.org/wiki/C%2B%2B11</a> to know more.<br /><br /><b>Modern C++ style</b>: Modern C++ coding style allow programmers to write safer and more elegant code. It emphasizes\n<ul><li>Stack-based scope instead of heap or static global scope.</li>\n<li>Auto type inference instead of explicit type names.</li>\n<li>Smart pointers instead of raw pointers.</li>\n<li>std::string and std::wstring types instead of raw char[] arrays.</li>\n<li>Standard template library (STL) containers like vector, list, and map instead of raw arrays or custom containers.</li>\n<li>STL algorithms instead of manually coded ones.</li>\n<li>Exceptions, to report and handle error conditions.</li>\n<li>Lock-free inter-thread communication using STL std::atomic&lt;&gt; instead of other inter-thread communication mechanisms.</li>\n<li>Inline lambda functions instead of small functions implemented separately.</li>\n<li>Range-based for loops to write more robust loops that work with arrays and STL containers in the form for ( for-range-declaration : expression ).</li></ul>\n<h2>Just enjoy coding with C++!</h2></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2013-04-15T00:02:29.13-07:00"
}
{
  "ProjectName": "scrappydb",
  "Title": "ScrappyDB: EF Style Code First & Linq for Amazon SimpleDB",
  "Description": "Version 2.0 BETA of ScrappyDB provides Code First style .NET development with full Linq query support for Amazon SimpleDB.\r\n\r\n(This is a MAJOR rewrite of the pervious version of ScrappyDB.)",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<h2 id=\"!what-the-heck-is-scrappydb\"><span>The current recommended release is available from Nuget:</span></h2>\r\n<table border=\"0\" cellpadding=\"5\" style=\"border-color:#000000; border-width:4px; padding:10px\">\r\n<tbody>\r\n<tr>\r\n<td><strong>PM&gt; Install-Package ScrappyDB</strong></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>What the heck is ScrappyDB?</h2>\r\n<p>ScrappyDB is a code first style object mapping library and Linq provider for Amazon SimpleDB. Also included is an ASP.NET Membership Provider for Amazon SimpleDB.</p>\r\n<h3 id=\"!status\">Status</h3>\r\n<p>ScrappyDB is personal project that is in use in a small number of low volume websites. It has been under intermittent development for several years. It is NOT a highly tested enterprise ready solution.</p>\r\n<h3 id=\"!getting-started\">Getting Started</h3>\r\n<p>Check out the integration tests and the Sample MVC 3 website for sample code to help you get started.</p>\r\n<h3 id=\"!limitations\">Limitations</h3>\r\n<p>SimpleDB is simple, it doesn't support relationships or aggregate functions, and as such there is a lot of Linq to SQL style functionality/syntax that will fail because it's just not supported by the underlying database engine...</p>\r\n<p><strong>Version 2.0&nbsp;</strong>of ScrappyDB provides Code First style .NET development with full Linq query support&nbsp;(This is a MAJOR rewrite of the pervious version of ScrappyDB.)</p>\r\n<p><strong>UPDATE 6/14/2012 -&nbsp;</strong>Currently working a significant new release that incorporates &quot;some&quot; DynamoDB support.</p>\r\n<ul>\r\n<li>DynamoDB Membership Provider </li><li>Automatic DynamoDB table/schema generation </li><li>Separating Membership Providers for SimpleDB and DynamoDB in a separate assembly that will be a separate optional Nuget package.\r\n</li><li>ETA: &quot;real soon now&quot; </li></ul>\r\n<p><strong>UPDATE 6/20/2011</strong></p>\r\n<ul>\r\n<li>Numerous bug fixes </li><li>New ASP.NET MVC3 sample application:\r\n<ul>\r\n<li>Source code on Bitbucket: <a href=\"https://bitbucket.org/scrappydog/scrappydb.mvcsample\">\r\nhttps://bitbucket.org/scrappydog/scrappydb.mvcsample</a> </li><li>Running sample on AppHarbor: <a href=\"http://sample.scrappydb.com/\">http://sample.scrappydb.com/</a>\r\n</li></ul>\r\n</li><li>Nuget package available: &nbsp;<a href=\"http://nuget.org/List/Packages/ScrappyDB\">PM&gt; Install-Package ScrappyDB\r\n</a></li></ul>\r\n<p><br>\r\n<strong>UPDATE 5/11/2011</strong></p>\r\n<ul>\r\n<li>Migrated repository to Mercurial </li><li>Version 2.0 BETA release with Code First style object mapping and Linq query support.\r\n</li><li>Numerous breaking changes from 1.2 </li><li>Using modified version of Remotion Re-Linq <a href=\"http://relinq.codeplex.com/\">\r\nhttp://relinq.codeplex.com/</a> to implement SimpleDb Linq provider </li></ul>\r\n<p><br>\r\n<strong>UPATE 4/5/2010</strong></p>\r\n<ul>\r\n<li>Added support for ConsistentRead to all query and load methods. </li><li>Membership enhancements. </li><li>New Mock objects to facilitate unit testing. </li><li>Added Log4net logging through out project </li><li>New unit tests </li><li>Numerous bug fixes, refactorings, and enhancements. </li></ul>\r\n<p><br>\r\n<strong>UPATE 1/11/2010</strong></p>\r\n<ul>\r\n<li>Significant update that include ASP.NET Membership, Role, and Profile Providers.\r\n</li><li>Numerous bug fixes, refactorings, and enhancements. </li><li>Switch to new AWS SDK for .NET instead of the AWS SimpleDB library. </li></ul>\r\n<p><br>\r\n<strong>Why create a new tool instead of using one of the existing .NET tools for SimpleDB?</strong><br>\r\n<br>\r\nIn particular:</p>\r\n<ul>\r\n<li>Simple Savant <a href=\"http://simplesavant.codeplex.com/\">http://simplesavant.codeplex.com/</a> (Simple Savant is a great tool and definitly a more mature code base. We would recommend that you investigate it first before considering ScrappyDB.)\r\n</li></ul>\r\n<p><br>\r\n<strong>Features that we felt were important for our implementation:</strong></p>\r\n<ul>\r\n<li>Support for multi-value attributes (using arrays or arraylists). </li><li>Support for nested objects and relationships (in particular cases where a custom class has a property that is a collection of some other custom class).\r\n</li><li>Integrated support for web caching for performance. </li><li>Location data (in particular the ability to do proximity searches &quot;show me all records within 5 miles of X&quot;).\r\n</li></ul>\r\n<p><br>\r\n<strong>Things that we did <span style=\"text-decoration:underline\">NOT</span> feel were important for our implementation:</strong></p>\r\n<ul>\r\n<li>Support for all .NET data types (we only support a subset of &quot;common&quot; data types, but there is no reason you can't enhance it to support the one you need).\r\n</li><li>Update caching to work around &quot;eventual consistency&quot; (if you don't have a full understanding of what eventual consistency means take the time to learn about it before you decide whether SimpleDB is a viable platform for your data).\r\n</li></ul>\r\n<p><br>\r\n<strong>About the source code</strong></p>\r\n<ul>\r\n<li>To do what it does ScrappyDB makes extensive use of some painful reflection. </li><li>The code does not follow any identifiable design patterns and it doesn't follow any of the latest inversion of control fashions: &quot;I'm just a caveman, and I'm not familiar with your modern ways...&quot;\r\n</li></ul>\r\n<p><br>\r\n<strong>Known Issues:</strong></p>\r\n<ul>\r\n<li>Relationship logic is lightly testing, is probably buggy and is likely to see some significant refactoring.\r\n<ul>\r\n<li>We are planning to add a second relationship type that uses multivalued attributes for &quot;1 to few&quot; relationships (&quot;1 to many&quot; relationships use an intermediate relationship &quot;table&quot; which is slower).\r\n</li></ul>\r\n</li></ul>\r\n<p><br>\r\n<strong>Dependencies</strong></p>\r\n<ul>\r\n<li>ScrappyDb is dependent on the excellent Amazon AWS SDK for .NET <a href=\"/wikipage?title=urlhttp%3a%2f%2faws.amazon.com%2fsdkfornet%2f&referringTitle=Home\">\r\nurlhttp://aws.amazon.com/sdkfornet/</a> </li><li>ScrappyDb uses a customized fork of the re-motion <a title=\"re-link library\" href=\"http://relinq.codeplex.com/\">\r\nre-linq library</a> to implement linq functionality. </li></ul>\r\n<p><br>\r\n<strong>Documentation</strong></p>\r\n<ul>\r\n<li>Currently the primary developer documentation for ScrappyDB is the unit tests included with the source code. But I have posted a few basic examples to help you get started here:\r\n<a href=\"http://scrappydb.codeplex.com/documentation\">http://scrappydb.codeplex.com/documentation</a>\r\n</li></ul>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2012-06-14T12:00:38.27-07:00"
}
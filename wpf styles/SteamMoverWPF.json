{
  "ProjectName": "SteamMoverWPF",
  "Title": "SteamMoverWPF",
  "Description": "Improves upon the original Delphi SteamMover. Done in C# and WPF. Allows multiple alternate locations and queued file movement operations.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Improves upon the original Delphi SteamMover. Done in C&#35; and WPF. Allows multiple alternate locations and queued file movement operations.<br /><br /><br />SteamMoverWPF takes the original SteamMover (http://www.traynier.com/software/steammover) and improves upon it. This allows moving games installed in the default Steam folder (program files\\steam\\steamapps\\common) to different locations, usually other hard drives. This could be done for a number of reasons, though the main is to either free up space on your C: drive, or place the games on an even faster SSD or RAMDisk. It does this by moving the files to the destination, then creating a Junction pointing the new files back to the original location. To the games and to Steam, the files look like they are in the same place, but in fact are not. This process is harmless and can be undone by simply deleting the Junction and moving the files back to their original location. <br /><br />Main features<br />*Ability to configure multiple alternate locations for your games collection<br />*Ability to move games directly between alternate locations without having to move first to the main one<br />*Move operations are non-thread blocking, allowing continued use of the application while files are being moved<br />*Multiple move operations are queued up to prevent resource contention when moving many games at a time<br />*Reporting size of games in UI<br /><br />Future features<br />*Ability to give descriptive names to Main and Alternate locations<br />*Ability to edit config file (JSON) within the application<br />*More responsive UI<br />*Complete in app handling of file move &amp; junction creation functions. Currently, this is done via creating &amp; executing temporary batchfiles<br />*A custom Icon!<br />*Feature to backup &amp; restore all junction lists</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2015-01-06T13:01:59.75-08:00"
}
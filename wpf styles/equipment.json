{
  "ProjectName": "equipment",
  "Title": "Equipment",
  "Description": "Equipment is a complete metro style app for Windows 8 to10 which supports your travel preparation and helps you to complete your personal travel list. ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br /><br />The App Equipment is an useful metro style application for travel preparation and serve during the trip to detect possible forgotten travel items to complete the personal travel lists. The App is intuitive to use and consists essentially of the proposal list of the appropriate category on the right side and the list of individual assortment of travel items on the left side. The App is best in Landscape mode for selection of proposals and used in Portrait mode easily changes can be made. Among the options specific conditions can be chosen so that proposals are restricted or expanded from the categories.<br /><br /><img src=\"/projects/equipment/3e6c2403-0dcd-4bc5-9752-41b191d2af82\" alt=\"Screenshot.png\" title=\"Screenshot.png\" /><br /><br /><br /><i>In source code you find specific technologies like this :</i><br /><br />Building an application with <b>Layout principles</b> for <b>Modern app design</b> with intuitive interfaces and controls<br />Implementation of the <b>Certification requirements</b> for <b>Windows Store Apps</b><br /><b>SuspensionManager</b> handling considering the apps life cycle (<b>Running</b>, <b>Suspended</b>, <b>Terminated</b>)<br />Applying of <b>LocalSettings</b> and <b>PageState</b> management<br />Use of <b>ResourceLoader</b> for <b>Multilingual</b> app implementation<br /><b>ViewManagement</b> to select <b>Portrait</b> or <b>Landscape</b> orientation<br />Add, edit, remove, select, mark and alphabetic sort items of a <b>ListView</b> control<br />Walking through the ListView control with steps and jumps<br />Moving items through the ListView control<br />Using app scalability on different display types (size, aspect ratio) with <b>Viewbox</b> control<br /><b>FolderPicker</b>, <b>FileOpenPicker</b>, <b>FileSavePicker</b> to obtain folder and file access and permissions<br />Handling of <b>ReadLinesAsync</b> and <b>WriteLinesAsync</b> methods to read and write text files<br />Providing with the app additionally files like examples (thereby also via App Store)<br />Initialization of the app with <b>CopyFileAsync</b> to provide editable text files in <b>LocalState</b> folder<br />Applying of <b>ObservableCollection</b> to store objects in an collection and bind them to a ListView<br />Consistently <b>Asynchronous programming</b> for smooth operation<br />Using <b>BindableBase</b> class with <b>INotifyPropertyChanged</b> to notify about changes of control properties<br />Applying <b>IValueConverter</b> to connect Boolean to Visibility<br /><b>Data binding</b> to controls and <b>Data validation</b><br />Use of <b>Flyout pages</b> and <b>BottomAppBar</b> for more clarity<br />Change of selected background color of ListView control by <b>XAML</b> statements<br /><b>Drag `n Drop</b> technology<br /><b>Clipboard</b> access<br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "Travel,Voyage,Trip,Equipment,Kit,App,SuspensionManager,LocalSettings,PageState,ResourceLoader,Multilingual,ViewManagement,Portrait,Landscape,BindableBase,Clipboard,Drag `n Drop,IValueConverter,ReadLinesAsync,WriteLinesAsync,FolderPicker,FileOpenPicker,FileSavePicker,Flyout page,BottomAppBar,",
  "LastEdited": "2016-01-26T11:42:30.177-08:00"
}
{
  "ProjectName": "SQLCLRExport",
  "Title": "SQL CLR Export Functions",
  "Description": "SQL CLR Export, written in VB.NET which provides the ability to export data from SQL Server to 6 different text file formats: HTML, comma separated,tab separated, custom delimited, fixed width, and XML.\r\n\r\nThis project provides a much needed example and powerful functionality to get any data you can query from SQL to a format suitable for import/ export, or when using the HTML methods, to well formatted colorful html grid featuring 35 different CSS styles.\r\n\r\nYou can Export any Table or Query, and the data source can be anything accessible to the Caller has scope to: regular tables and views, a query, temp tables and table variables; even data from linked servers and Common Table Expressions\r\n\r\nSource code and easiy to install SQL files are included!",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h2>SQL CLR Export Functions</h2>\r\nThis CLR Project was created as a Proof of Concept. On <a href=\"http://www.SQLServerCentral.com/Forums/\">http://www.SQLServerCentral.com/Forums/</a>, you will see literally thousands of posts where people ask how to send a table or the results of a query, to disk in various formats.<br />The typical response is telling people to do one of following things\n<ul><li>Set results to grid, then Save Results As. Options are csv or tab delimited. </li>\n<li>use either bcp or xp_cmdshell, or a combination of the two to get the results to disk.</li>\n<li>use CLR (but no concrete examples are typically provided)</li>\n<li>Do the work outside of SQL Server completely, in a programming language for example.</li></ul>\n<br />If you are mentally stuck in doing the work in TSQL, the issue with that is in any environment that is slightly concerned about security, xp_cmdshell, or access to bcp on the server itself, is often not an option.<br /><br />From a TSQL perspective, you are limited to formats you can create via raw text. XML, Comma Delimited, Tab Delimited, Custom Delimited and HTML are classic examples, and are included in this project.<br /><br />Personally, I think the best option is to create an aspx web page that can serve up the results in any desired format; .NET is much more flexible,  and a lot easier to do the more desirable formats like PDF, XLS, RTF, Word, even MHT, in addition to the text formats mentioned above. This project is actualy an adapted subset of a suite of .NET functions I created to Export Data To various file types.<br /><br />However, even though an aspx page is more desirable and a better option, I created this CLR project to make exporting to those text files easier, and to show there are better options for creating those reports than opening up xp_cmdshell on your servers.\n<h2>What This Project Does</h2>\r<ul><li><b>Provides 6 different Export Methods</b></li>\n<li>Export to HTML (Hyper Text Markup Language...a web page</li>\n<li>Export to CSV (Comma Seperated Values)</li>\n<li>Export to TSV (Tab Seperated Values)</li>\n<li>Export to Custom Delimiters (both row delim and field delim Values)</li>\n<li>Export to Fixed Width Format: </li>\n<li>Export to XML (Leverages the built in .Net DataTable.WriteXML method)</li></ul>\n<b>Caveats:</b><br />I tried to create this project with a mentor mentality. Lots of comments in the code, generous documentation, lots of comments in the generated procedures to make it understandable to beginners. <br />Veteran programmers may identify easier, more streamlined ways to do things, and may roll their eyes at &quot;hungarian notation&quot; for things like the procedure names, like <b>CLR_ExportTableToHTML</b>.<br />The code is not optimized. Each procedure is a copy/paste/adaptation of the code idea...they all could instead call a central private function instead. My idea here was to have each proc as a readable, almost stand alone code snippet to make it easier to read and understand.<br /><br />Centralizing the code is what i&#39;ve done for myself, but that core function seems to me to be harder for a new person to read, since it takes so many different factors into consideration.<br /><br />So, if it bothers you, download the project and change it! Offer suggestions!<br />I&#39;ll always be open to better ways to do things, and will incorporate any suggestions I receive and understand!<br /><br /><br />Thanks for looking, and I hope this helps folks in the future!<br /><br /><b>Source Code is written in VB.NET . The Assemblies in the Main package come form VB.Net.</b></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2012-07-18T05:00:19.287-07:00"
}
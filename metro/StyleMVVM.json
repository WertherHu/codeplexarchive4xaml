{
  "ProjectName": "StyleMVVM",
  "Title": "StyleMVVM",
  "Description": "Style MVVM an Application development framework for Windows Store Apps",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br /><br />Style MVVM is a toolkit designed for the Windows Store platform around the idea of being light weight and fast. Everything is included in one Assembly (two if you are using C#) and in many places code has been implemented using compiled Linq Expressions for performance reason (Object Creation, Dependency Injection, etc). Note: Windows Phone 8 and WPF (.Net 4.5) are also supported.<br /><br />Some of the core features are: \n<ul><li>StyleMVVM is the only MVVM toolkit for Window Store App that supports all three development languages C#, C++/CX and HTML/JS. Allowing you to export components written in C++/CX and import them into a C# applications.</li>\n<li>Built in validation engine that supports ValidationAttributes, Fluent validation and Method validation depending on your needs. You can validate ViewModels as well as DataModels.</li>\n<li>Conventions module to allow for easier development, as well as templates to setup your project to use conventions.</li>\n<li>Event Handlers can be easily hooked up to your view model using the simple syntax View:EventHandler.Attach=&quot;EventName =&gt; ViewModelMethod($sender,$eventArgs); etc...&quot;</li>\n<li>Supports Regions similarly to Prism with region registration happening in XAML and navigation being driven from the ViewModel</li>\n<li>Attribute Based IoC container (Export, Import), container is also environment aware and sorts exports accordingly returning the best match at Locate time (RunTime, DesignTime, UnitTest).</li>\n<li>Fluent interfaces for configuring IoC Container programatically (required for C++/CX and Windows Runtime Components)</li>\n<li>Design time ViewModel support. ViewModels are located at design time using IOC so you can use your real ViewModel and replace your IDataService with a Faux version for Design and UnitTest.</li>\n<li>Auto Registration of Views &amp; WCF Clients (i.e. all classes inheriting from ClientBase&lt;T&gt; &amp; Page)</li>\n<li>Implementations for ICommand and Attached Event Commands.</li>\n<li>Messenger service that is Dispatcher Aware (i.e. handlers are called back on the proper dispatcher)</li>\n<li>NavigationViewModel that is tied into the Metro Page Navigation system  (Supporting Navigate method &amp; Navigation Events)</li>\n<li>Extensible logging solution</li>\n<li>Configuration service that is expandable by Exporting the IConfigurationStorageProvider interface</li>\n<li>Improved Suspension Manager (auto adds DataContract classes to KnownTypes)</li>\n<li>IMessageBoxService &amp; IFilePickerService wrappers that allow you to mock out your dialogs for Design and Unit Testing purposes</li>\n<li>ICharmService make creating flyout easy by automatically registering charm controls with the SettingPane.</li>\n<li>ITileService, IBadgeService, &amp; IToastService allow for easy updates of tiles and toasts.</li>\n<li>IActivationService that can create or clone any Object (satisfying Imports and message registration)</li>\n<li>ITransformService can transform data objects from one type to another using reflection and Linq Expressions, you can use the Transform attribute to give the service hints on how to transform the property.</li>\n<li>Visual Studio Template for Projects and Items</li></ul>\n<br /><b>Getting Started</b><br />Make sure NuGet is installed then Install either the x86 build or the x64 build then just create a new Style Application using one of the provided Visual Studio Templates.<br /><br /><b>VS Code Snippets</b><br />If you are looking for some visual studio code snippets to help you on your way check out <a href=\"https://github.com/Decors/StyleMVVMCodeSnippets\">https://github.com/Decors/StyleMVVMCodeSnippets</a> - GitHub user: Decors has put together a couple helpful snippets to create delegates and other things.<br /><br /><b>Special Thanks</b><br />Goes out to the people at <a href=\"http://www.jetbrains.com/\">JetBrains</a> for providing a license for doTrace to the project. Always a big fan of your products.</div><div class=\"ClearBoth\"></div>",
  "TagList": "Metro,MVVM,Style MVVM,Toolkit,WinRT,MVVM Toolkit,developer,Windows8,winmd,C++/CX,HTML/JS,",
  "LastEdited": "2013-07-02T20:59:13.683-07:00"
}
{
  "ProjectName": "TilesGenerationScript",
  "Title": "Windows Store app Tile Generation Script",
  "Description": "A Photoshop script that generates all Windows store app Tiles from a single 558x558 square PSD file, and tries to ratio resize if needed.\r\n",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>(Windows Store app) Tile Generation script</h1>\r\nA Photoshop script that generates all 30 scalled Windows store app Tiles from a single 558x558 square PSD file.<br />When the Tile size ratio changes compared to the original PSD it tries to scale the background layer to maintain a solid background color.<br /><br />Just copy the output to the &#39;Assets&#39; folder afterwards. <br />\n<h3>How to import the script in Photoshop</h3>\rJust copy paste the jsx file in somehting like: C:\\Program Files\\Adobe\\Adobe Photoshop\\Presets\\Scripts<br />Then the script is accessible in Photoshop at File-&gt;Scripts<br /><br />\n<h3>The Script:</h3>\r(its only for Windows store app tiles for now, surely WP and other device images will follow)<br /><pre>// Photoshop Script to create Windows store app Tile images\n//\n// by Toine de Boer | Enbyin / Aviva Solutions (http://www.avivasolutions.nl)\n// \ntry\n{\n    var artwork = File.openDialog(&quot;Select a sqaure PSD file that is 558x558 to get the best result.&quot;, &quot;*.psd&quot;, false);\n\n    if (artwork !== null)\n    {\n        var doc = open(artwork);\n\n        if (doc == null)\n        {\n            throw &quot;Something is wrong with the file&quot;;\n        }\n\n        var startState = doc.activeHistoryState; // save for undo\n        var initialPrefs = app.preferences.rulerUnits; // will restore at end\n        app.preferences.rulerUnits = Units.PIXELS; // use pixels\n\n        var destFolder = Folder.selectDialog(&quot;Choose an output folder&quot;);\n\n        if (destFolder == null)\n        {\n            // user canceled\n            throw &quot;&quot;;\n        }\n\n        // Save icons in PNG using &#39;Save for Web&#39;\n        var sfw = new ExportOptionsSaveForWeb();\n        sfw.format = SaveDocumentType.PNG;\n        sfw.PNG8 = false; // use PNG-24\n        sfw.transparency = true; // transpart for the edges\n        doc.info = null; // delete metadata\n\n\t\tvar icons = [\n\t\t  { &quot;w&quot;: 558, &quot;h&quot;: 0, &quot;name&quot;: &quot;Square310x310Logo.scale-180&quot; }, // when (h == 0 or null) the width size will be taken \n\t\t  { &quot;w&quot;: 434, &quot;name&quot;: &quot;Square310x310Logo.scale-140&quot; },\n\t\t  { &quot;w&quot;: 310, &quot;name&quot;: &quot;Square310x310Logo.scale-100&quot; },\n\t\t  { &quot;w&quot;: 248, &quot;name&quot;: &quot;Square310x310Logo.scale-80&quot; },\n\t\t  { &quot;w&quot;: 126, &quot;name&quot;: &quot;Square70x70Logo.scale-180&quot; },\n\t\t  { &quot;w&quot;: 98, &quot;name&quot;: &quot;Square70x70Logo.scale-140&quot; },\n\t\t  { &quot;w&quot;: 70, &quot;name&quot;: &quot;Square70x70Logo.scale-100&quot; },\n\t\t  { &quot;w&quot;: 56, &quot;name&quot;: &quot;Square70x70Logo.scale-80&quot; },\n\t\t  { &quot;w&quot;: 270, &quot;name&quot;: &quot;Logo.scale-180&quot; },\n\t\t  { &quot;w&quot;: 210, &quot;name&quot;: &quot;Logo.scale-140&quot; },\n\t\t  { &quot;w&quot;: 150, &quot;name&quot;: &quot;Logo.scale-100&quot; },\n\t\t  { &quot;w&quot;: 120, &quot;name&quot;: &quot;Logo.scale-80&quot; },\n\t\t  { &quot;w&quot;: 54, &quot;name&quot;: &quot;SmallLogo.scale-180&quot; },\n\t\t  { &quot;w&quot;: 42, &quot;name&quot;: &quot;SmallLogo.scale-140&quot; },\n\t\t  { &quot;w&quot;: 30, &quot;name&quot;: &quot;SmallLogo.scale-100&quot; },\n\t\t  { &quot;w&quot;: 24, &quot;name&quot;: &quot;SmallLogo.scale-80&quot; },\n\t\t  { &quot;w&quot;: 256, &quot;name&quot;: &quot;SmallLogo.targetsize-256&quot; },\n\t\t  { &quot;w&quot;: 48, &quot;name&quot;: &quot;SmallLogo.targetsize-48&quot; },\n\t\t  { &quot;w&quot;: 32, &quot;name&quot;: &quot;SmallLogo.targetsize-32&quot; },\n\t\t  { &quot;w&quot;: 16, &quot;name&quot;: &quot;SmallLogo.targetsize-16&quot; },\n\t\t  { &quot;w&quot;: 90, &quot;name&quot;: &quot;StoreLogo.scale-180&quot; },\n\t\t  { &quot;w&quot;: 70, &quot;name&quot;: &quot;StoreLogo.scale-140&quot; },\n\t\t  { &quot;w&quot;: 50, &quot;name&quot;: &quot;StoreLogo.scale-100&quot; },\n\t\t  { &quot;w&quot;: 558, &quot;h&quot;: 270, &quot;name&quot;: &quot;Wide310x150Logo.scale-180&quot; },\n\t\t  { &quot;w&quot;: 434, &quot;h&quot;: 210, &quot;name&quot;: &quot;Wide310x150Logo.scale-140&quot; },\n\t\t  { &quot;w&quot;: 310, &quot;h&quot;: 150, &quot;name&quot;: &quot;Wide310x150Logo.scale-100&quot; },\n\t\t  { &quot;w&quot;: 248, &quot;h&quot;: 120, &quot;name&quot;: &quot;Wide310x150Logo.scale-80&quot; },\n\t\t  { &quot;w&quot;: 1116, &quot;h&quot;: 540, &quot;name&quot;: &quot;SplashScreen.scale-180&quot; },\n\t\t  { &quot;w&quot;: 868, &quot;h&quot;: 420, &quot;name&quot;: &quot;SplashScreen.scale-140&quot; },\n\t\t  { &quot;w&quot;: 620, &quot;h&quot;: 300, &quot;name&quot;: &quot;SplashScreen.scale-100&quot; }\n\t\t];\n\n        var icon;\n        var filename = doc.name.substr(0, doc.name.lastIndexOf(&#39;.&#39;));\n\n        for (i = 0; i &lt; icons.length; i++)\n        {\n            icon = icons[i];\n\n            var destFileName = &quot;&quot;;\n\n            if ((icon.h == null || icon.h == 0))\n            {\n                destFileName = filename + icon.w + &quot;.png&quot;;\n                icon.h = icon.w;\n            }\n            else\n            {\n                destFileName = filename + icon.w + &quot;x&quot; + icon.h + &quot;.png&quot;;\n            }\n\n            if (icon.name != null &amp;&amp; icon.name != &quot;&quot;)\n            {\n                destFileName = icon.name + &quot;.png&quot;;\n            }\n\n            if (icon.h != icon.w)\n            {\n                // get smallest value\n                var smallestSize = icon.h;\n                if (icon.w &lt; icon.h)\n                {\n                    smallestSize = icon.w;\n                }\n\n                doc.resizeImage(smallestSize, smallestSize, // width, height\n                    null, ResampleMethod.BICUBICSHARPER);\n\n                doc.resizeCanvas(icon.w, icon.h);\n\n                // highest layer must be the background....\n                var bgLayer = doc.layers[doc.layers.length - 1];\n                bgLayer.resize((doc.width.value / (bgLayer.bounds[2] - bgLayer.bounds[0])) * 100, (doc.height.value / (bgLayer.bounds[3] - bgLayer.bounds[1])) * 100, AnchorPosition.MIDDLECENTER);\n            }\n            else\n            {\n                doc.resizeImage(icon.w, icon.h, // width, height\n                    null, ResampleMethod.BICUBICSHARPER);\n            }\n            \n            doc.exportDocument(new File(destFolder + &quot;/&quot; + destFileName), ExportType.SAVEFORWEB, sfw);\n            doc.activeHistoryState = startState; // undo resize\n        }\n\n        alert(&quot;Images created and ready to copy and paste.&quot;);\n        alert(&quot;Now go and drink some coffee to spend the time you just saved with this script. &quot;);\n\n    }\n}\ncatch (exception)\n{\n    if ((exception != null) &amp;&amp; (exception != &quot;&quot;))\n        alert(exception);\n}\nfinally\n{\n    if (doc != null)\n        doc.close(SaveOptions.DONOTSAVECHANGES);\n\n    app.preferences.rulerUnits = initialPrefs;\n}\n\n\n</pre><br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "Windows 8,tiles,tile,Metro,WinRT,UI,Windows store,app,images,",
  "LastEdited": "2014-04-08T05:18:45.417-07:00"
}
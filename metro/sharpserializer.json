{
  "ProjectName": "sharpserializer",
  "Title": "SharpSerializer",
  "Description": "SharpSerializer is an open source XML and binary serializer for .NET Framework, .NET Compact Framework and Silverlight. It was developed with C#. Actually SharpSerializer can serialize to Xml and to its own binary format.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Important! SharpSerializer has moved to GitHub!</h1>\r<a href=\"https://github.com/polenter/SharpSerializer\">https://github.com/polenter/SharpSerializer</a><br /><br /><br /><br /><b>SharpSerializer is an open source XML and binary serializer for .NET Framework, Silverlight, Windows Phone, Windows RT (Metro) and Xbox360</b><br />It was developed with C#. Actually SharpSerializer can serialize to Xml and to its own binary format - using overloaded constructor.<br /><br />If you need a quick and easy way of storing your application data, without marking each of your data objects with ISerializable, or defining prior serialization all possible types you could ever serialize - use SharpSerializer. <b><i>It&#39;s free of charge for any purpose</i></b>.<br />\n<h2>SharpSerializer vs. BinaryFormatter</h2>\r<ul><li>no need to mark serialized objects with ISerializable</li>\n<li>no exception is thrown if unknown properties are deserialized (e.g. properties are removed from the data model after it has been serialized)</li></ul>\n<h2>SharpSerializer vs. XmlSerializer</h2>\r<ul><li>no need to pre-define all serialized types</li>\n<li>serialization of multidimensional arrays, nested arrays, array-of-arrays</li>\n<li>serialization of polymorphic properties (where property value is inherited from the property type - is its subtype)</li>\n<li>serialization of generic types with polymorphic arguments (e.g. MyGenericClass&lt;AbstractArgumentClass&gt;)</li>\n<li>serialization of generic listings (e.g. Dictionary&lt;K,T&gt;)</li>\n<li>serialization of polymorphic listings (Collection, Dictionary, single dimensional array, multidimensional array)</li>\n<li>serialization of listings of generic types with polymorphic arguments (e.g. an array IMyGenericInterface&lt;MyAbstractClass&gt;<a href=\"https://sharpserializer.codeplex.com/wikipage?title=%5b%2c%20%2c%5d&referringTitle=Home\">&#91;, ,&#93;</a>)</li></ul>\n\n<h2>Target platforms</h2>\r<ul><li>.NET 2.0 and above</li>\n<li>Silverlight 3 and above</li>\n<li>Windows Phone 7 and above</li>\n<li>Windows RT (Metro)</li>\n<li>Xbox 360</li></ul>\nAs a user of the <a href=\"http://www.nuget.org/List/Packages/SharpSerializer\">NuGet.org</a> plugin for VS, just search for &quot;sharpserializer&quot; in the &quot;Add library package reference..&quot; window in your VS.<br />\n<h2>Usage</h2>\r<pre>\nvar obj = CreateMyVerySophisticatedObject();\n\n// using default constructor serializes to xml\nvar serializer = new SharpSerializer();\n\nserializer.Serialize(obj, &quot;test.xml&quot;);\n\nvar obj2 = serializer.Deserialize(&quot;test.xml&quot;);\n</pre><br />\n<h2>External links with more information about SharpSerializer</h2>\r<ul><li><a href=\"http://www.sharpserializer.com\">SharpSerializer page with tutorial: www.sharpserializer.com</a></li>\n<li><a href=\"http://www.codeproject.com/KB/XML/sharpserializer.aspx\">XML Serialization of Generic Dictionary, Multidimensional Array, and Inherited Type, with SharpSerializer .NET</a></li>\n<li><a href=\"http://www.codeproject.com/KB/windows-phone-7/sharpserializer_serialize.aspx\">How to serialize data effectively? Custom serialization of Bitmap, Cursor, Icon, Font and other objects without default constructor with SharpSerializer</a></li>\n<li><a href=\"http://www.codeproject.com/KB/silverlight/bin_ser_in_silverlight.aspx\">Binary Serialization to Isolated Storage in Silverlight - BinaryFormatter vs. SharpSerializer</a></li></ul></div><div class=\"ClearBoth\"></div>",
  "TagList": "C#,xml,Serialization,storage,Silverlight,Repository,XML Serialization,serialize,Phone,serializer,binary,WP7,SharpSerializer,portable library,Windows Phone,Xbox 360,WinRT,Windows RT,Metro,Binary serialization,xml serialize,binary serialize,",
  "LastEdited": "2017-10-10T12:04:14.823-07:00"
}
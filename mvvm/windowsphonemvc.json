{
  "ProjectName": "windowsphonemvc",
  "Title": "Windows Phone MVC",
  "Description": "Windows Phone MVC is a MVC implementation for WP7. It supports strongly typed navigation with history, easier handling of windows phones lifecycle, multiple navigation frames and enables you to build testable, and maintainable applications for WP7.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Windows Phone MVC is a MVC implementation for WP7. It supports strongly typed navigation with history, easier handling of windows phones lifecycle, multiple navigation frames and enables you to build testable, and maintainable applications for WP7.<br />\n<h1>Windows Phone MVC has been replaced by <a href=\"http://phoenixframework.codeplex.com/\">http://phoenixframework.codeplex.com/</a> </h1>\r\nThere is quite a high compatibility and many concepts are transferrable. The main difference is Phoenix has WPF and WP7 support, and is far more mature.<br /><br /><br /><br /><br />This project was spawned from Columbus, another WP7 framework, which was inspired from Magellan (a WPF MVC framework). I learnt a lot from those projects, and I wanted to change some core behavior of Columbus, and so WP7 MVC was born.<br /><br />MVVM can only get you so far, MVC is an awesome way to deal with navigation BETWEEN views, then MVVM can take over and provide the interaction on that view. A large effort has been made to maintain full compatibility with the out of the box feature sets.<br />\n<h2>Documentation/More information at <a href=\"http://windowsphonefoundations.net/\">http://windowsphonefoundations.net/</a></h2>\r<h2>See an example of many of the features at <a href=\"http://jake.ginnivan.net/windows-phone-mvc-update\">http://jake.ginnivan.net/windows-phone-mvc-update</a></h2>\r<h2>Google Group for discussion/asking questions at <a href=\"https://groups.google.com/group/windowsphonemvc\">https://groups.google.com/group/windowsphonemvc</a></h2>\r\n<h1>Framework Features</h1>\r\n - Strongly Typed Navigation, with objects as parameters support (Controller&lt;HomeController&gt;().NavigateTo(c=&gt;c.SomeAction(StateArgument)))<br /> - Custom Shell, Navigator and Journal to give better control over navigation of WP7 (like back stack manipulation, in NoDo! And stuff like BackTo&lt;HomeController&gt;(c=&gt;c.Main());)<br /> - TransitionFrame comes out of the box, for nice navigation animations using the Silverlight Toolkits Transitions<br /> - FAST! I am constantly tweaking the internals to make sure all the awesomeness does not have a massive performance hit<br /> - Ability to pass arguments in navigation, rather than uri query strings (had to mention this twice because it is so handy)<br /> - Easy access to Obscured and Activated events on your view model<br /> - Full Testable! All major WP7 classes (WindowsPhoneFrame, WindowsPhoneApplication etc) all have Interfaces and are wrapped to allow you to test<br /> - Some helpers around Async. Execute.AsyncPattern or Execute.AsyncPatternWithResult synchronise async calls<br /> - Task/Chooser support, in a testable way<br /> - Convention based Controller and View discovery<br /> - Autofac Support Via an Extension<br /> - Easy access to page or application transient storage<br /> - Simple tombstoning support<br /> - Awesome tracing/debugging output so you know what is happening, and see any performance bottlenecks, see <a href=\"http://jake.ginnivan.net/wp7-mvc-trace-logging-and-debugging\">http://jake.ginnivan.net/wp7-mvc-trace-logging-and-debugging</a> for a look<br />\n<h2>Mango Features</h2>\r - Search Extra&#39;s support<br /> - Super Easy Deep Linking (easier than the default apis :P)<br /> - More coming soon!<br />\n<h2>Apps Using it</h2>\rWindows Phone MVC is in production now and is being used by <a href=\"http://transhub.wordpress.com/\">http://transhub.wordpress.com/</a> which is a really cool app and winner of Spotlight 2011<br /><br />And we are in the process of rebuilding Mahtweets for WP7 (<a href=\"http://mahtweetswp7.codeplex.com/\">http://mahtweetswp7.codeplex.com/</a>) just for Mango using the framework. So head over there for a currently evolving app and see how Windows Phone MVC can help you write awesome performant WP7 apps with ease and without the frustration of the restrictiveness of the OOTB APIs.<br /><br />At this point I am really open to suggestions in ways to improve this framework. <br />\n<h2>Notes</h2>\rController actions are executed asynchronously, this means if you are fetching data from web services, it should be done in a synchronous way, currently the best way to do this is:<br /><span class=\"codeInline\"> var stuff = Execute.AsyncPatternWithResults(myService.BeginGetStuff, &quot;Arg1&quot;, &quot;Arg2&quot;, myService.EndGetStuff); </span></div><div class=\"ClearBoth\"></div>",
  "TagList": "MVC,MVVM,Windows Phone 7,WP7,",
  "LastEdited": "2012-04-16T18:49:41.093-07:00"
}
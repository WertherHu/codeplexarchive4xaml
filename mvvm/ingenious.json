{
  "ProjectName": "ingenious",
  "Title": "Ingenious Framework",
  "Description": "Ingenious Framework is an easy to use, lightweight framework that hides semantic web technologies from you as a developer, but harnesses its benefits.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Ingenious Framework</h1>\r\nIngenious Framework is the ultimate .NET software stack for building next generation, open-world software applications using a uniquely simple and easy to use syntax for building, storing and accessing RDF triple data (the data format harnessed by the semantic web).<br /><br />For a simple example of how easy Ingenious can be, see our <a href=\"https://ingenious.codeplex.com/documentation?referringTitle=Home\">Documentation</a>.<br /><br />Not only a serialization library for RDF, Ingenious offers a complete intelligent data access layer coupled with a lightweight MVVM (Model View View-Model) library based upon the popular Caliburn Micro framework to give you all you need to start using the semantic web natively in your .NET applications - using modern best practices.<br />\n<h3>Features</h3>\r\n<ul><li>Unique and easy to use syntax for handling semantic web/RDF data in your applications (just see our <a href=\"https://ingenious.codeplex.com/documentation?referringTitle=Home\">Documentation</a> for a very quick example of how easy it can be).</li>\n<li>Flexible storage - store your data in-memory, or in a number of popular databases (including the open source JSON based Mongo DB, or Raven DB databases). No need for expensive data servers to get your project started.</li>\n<li>Type mapper for POCOs (Plain Old CLR Objects) permits you to use your current data storage classes with RDF without special migration code - allowing you to decouple of your data layer from Ingenious (or, for those who prefer the lingo, use true best practice Repository Pattern).</li>\n<li>Delay-loaded node framework means the ultimate in efficient loading of data from your storage provider. Only load data &#39;on-demand&#39; as it is required by your processing code, or WPF data binding.</li>\n<li>Targeted at allowing true MVVM (Model View View-Model) design pattern with RDF. Template your application automatically according to the underlying semantic web/ontology type.</li>\n<li>Use familiar LINQ style query notation to manage querying a model using SPARQL.</li>\n<li>Easily serialize/deserialize your data to and from popular RDF formats such as RDF/XML and Turtle.</li>\n<li>Ultra fast access to common semantic web dictionaries (ontologies) through BOWL (Binary Web Ontology Language) and LINQ to OWL.</li>\n<li>Open Source license - so if you are making your project open source, Ingenious costs nothing.</li></ul>\n<br /><b>New to RDF?</b> See our popular, highly acclaimed tutorial series on our website: <a href=\"http://www.linkeddatatools.com/semantic-web-basics\">http://www.linkeddatatools.com/semantic-web-basics</a>.<br /><br /><b>Note: Ingenious is currently in early stage and is not yet for functional use. Please check back frequently for new releases. For using Ingenious in commercial products, a separate commercial license will be available on release of version 1.0 to enable you to publish your software without the requirement to release under the GNU license.</b><br /><br />Ingenious is currently in alpha stage but is under constant development. If you wish to get ongoing updates please visit our website, <a href=\"http://www.linkeddatatools.com\">http://www.linkeddatatools.com</a>.</div><div class=\"ClearBoth\"></div>",
  "TagList": "semantic web,RDF,MVVM,",
  "LastEdited": "2013-08-31T10:38:20.76-07:00"
}
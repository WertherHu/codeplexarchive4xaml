{
  "ProjectName": "PDO",
  "Title": "Persistable Data Objects for WPF",
  "Description": "Persistable Data Objects for WPF is an ORM tool and application framework for developing data driven applications in Windows Presentation Framework (WPF).  The code generation tool builds C# classes and SQL stored procedures  that are fully LINQ queryable.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Persistable Data Objects for WPF is an ORM tool and application framework for developing data driven applications in Windows Presentation Framework &#40;WPF&#41;.  The code generation tool builds C&#35; classes and SQL stored procedures  that are fully LINQ queryable.<br />\n<h1>Persistable Data Objects for WPF (BETA)</h1>\r<i>This project is still in Beta.  Updated source, examples and documentation are coming soon.</i><br />\n<h2>Requirements:</h2>\r   .NET 3.5<br />   C#<br />   Microsoft SQL 2008<br />\n<h2>Feature Summary</h2>\rThe main features of the PDO Framework are:\n<ul><li>Encapsulation of data access operations in a convenient, efficient manner.</li>\n<li>Support of disconnected data operations.  No explicit interaction with a database context required beyond initial configuration.</li>\n<li>Integration with LINQ – instead of developing our own query language, we leverage LINQ.</li>\n<li>Automatically transacted operations</li>\n<li>Smooth integration with WPF (and Silverlight) \n<ul><li>Implement CLR interfaces for IEditableObject, IDataErrorInfo, INotifyPropertyChanged, ICollectionChanged, etc.</li></ul></li>\n<li>Maintainable and debuggable – we avoid use of System.Reflection.Emit, complex configuration files and attempt to generate clear, readable code (with comments even!)</li>\n<li>Generate enums direct from database</li>\n<li>Validation Rules – the basics are auto-generated, and can be easily extended.</li>\n<li>Paging</li></ul>\nHere are some simple <a href=\"https://pdo.codeplex.com/wikipage?title=Code%20Samples&referringTitle=Home\">Code Samples</a>.\n<h2>What&#39;s What</h2>\rThe associated source repository contains two top level folders: Framework and PDOGenerator.  The PDOGenerator folder contains the PDO Generator application project that generates the Persistable Data Object classes and CRUD stored procedures from your database.  It also generates complete database create and data population scripts.  See ...\\Framework\\NorthwindDataModel\\Scripts\\ for examples.<br /><br />The PDO Framework and a couple sample applications can be found in the Framework folder.\n<ul><li>NorthwindDataModel is the generated PDO data model</li>\n<li>NorthwindApp is a very simple WPF app using the NorthwindDataModel</li>\n<li>The PDO.App.DataExplorer is a tree view based app that can explore any PDO datamodel, given a database connection string, and the path to a PDO datamodel assembly.  Check out the Settings menu.</li></ul>\n\n<h2>Getting Started</h2>\rRun the myNorthWindRebuild.bat file found in Framework\\NorthwindDataModel\\Scripts to create a (slightly modified) version of the Northwind database on your machine.  Take a look into the batch files to see what arguments are needed.<br /><br />You can then run either of the sample apps mentioned above, or the PDO Generator application.<br /><br />There is a connection string in the App.config for NorthwindApp you may need to adjust.</div><div class=\"ClearBoth\"></div>",
  "TagList": "LINQ,orm,WPF,Framework,Presentation Model,MVVM,",
  "LastEdited": "2009-12-09T08:30:57.44-08:00"
}
{
  "ProjectName": "obelisk",
  "Title": "Obelisk - WP7, WP8 & Windows 8 MVVM Persistence Library",
  "Description": "This library offers an easy way to implement both tombstone and permanent persistence in WP7 & Windows 8 applications.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong><br>\r\nThis library offers an easy way to implement both tombstone and permanent persistence in WP7, WP8 &amp; Windows 8 applications.<br>\r\n<br>\r\nThe source code includes a demonstration of how to use the library with a normal MVVM pattern and MVVM Light.</p>\r\n<p><strong>Known Obelisk Implementations</strong></p>\r\n<p><a href=\"http://www.windowsphone.com/en-us/store/app/aawp/7ac11ead-4095-4dc2-a4ed-8cfd020e23e0\">The award winning AAWP WP app</a></p>\r\n<p><a href=\"http://apps.microsoft.com/windows/en-GB/app/aawp/320efbdf-832a-4fd4-8ba4-8920874915c3\">AAWP Windows 8 app</a></p>\r\n<p><a href=\"http://apps.microsoft.com/windows/en-GB/app/custom-grafix/039604c4-8ee0-42e2-b6c6-2399af64bf9a\">Custom GraFix Windows 8 app</a></p>\r\n<p><a href=\"http://www.windowsphone.com/en-gb/store/app/keep-calm/8399727c-c6fe-4461-944a-e1f59b1e42ae\">Keep Calm WP app</a></p>\r\n<p><a href=\"http://apps.microsoft.com/windows/en-gb/app/keep-calm/866f61aa-8a4f-4255-a3e5-a9e28957092d\">Keep Calm Windows 8 app</a></p>\r\n<h2>Obelisk Checklist</h2>\r\n<h3>1. Make sure the Persistence Manager control methods are connected to the application event methods in App.xaml.cs:</h3>\r\n<p><strong>WP7 / WP8:</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Application_Launching(<span style=\"color:blue\">object</span> sender, LaunchingEventArgs e)\n{\n  <span style=\"color:green\">// Notify PersistenceManager of launch</span>\n  PersistenceManager.Instance.OnLaunching();\n}</pre>\r\n</div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Application_Activated(<span style=\"color:blue\">object</span> sender, ActivatedEventArgs e)\n{\n  <span style=\"color:green\">// Notify PersistenceManager of activation</span>\n  PersistenceManager.Instance.OnActivated(e.IsApplicationInstancePreserved);\n}</pre>\r\n</div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Application_Deactivated(<span style=\"color:blue\">object</span> sender, DeactivatedEventArgs e)\n{\n  <span style=\"color:green\">// Notify PersistenceManager of deactivation</span>\n  PersistenceManager.Instance.OnDeactivated();\n}</pre>\r\n</div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Application_Closing(<span style=\"color:blue\">object</span> sender, ClosingEventArgs e)\n{\n  <span style=\"color:green\">// Notify PersistenceManager of closing</span>\n  PersistenceManager.Instance.OnClosing();\n}\n</pre>\r\n</div>\r\n<p><br>\r\n<strong>Windows 8:</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><div style=\"color:black; background-color:white\"><pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> async <span style=\"color:blue\">void</span> OnLaunched(LaunchActivatedEventArgs args)\n{\n  <span style=\"color:blue\">if</span> (args.PreviousExecutionState == ApplicationExecutionState.Terminated)\n  {\n    <span style=\"color:green\">// Notify PersistenceManager of launch</span>\n    await PersistenceManager.Instance.OnActivated(<span style=\"color:blue\">false</span>);\n  }\n  <span style=\"color:blue\">else</span>\n  {\n    <span style=\"color:green\">// Notify PersistenceManager of launch</span>\n    await PersistenceManager.Instance.OnLaunching();\n  }\n\n  <span style=\"color:green\">// Create a Frame to act navigation context and navigate to the first page</span>\n  <span style=\"color:blue\">var</span> rootFrame = <span style=\"color:blue\">new</span> Frame();\n  rootFrame.Navigate(<span style=\"color:blue\">typeof</span>(MainPage));\n\n  <span style=\"color:green\">// Place the frame in the current Window and ensure that it is active</span>\n  Window.Current.Content = rootFrame;\n\n  <span style=\"color:green\">// Register nav</span>\n  PersistenceManager.Instance.Register(<span style=\"color:#a31515\">&quot;_nav&quot;</span>, <span style=\"color:blue\">new</span> NavigationManager(rootFrame));\n\n  Window.Current.Activate();\n}</pre>\n</div>\n</pre>\r\n</div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> async <span style=\"color:blue\">void</span> OnActivated(IActivatedEventArgs args)\n{\n  <span style=\"color:blue\">base</span>.OnActivated(args);\n\n  <span style=\"color:green\">// Notify PersistenceManager of activation</span>\n  <span style=\"color:blue\">if</span> (args.PreviousExecutionState ==   ApplicationExecutionState.Suspended\n|| args.PreviousExecutionState ==   ApplicationExecutionState.Terminated)\n  {\n    await PersistenceManager.Instance.OnActivated(<span style=\"color:blue\">false</span>);\n  }\n  <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (args.PreviousExecutionState ==   ApplicationExecutionState.ClosedByUser)\n  {\n    await PersistenceManager.Instance.OnLaunching();\n  }\n}</pre>\r\n</div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> async <span style=\"color:blue\">void</span> OnSuspending(<span style=\"color:blue\">object</span> sender, SuspendingEventArgs e)\n{\n  <span style=\"color:green\">// Get deferral</span>\n  <span style=\"color:blue\">var</span> deferral = e.SuspendingOperation.GetDeferral();\n\n  <span style=\"color:green\">// Notify PersistenceManager of deactivation and wait</span>\n  await PersistenceManager.Instance.OnDeactivated();\n\n  <span style=\"color:green\">// Notify OS we're done</span>\n  deferral.Complete();\n}</pre>\r\n</div>\r\n<h3>2. Make sure the PersistenceManager is attached in the App.axml.cs InitializePhoneApplication method for WP7:</h3>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>PersistenceManager.Instance.AttachPersistenceManager(<span style=\"color:blue\">new</span> Assembly[] { Assembly.GetExecutingAssembly() });</pre>\r\n</div>\r\n<p><strong>Or in the constructor for Windows 8:</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>PersistenceManager.Instance.AttachPersistenceManager(<span style=\"color:blue\">new</span> Assembly[] { <span style=\"color:blue\">typeof</span>(App).GetTypeInfo().Assembly });</pre>\r\n</div>\r\n<h3>3. Everytime a View Model is instantiated, it must be registered:</h3>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>_main = <span style=\"color:blue\">new</span> MainViewModel();\n\n<span style=\"color:green\">// Register View Model with PersistenceManager </span>\nPersistenceManager.Instance.Register(<span style=\"color:#a31515\">&quot;_main&quot;</span>, _main);</pre>\r\n</div>\r\n<h3>4. Data loaded from an external source like a service should be called from the OnInitialised method if it is not persisted from permanent storage:</h3>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> OnLaunched()\n{\n  <span style=\"color:green\">// Only get data on launch</span>\n  <span style=\"color:blue\">if</span>(_data == <span style=\"color:blue\">null</span>)\n  <span style=\"color:blue\">this</span>._dataService.GetData(context, <span style=\"color:blue\">this</span>.CallbackDispatcher);\n}</pre>\r\n</div>\r\n<h3>5. Mark any properties required for persistance with the Persist attribute:</h3>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>[Persist(PersistMode.Both)]\n<span style=\"color:blue\">public</span> Person Person\n{\n  <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>._person; }\n  <span style=\"color:blue\">set</span> \n  {\n    <span style=\"color:blue\">if</span> (<span style=\"color:blue\">this</span>._person != value)\n    {\n      <span style=\"color:blue\">this</span>._person = value;\n      <span style=\"color:blue\">base</span>.RaisePropertyChanged(<span style=\"color:#a31515\">&quot;Person&quot;</span>);\n    }\n  }\n}</pre>\r\n</div>\r\n<h3>6. Check any collections or lists have an alternate simple array property so that it can easily be serialised and deserialised.</h3>\r\n<p><br>\r\n<a href=\"http://geoffwebbercross.blogspot.com/\">http://geoffwebbercross.blogspot.com/</a></p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2013-04-10T02:20:31.437-07:00"
}
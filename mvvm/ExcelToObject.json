{
  "ProjectName": "ExcelToObject",
  "Title": "Excel to Object Binder",
  "Description": "Enables to bind your .Net class instances in your Excel documents via templates\r\nBinding can be bi-directional (changes in Excel will affect underlying objects)",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><font size=\"3\"><strong>Project Description</strong><br>\r\nEnables to bind your .Net class instances in your Excel documents via templates.<br>\r\nBinding are bi-directional (changes in Excel will affect underlying objects).</font><br>\r\n<font size=\"3\"><font style=\"font-weight:bold\"></font></font></p>\r\n<p><font size=\"3\"><font style=\"font-weight:bold\"></font></font>&nbsp;</p>\r\n<p><font size=\"3\"><font style=\"font-weight:bold\">Introduction:</font></font></p>\r\n<p><font size=\"3\">Inspired by Microsoft WPF, the goal of this application is to bind and render your data objects in Excel directly.</font></p>\r\n<p><font size=\"3\">As its (much bigger) model,&nbsp; this project relies on templates (the ‘.xaml’ in WPF) to render your data.\r\n</font></p>\r\n<p><font size=\"3\">In ‘Excel To Object Binder’, the templates&nbsp; are built directly in Excel according to a certain formalism (for more information please go\r\n<a href=\"http://exceltoobject.codeplex.com/documentation\" target=\"_blank\">here</a></font><font size=\"3\"></font><font size=\"3\">).</font></p>\r\n<p><font size=\"3\">As WPF, if you data model (or your view model for the </font><a href=\"http://en.wikipedia.org/wiki/Model_View_ViewModel\" target=\"_blank\"><font size=\"3\">Mvvm</font></a><font size=\"3\"> addicts) supports the ‘INotifyPropertyChanged’ interface,\r\n the views will be refreshed according to you data changes (some examples <a href=\"http://exceltoobject.codeplex.com/wikipage?title=Samples\" target=\"_blank\">\r\nhere</a></font><font size=\"3\"></font><font size=\"3\">) (if not, your data will be refreshed when requested or when a sheet is activated).</font></p>\r\n<p><font size=\"3\">As WPF, the Binding is bi-directional.</font></p>\r\n<p>&nbsp;</p>\r\n<p><font size=\"3\"><strong>A quick overview of how to proceed:</strong></font></p>\r\n<ul>\r\n<li><font size=\"3\">Create your template (</font><a href=\"http://exceltoobject.codeplex.com/documentation\" target=\"_blank\"><font size=\"3\">for more information</font></a><font size=\"3\">):</font></li></ul>\r\n<blockquote>\r\n<p>Template example:<br>\r\n<a href=\"/projects/ExcelToObject/a44fdc9d-5e73-46d9-acab-2f21ebedcd88\"><img title=\"BindingTemplate\" border=\"0\" alt=\"BindingTemplate\" src=\"/projects/ExcelToObject/73bc5151-e871-43a3-9408-da08df2f33dd\" width=\"971\" height=\"120\" style=\"border-left-width:0px; border-right-width:0px; border-bottom-width:0px; padding-top:0px; padding-left:0px; display:inline; padding-right:0px; border-top-width:0px\"></a></p>\r\n</blockquote>\r\n<ul>\r\n<li><font size=\"3\">Create the view based on your template</font><font size=\"3\"> <font size=\"3\">\r\n(</font><a href=\"http://exceltoobject.codeplex.com/documentation\" target=\"_blank\"><font size=\"3\">for more information</font></a><font size=\"3\">)</font>:</font></li></ul>\r\n<blockquote>\r\n<p><font size=\"2\">Excel.<span style=\"color:\"><font color=\"#2b91af\">Range</font></span> viewFirstOutputRange =\r\n<span style=\"color:\"><font color=\"#0000ff\">this</font></span>.Range[<span style=\"color:\"><font color=\"#a31515\">&quot;B3&quot;</font></span>, missing];<br>\r\n<span style=\"color:\"><font color=\"#2b91af\">IExcelTemplateView</font></span> view =\r\n<span style=\"color:\"><font color=\"#2b91af\">ExcelBindingTemplateManager</font></span>.Instance.AddView(<span style=\"color:\"><font color=\"#a31515\">&quot;Template Customer 1&quot;</font></span>,\r\n<span style=\"color:\"><font color=\"#a31515\">&quot;Customers1&quot;</font></span>, <span style=\"color:\">\r\n<font color=\"#0000ff\">this</font></span>.InnerObject, viewFirstOutputRange);</font></p>\r\n<p><font size=\"1\">(this code sample comes from the ‘ExcelVsto2010Test’ test project that can be found in the ‘Tests\\ExcelVsto2010Test’ subfolder\r\n</font><a href=\"http://exceltoobject.codeplex.com/SourceControl/latest\" target=\"_blank\"><font size=\"1\">in the solution sources</font></a><font size=\"1\">.</font></p>\r\n</blockquote>\r\n<font face=\"Consolas\"><font style=\"font-size:9.8pt\">\r\n<ul>\r\n<li><font size=\"3\" face=\"Calibri\">Set your view data source&nbsp; <font size=\"3\">\r\n(</font><a href=\"http://exceltoobject.codeplex.com/documentation\" target=\"_blank\"><font size=\"3\">for more information</font></a><font size=\"3\">)</font></font><font size=\"3\" face=\"Calibri\">:</font></li></ul>\r\n<blockquote>\r\n<p></font></font><font size=\"2\">view.SetDataSource(<span style=\"color:\"><font color=\"#2b91af\">CustomersManager</font></span>.GetCustomers());</font><br>\r\n<font size=\"1\">(this code sample comes from the ‘ExcelVsto2010Test’ test project that can be found in the ‘Tests\\ExcelVsto2010Test’ subfolder\r\n</font><a href=\"http://exceltoobject.codeplex.com/SourceControl/latest\" target=\"_blank\"><font size=\"1\">in the solution sources</font></a><font size=\"1\">.</font>&nbsp;</p>\r\n</blockquote>\r\n<ul>\r\n<li>Render the view:</li></ul>\r\n<blockquote>\r\n<p><font face=\"Consolas\"><span style=\"color:\"><font color=\"#2b91af\"><font size=\"2\" face=\"Calibri\">ExcelBindingTemplateManager</font></font></span><font size=\"2\" face=\"Calibri\">.Instance.Render(View);</font></font></p>\r\n</blockquote>\r\n<ul>\r\n<li><font size=\"3\">See the result:</font></li></ul>\r\n<blockquote>\r\n<p><a href=\"/projects/ExcelToObject/532ac251-1073-4489-b592-622a23a6d393\"><img title=\"BindingExample\" border=\"0\" alt=\"BindingExample\" src=\"/projects/ExcelToObject/22d25cc1-36ed-4796-addc-c6bb032bb1d4\" width=\"701\" height=\"227\" style=\"border-left-width:0px; border-right-width:0px; border-bottom-width:0px; padding-top:0px; padding-left:0px; display:inline; padding-right:0px; border-top-width:0px\"></a></p>\r\n</blockquote>\r\n<p><font size=\"3\"><strong></strong></font>&nbsp;</p>\r\n<p><font size=\"3\"><strong>Samples :</strong></font></p>\r\n<p>For more information, please go <a href=\"http://exceltoobject.codeplex.com/wikipage?title=Samples\" target=\"_blank\">\r\nhere</a>.&nbsp; </p>\r\n<p>&nbsp;</p>\r\n<p><font size=\"3\"><strong>To come:</strong></font></p>\r\n<ul>\r\n<li>User interfaces to make easier the templates creation. </li><li>Support for all the CRUD operations. </li><li>More documentation and samples: standard Com Excel Addin, <a href=\"http://exceldna.codeplex.com/\" target=\"_blank\">\r\nExcelDna</a> (if i can)... </li><li>...&nbsp; </li></ul>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "Excel,Template,MVC,Binding,MVVM,Vsto,",
  "LastEdited": "2014-01-06T12:23:36.32-08:00"
}
{
  "ProjectName": "Cinch",
  "Title": "A Rich Full Featured WPF/SL MVVM Framework",
  "Description": "Cinch is a fully featured WPF MVVM framework that makes it easier to develop rich MVVM WPF applications. It also provides UI services/threading/unit tests helpers and much more.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>What Is Cinch?</h1>\rCinch is a MVVM framework that exposes a number of helper classes to allow the developer to quickly get to grips with creating scalable testable MVVM frameworks as quickly as possible.<br /><br />Testing was of paramount importance, and Cinch has had this issue in mind from the very beginning, as such you should find it very easy to unit test your code when using Cinch.<br /><br />Cinch has 2 active releases\n<ol><li>Cinch V1 : WPF Only </li>\n<li>Cinch V2 : Which is WPF and Silverlight (4.0 or above) </li></ol>\nHere is a list of features that Cinch provides\n<ul><li>View lifecycle events in your ViewModel either by attached behaviours (Cinch V1) or via a deciated UI service (Cinch V2) </li>\n<li>Event To ICommand preversing all relavant data such as Sender/EventArgs etc etc </li>\n<li>IEditableObject support on Models (Cinch V1) and ViewModels (Cinch V1 and Cinch V2). Which allows the store/restore of ViewModel object state on edit / cancel edit </li>\n<li>Flexable delegate based validation rules </li>\n<li>Native IDataErrorInfo support using the Delegate rules approach </li>\n<li>Weak event creation, to allow the creation of WeakEvents </li>\n<li>Weak event subscription, which also allows auto unsubscriptions </li>\n<li>Weak reference based disconnected messaging Via Mediator pattern </li>\n<li>Customizable IOC/DI container support for UI Services (Cinch V1 Only) </li>\n<li>Managed Extensibility support for UI Services (Cinch V2 Only) </li>\n<li>MVVM MenuItem support </li>\n<li>Closeable ViewModels (when you are using TabControl say) </li>\n<li>Workspace supporting View 1st (Cinch V2 WPF Only) </li>\n<li>Design time data support (Cinch V2 Only) </li>\n<li>Handful of utilities such as \n<ul><li>Weak reference based INotifyProperty observer </li>\n<li>INotifyProperty property name Expression tree helper </li>\n<li>Binding evaluators (Cinch V2) </li></ul></li>\n<li>Threading helpers \n<ul><li>Dispatcher extension methods to allow quick marshalling of a Action&lt;T&gt; to the correct UI Dispatcher </li>\n<li>Application.DoEvents </li>\n<li>Application.DoEvents (for a certain Dispatcher Priority) </li>\n<li>BackgroundTaskManager with callback to alert waiting Unit tests of completion, to allow test to complete or timeout </li>\n<li>ObservableCollection, which notifies CollectionChanged on correct Dispatcher thread </li>\n<li>ObservableCollection, which allows a range of items to be added </li></ul></li>\n<li>UI Services \n<ul><li>Event Logger (Cinch V1 Only) </li>\n<li>MessageBox (Cinch V1 and Cinch V2 WPF/SL) </li>\n<li>Open File (Cinch V1 and Cinch V2 WPF) </li>\n<li>Save File (Cinch V1 and Cinch V2 WPF) </li>\n<li>Popup Window (Cinch V1 and Cinch V2 WPF) </li>\n<li>Child Window (Cinch V2 SL) </li></ul></li>\n<li>ViewModel code generator </li></ul>\n<br /><br />Cinch is not meant for creating modular UIs, like PRISM, but it does offer a great many other features that are comparable with PRISM such as<br /><br />PRISM EventAggregator  == Cinch Mediator<br />PRISM UI Service location == Cinch UI Services<br /><br />And to some extent PRISM Regions == Cinch Workspaces, though I have to say PRISM regions are excellent, however with Cinch V2 you can also use PRISM v4 (which is MEF based) regions/modules with ease. So you can have your cake and eat it too. <br /><br />\n<h3>Cinch V1</h3>\rCinch V1 is a VS2008 solution which only supported WPF, and was aimed at doing MVVM in a ViewModel 1st approach here is a diagram that may help to cement the list above:<br /><img src=\"http://dl.dropbox.com/u/2600965/CinchV1_WPF.png\" /><br /><br />And here is a screen shot of it the demo app that went with Cinch V1<br />Where it used EntityFramework to use with a simple search type UI, and it demonstrates validation/editing of object, cancelling edits, messaging using the Mediator<br /><br /><img src=\"http://dl.dropbox.com/u/2600965/CinchV1Demo.png\" /><br /><br />Cinch originally started as a codeproject atricle, and people asked me to move the code to codeplex, which I did, but all the documentation is available on codeproject and that should be used as main source of information regarding Cinch. <br /><br />I will maintain a set of links here, which point to codeproject.<br /><br />Cinch V1 article links are as follows:\n<ol><li><a href=\"http://www.codeproject.com/KB/WPF/Cinch.aspx\">A discussion of what would be included in Cinch (much the same as the list above)</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchII.aspx\">A discussion of attached behaviours/attached commands/modes/weak events/mediator usage</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchIII.aspx\">A discussion of UI services/threading helpers/Menus the MVVM way/closeable tabs the MVVM way</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchIV.aspx\">A discussion of how to develop models/ViewModels using Cinch</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchV.aspx\">A discussion of how to unit test using Cinch</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchVI.aspx\">A discussion on the Cinch demo</a> </li></ol>\n<h3></h3>\r<h3>Cinch V2</h3>\rCinch V2 is a VS2010 solution which supports WPF/Silverlight 4, and was aimed at doing MVVM in a View 1st using design time service which would provide design time data to Blend. It uses Managed Extensibility framework to do all this.<br />Here are some screen shots of the Cinch V2 demo apps:\n<ul><li><b>Cinch V2 WPF Demo</b></li></ul>\nThis is the architecural image for Cinch V2 WPF<br /><img src=\"http://dl.dropbox.com/u/2600965/CinchV2_WPF.png\" />\n<ul><li>Here are some screen shots of the WPF demo app</li></ul>\n\n<ul><li><img src=\"http://sachabarber.net/wp-content/uploads/2010/05/wpfDemo_thumb.png\" /></li></ul>\n<br />And here it is in Blend, note that design time data<br /><br /><img src=\"http://sachabarber.net/wp-content/uploads/2010/05/wpfBlend1.png\" /><br />\n<ul><li>**</li></ul>\n<b>Cinch V2 SilverlightDemo</b><br />This is the architecural image for Cinch V2 Silverlight<br /><img src=\"http://dl.dropbox.com/u/2600965/CinchV2_SL.png\" />\n<ul><li>Here are some screen shots of the Silverlight demo app</li></ul>\n<img src=\"http://sachabarber.net/wp-content/uploads/2010/06/image_thumb.png\" /><br /><img src=\"http://sachabarber.net/wp-content/uploads/2010/06/image_thumb1.png\" /><br /><img src=\"http://sachabarber.net/wp-content/uploads/2010/06/image_thumb2.png\" /><br /><img src=\"http://sachabarber.net/wp-content/uploads/2010/06/image_thumb3.png\" /><br /><br /><br />Cinch V2 article links are as follows:\n<ol><li><a href=\"http://www.codeproject.com/KB/WPF/CinchV2_1.aspx\">Discussed the use of MEF and the MefedMVVM library within CinchV2</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchV2_2.aspx\">Discussed the WPF/SL and common services within CinchV2</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchV2_3.aspx\">Discussed the new features of Cinch V2 that were not in Cinch V1</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchV2_4.aspx\">A Deep Dive Into What Has Changed/What Has Stayed The Same</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchV2_5.aspx\">Disecting The WPF Demo App</a> </li>\n<li><a href=\"http://www.codeproject.com/KB/WPF/CinchV2_6.aspx\">Disecting The SL4 Demo App</a> </li></ol>\n<b>Community based articles:</b><br /><a href=\"http://www.codeproject.com/KB/silverlight/MvvmSilverlightNavigation.aspx\">How to convert a Silverlight Navigation Application to use MVVM using Cinch V2. Which basically shows you how to use the Silverlight inbuilt navigation features with CinchV2 for Silverlight</a><br /><br />There is also another very nice demo/project that utilises Cinch V2 for WPF available at <a href=\"http://sqlservercompanion.codeplex.com/\">SQL Server Companion WPF</a> which basically looks like this<br /><br /><img src=\"http://i3.codeplex.com/Download?ProjectName=SqlServerCompanion&amp;DownloadId=273740\" /><br /><br /><br />\n<h2>Cinch V2 Working With PRISM v4</h2>\rFor those of you that love PRISM, and want to use PRISM things like Regions/Modules, good news CinchV2 works seamlessly with PRISM 4, you can read all about it using this article\n<ul><li><a href=\"http://www.codeproject.com/KB/WPF/CinchV2AndPRISM4.aspx\">Showcasing Cinch MVVM framework / PRISM 4 interoperability</a> </li></ul>\n<br />I have created 2 demos to showcase this in the article and here are some screen shots of them in all their glory<br /><br />Demo 1 : Shows how to use a custom region adaptor (but does not use regions), and also uses some CinchV2 goodies<br /><br /><img src=\"http://www.codeproject.com/KB/WPF/CinchV2AndPRISM4/demo1_3.png\" /><br /><br />Demo 2 : Shows how to use a regions/modules, and also uses some CinchV2 goodies<br /><br /><img src=\"http://www.codeproject.com/KB/WPF/CinchV2AndPRISM4/demo2.png\" /><br /><br /><br /><br />\n<h2>Cinch ViewModel Code Generator</h2>\rCinch V1 and Cinch V2 development can be greatly sped up by using the code generator that comes with Cinch. It is actually available within the Cinch V1 solution, but works for both Cinch V1 and Cinch V2 ViewModels<br />There is an article describing how to use the code generator over at codeproject which you can read using the following link\n<ul><li><a href=\"http://www.codeproject.com/KB/WPF/CinchCodeGen.aspx\">Cinch code generator article</a> </li></ul>\nAnd here is what it looks like when it is running<br /><br /><img src=\"http://dl.dropbox.com/u/2600965/CinchCodeGen.png\" /><br /><br /><br /><br /><br /><br />\n<h2>Cinch Code Snippets</h2>\rThere are a number of community contributed code snippets, which I have checked and these are available from the Cinch patch list using this url:\n<ul><li><a href=\"http://www.codeplex.com/download?ProjectName=Cinch&amp;DownloadId=93563\">Cinch Visual Studio code snippets</a> </li></ul>\nWhats inside:\n<ol><li>Cinch: EditableValidatingObject overrides </li>\n<li>Cinch: INotifyPropertyChanged for reference type </li>\n<li>Cinch: INotifyPropertyChanged for value type </li>\n<li>Cinch: INotifyPropertyChanged + DataWrapper for reference type </li>\n<li>Cinch: INotifyPropertyChanged + DataWrapper for value type </li>\n<li>Cinch: INotifyPropertyChanged for collections </li>\n<li>Cinch: INotifyPropertyChanged </li>\n<li>Cinch: Command </li>\n<li>Cinch: Background worker </li>\n<li>Cinch: ViewMode </li></ol>\n<br /><br /><br />\n<hr />\nThis WikiPage was created with <a href=\"http://coplwikieditor.codeplex.com\">Codeplex WikiEditor</a></div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,MVVM,WPF frameworks,Framework,mvvm framework,Cinch,",
  "LastEdited": "2011-09-06T00:24:22.997-07:00"
}
{
  "ProjectName": "winrtcomponents",
  "Title": "WinRT Components",
  "Description": "The project is a windows store runtime component which provides some of the handy controls which may be needed in developing LOB apps on windows 8.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong><font face=\"Cambria\">Project Description</font></strong><br>\r\nThe project is a windows store runtime component which provides some of the handy controls which may be needed in developing LOB apps on windows 8.</p>\r\n<p><br>\r\nAs of now I have only added signature control and in coming future in will be adding more components such as winrt nav bar control, and some trivial helper methods to make working on store apps easier.</p>\r\n<p>&nbsp;</p>\r\n<p><strong><font face=\"Cambria\">1. Signature Control</font></strong></p>\r\n<p>add reference to control</p>\r\n<pre> xmlns:ctrls=&quot;using:Mazik.WinRT.Components.Controls&quot;\n</pre>\r\n<p>declare signature controls as below</p>\r\n<pre>&lt;ctrls:MzkSignature Title=&quot;Customer Representative Signature&quot; FileName=&quot;Sign&quot; Grid.Row=&quot;1&quot; Height=&quot;250&quot; AccentColor=&quot;Gray&quot; HorizontalAlignment=&quot;Center&quot;/&gt;\n</pre>\r\n<blockquote>\r\n<p>Title: sets title of the control</p>\r\n<p>FileName: the drawing on canvas is saved as an image, file name give user defined name to the signature image file</p>\r\n</blockquote>\r\n<p>&nbsp;</p>\r\n<p><img src=\"http://farm8.staticflickr.com/7383/12303723304_bcd74fdee9_m.jpg\" alt=\"\" width=\"240\" height=\"166\"></p>\r\n<p>&nbsp;</p>\r\n<p><img src=\"http://farm8.staticflickr.com/7418/12303331495_089df1f9b0_m.jpg\" alt=\"\" width=\"240\" height=\"178\"></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p><strong><img src=\"http://farm8.staticflickr.com/7336/12303517683_3b086e6173_m.jpg\" alt=\"\" width=\"240\" height=\"177\"><br>\r\n</strong></p>\r\n<p>&nbsp;</p>\r\n<p>Now, to read the signature back</p>\r\n<pre>private async Task&lt;Stream&gt; GetLocalResource(string fileName)<br>{<br>try<br>{<br>var file = await ApplicationData.Current.LocalFolder.GetFileAsync(fileName);<br>var stream = await file.OpenAsync(FileAccessMode.ReadWrite);<br>return stream.AsStreamForWrite();<br>}<br>catch (Exception)<br>{<br>return Stream.Null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>}<br>}</pre>\r\n<p>&nbsp;</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2014-02-04T03:49:53.167-08:00"
}
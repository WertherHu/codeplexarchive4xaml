{
  "ProjectName": "wpfdynamicui",
  "Title": "WPF Dynamic User Interface - The Business Application Library",
  "Description": "WPFDynamicUI makes it easier to create Line Of Business Application.\r\nAutomatic User interface for your models.\r\nThe API Developed in C# WPF stack",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong></p>\r\n<p>The WPF Dynamic User Interface makes it easier for any WPF developer to create a Line Of Business Application.</p>\r\n<p>You'll no longer have to develop User Interface when started using this project.</p>\r\n<p>It is generating the fully working end user interface for your model.</p>\r\n<p>The Wpf Dynamic User Interface is developed in .NET C# 4.0 and WPF.</p>\r\n<p>&#160;</p>\r\n<p><strong>Where can it be used?</strong></p>\r\n<p>The library can be used in business field applications where the business requirement must be implemented fast and efficiently.</p>\r\n<p>The proven user interface generation can build thousands of views on the fly.</p>\r\n<p>The total time of development process can be reduced as no need to maintain the user interface and the bindings.</p>\r\n<p>&#160;</p>\r\n<p><strong>Possible usage areas</strong></p>\r\n<ul>\r\n<li>Prototyping WPF applications </li><li>In-house business applications </li><li>Line of business applications </li><li>Educational projects </li></ul>\r\n<p>&#160;</p>\r\n<p><strong>Why using WpfDynamicUI?</strong></p>\r\n<p><span id=\"internal-source-marker_0.9247400025045117\" style=\"background-color:#ffffff; font-variant:normal; font-style:normal; font-family:arial; color:#000000; font-size:13px; vertical-align:baseline; text-decoration:none\">WpfDynamicUI was designed to\r\n reduce the total project development cycle time. [<a href=\"http://wpfdynamicui.codeplex.com/wikipage?title=Why WpfDynamicUI\">more</a>]</span></p>\r\n<p><span style=\"background-color:#ffffff; font-variant:normal; font-style:normal; font-family:arial; color:#000000; font-size:13px; vertical-align:baseline; text-decoration:none\"><br>\r\n</span></p>\r\n<p><strong>How it is working</strong></p>\r\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\"><strong>1. Create your model</strong></td>\r\n<td valign=\"top\">\r\n<div id=\"codeSnippetWrapper\">\r\n<div id=\"codeSnippet\" style=\"border-bottom-style:none; text-align:left; padding-bottom:0px; line-height:12pt; background-color:#f4f4f4; border-left-style:none; padding-left:0px; width:100%; padding-right:0px; font-family:'Courier New',courier,monospace; direction:ltr; border-top-style:none; color:black; border-right-style:none; font-size:8pt; overflow:visible; padding-top:0px\">\r\n<div style=\"background-color:white; color:black\">\r\n<pre>    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> StartupModel : Model\n    {\n        <span style=\"color:blue\">public</span> StartupModel()\n        {\n            Message = <span style=\"color:#a31515\">&quot;Welcome to WPF Dynamic User Interface - The Business Application Library!&quot;</span>;\n        }\n\n        [Editable(<span style=\"color:blue\">false</span>)]\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> Message { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">private</span> <span style=\"color:blue\">set</span>; }\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> StartApplication()\n        {\n            BusinessApplication.Instance.CloseActiveModelAndNavigateTo(() =&gt; <span style=\"color:blue\">new</span> LogonModel());\n        }\n\n    }</pre>\r\n</div>\r\n</div>\r\n</div>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"200\"><strong>2. Run the application</strong></td>\r\n<td valign=\"top\" width=\"200\"><a href=\"http://download.codeplex.com/Download?ProjectName=wpfdynamicui&DownloadId=349852\"><img title=\"image_thumb7\" border=\"0\" alt=\"image_thumb7\" src=\"http://download.codeplex.com/Download?ProjectName=wpfdynamicui&DownloadId=349853\" width=\"200\" height=\"148\" style=\"border-right-width:0px; padding-left:0px; padding-right:0px; display:inline; border-top-width:0px; border-bottom-width:0px; border-left-width:0px; padding-top:0px\"></a></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>&#160;</p>\r\n<p><strong>Key features:</strong></p>\r\n<ul>\r\n<li>POCO model is supported </li><li>Convention based model discovery. </li><li>System.ComponentModel.DataAnnotation based fine tuning. </li><li>General property types (string, datetime, int, etc) are supported. </li></ul>\r\n<div id=\"codeSnippetWrapper\">\r\n<div id=\"codeSnippet\" style=\"border-bottom-style:none; text-align:left; padding-bottom:0px; line-height:12pt; background-color:#f4f4f4; border-left-style:none; padding-left:0px; width:100%; padding-right:0px; font-family:'Courier New',courier,monospace; direction:ltr; border-top-style:none; color:black; border-right-style:none; font-size:8pt; overflow:visible; padding-top:0px\">\r\n<div style=\"background-color:white; color:black\">\r\n<pre>    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> CustomerModel : INotifyPropertyChanged\n    {\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">event</span> PropertyChangedEventHandler PropertyChanged;\n\n        <span style=\"color:green\">//properties</span>\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> Name { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> Age { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\n        <span style=\"color:blue\">public</span> DateTime BirthDate { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\n\n        <span style=\"color:green\">//save action</span>\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> Save()\n        {\n            <span style=\"color:green\">//save in the db</span>\n        }\n\n        <span style=\"color:green\">//save condition</span>\n        [Display(AutoGenerateField = <span style=\"color:blue\">false</span>)]\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> CanSave { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\n\n\n    }</pre>\r\n</div>\r\n</div>\r\n</div>\r\n<p><strong>&#160;</strong></p>\r\n<p><strong>Extra features:</strong></p>\r\n<p>Deriving your class from Model opens the Workflow support</p>\r\n<ul>\r\n<li>Discover modules from other assemblies using <a title=\"MEF\" href=\"http://msdn.microsoft.com/en-us/library/dd460648.aspx\">\r\nMEF</a> </li><li>Built in workflow support. </li><li>Nesting models are supported. </li><li>Handles unlimited numbers of opened model in a chain. </li><li>Defining a module entry point is trivial. </li></ul>\r\n<p>&#160;</p>\r\n<div id=\"codeSnippetWrapper\">\r\n<div id=\"codeSnippet\" style=\"border-bottom-style:none; text-align:left; padding-bottom:0px; line-height:12pt; background-color:#f4f4f4; border-left-style:none; padding-left:0px; width:100%; padding-right:0px; font-family:'Courier New',courier,monospace; direction:ltr; border-top-style:none; color:black; border-right-style:none; font-size:8pt; overflow:visible; padding-top:0px\">\r\n<pre style=\"border-bottom-style:none; text-align:left; padding-bottom:0px; line-height:12pt; background-color:white; margin:0em; border-left-style:none; padding-left:0px; width:100%; padding-right:0px; font-family:'Courier New',courier,monospace; direction:ltr; border-top-style:none; color:black; border-right-style:none; font-size:8pt; overflow:visible; padding-top:0px\"><span id=\"lnum1\" style=\"color:#606060\">  </span><div style=\"background-color:white; color:black\"><pre>    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> VisitModel : NavigationModel\n    {\n        <span style=\"color:green\">//properties,etc excluded</span>\n    }\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> OrderModel : NavigationModel\n    {\n        <span style=\"color:green\">//properties, etc excluded</span>\n\n        [Display(AutoGenerateField = <span style=\"color:blue\">false</span>)]\n        <span style=\"color:blue\">public</span> VisitModel VisitModel { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> SaveOrder()\n        {\n            <span style=\"color:green\">//save order</span>\n        }\n<div style=\"background-color:white; color:black\"><pre><span style=\"color:green\">       //entry point for the module</span>\n       <span style=\"color:blue\">public</span> <span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> CreateOrder(VisitModel parentVisitModel)\n       {\n           BusinessApplication.Instance.CloseActiveModelAndNavigateTo(() =&gt; <span style=\"color:blue\">new</span> OrderModel { VisitModel = parentVisitModel });\n       }\n   }\n</pre>\n</div>\n</pre>\n</div></pre>\r\n</div>\r\n</div>\r\n<p>&#160;</p>\r\n<p><strong>Start using it</strong></p>\r\n<p>For more details and examples please see the project <a href=\"http://wpfdynamicui.codeplex.com/documentation\">\r\ndocumentation</a>.</p>\r\n<p>For basic and extended usage consult the quick-start guides:</p>\r\n<ul>\r\n<li><a href=\"wikipage?title=QuickStart\">Hello World</a> quick-start guide </li><li><a href=\"http://wpfdynamicui.codeplex.com/wikipage?title=Workflow%20quickstart\">Hello Workflow</a> quick-start guide\r\n</li><li><a href=\"http://wpfdynamicui.codeplex.com/wikipage?title=Hello%20Entity%20quickstart\">Hello Entity</a> quick-start guide\r\n</li></ul>\r\n<p>&#160;</p>\r\n<p>The Wpf Dynamic UI is also available on <a href=\"https://nuget.org/packages/WpfDynamicUI\">\r\nnuget</a>.</p>\r\n<p>&#160;</p>\r\n<p><strong>Roadmap</strong></p>\r\n<p><span style=\"color:#888888\"><em>(future plans - V1.5)</em></span></p>\r\n<ul>\r\n<li><span style=\"color:#888888\">To be decided…</span> </li></ul>\r\n<p>V1.2.0.105 - Current release (20120415)</p>\r\n<p><strong>Included functionalities</strong></p>\r\n<ul>\r\n<li>Dynamic Code Builder. (Adding dynamic modules at runtime) </li></ul>\r\n<p>&#160;</p>\r\n<p>V1.2.0.103 - (20120413)</p>\r\n<p><strong>Included Fixes</strong></p>\r\n<ul>\r\n<li>Ability to add Runtime assemblies to <a title=\"MEF\" href=\"http://msdn.microsoft.com/en-us/library/dd460648.aspx\">\r\nMEF</a> container </li><li>Fixed PagingExtensions page calculation when IQueryable is empty </li></ul>\r\n<p>&#160;</p>\r\n<p>V1.0.1.91 - (20120401)</p>\r\n<p><strong>Included providers</strong></p>\r\n<ul>\r\n<li>WebBrowser control provider </li></ul>\r\n<p>&#160;</p>\r\n<p>V1.0.1.82 - (20120324)</p>\r\n<p><strong>First stable release</strong></p>\r\n<ul>\r\n<li>Included WpfDynamicUI - Modeling </li><li>Included WpfDynamicUI - Dynamic User Interface Control </li></ul>\r\n<p><strong>Included functionalities</strong></p>\r\n<ul>\r\n<li>Basic Discovery operations </li><li>Nested Model discovery operations </li><li>Work flow extensibility operations and definitions </li><li>Filtering </li><li>Trivial Menu building </li><li>Trivial Application menu building </li></ul>\r\n<p><strong>Included providers</strong></p>\r\n<ul>\r\n<li>Standard .NET properties providers </li><li>DataGrid, ComboBox IEnumerable control providers </li><li>PagedIQueryable - paging control provider </li><li>Map provider </li><li>Chart provider </li></ul>\r\n<p><strong>Included samples</strong></p>\r\n<ul>\r\n<li>WpfDynamicUI - HelloWorld </li><li>WpfDynamicUI - HelloWorkflow </li></ul>\r\n<p>&#160;</p>\r\n<p><strong>Stable - stability:</strong></p>\r\n<p>WpfDynamicUI is involving. But you could be always be sure new involves ahead will not breaking your old code.</p>\r\n<p>In terms of google we could say the application library is in Beta stage, but these application library parts if marked as released - stable - will be there for time.</p>\r\n<p>There are still rooms for improvement:</p>\r\n<ul>\r\n<li>Sophisticated menu instead of trivial menu. </li><li>Code Generation. </li><li>And perhaps something even not identified at this time </li></ul>\r\n<p>They all will be an &quot;extension&quot; on the top the actual stack.</p>\r\n<p>&#160;</p>\r\n<p>&#160;</p>\r\n<p>If you find this project useful feel free to provide a feedback.</p>\r\n<p>&#160;</p>\r\n<p>Regards</p>\r\n<p>Zoltán Csizmazia</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,Dynamic,UI,.NET 4.0,dynamic UI,",
  "LastEdited": "2012-05-02T01:45:55.41-07:00"
}
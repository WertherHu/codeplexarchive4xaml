{
  "ProjectName": "scutex",
  "Title": "Scutex",
  "Description": "Scutex, pronounced (sec-u-techs), is a 100% managed .Net Framework licensing platform for your applications. Scutex is a flexible licensing system allowing multiple licensing schemes allowing you the most control over how you licensing your products. Unlike any other licensing system on the market, Scutex provides 4 distinct licensing schemes, allowing you to protect your products at different levels using completely different licensing schemes, key types and protection systems.\r\n\r\nUsing Scutex you can create trial versions of your software products and allow your users to buy and use license keys or keyfiles to unlock your product. You can also have edition based licensing to unlock only select features based on the level of the license. Scutex supports upgrade licenses as well as allowing your customers who have an existing version of your product to upgrade to a new version.\r\n\r\nScutex uses WCF web services to validate and manage keys, but also supports an offline mode for less secure scenarios. Scutex is written in C# and WPF and currently supports licensing of desktop applications, controls, components and licensing via COM.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Scutex</h1>\rScutex, pronounced &#40;sec-u-techs&#41;, is a 100&#37; managed .Net Framework licensing platform for your applications. Scutex is a flexible licensing system allowing multiple licensing schemes allowing you the most control over how you licensing your products. Unlike any other licensing system on the market, Scutex provides 4 distinct licensing schemes, allowing you to protect your products at different levels using completely different licensing schemes, key types and protection systems.<br /><br />Using Scutex you can create trial versions of your software products and allow your users to buy and use license keys or keyfiles to unlock your product. You can also have edition based licensing to unlock only select features based on the level of the license. Scutex supports upgrade licenses as well as allowing your customers who have an existing version of your product to upgrade to a new version.<br /><br />Scutex uses WCF web services to validate and manage keys, but also supports an offline mode for less secure scenarios. Scutex is written in C&#35; and WPF and currently supports licensing of desktop applications, controls, components and licensing via COM.<br /><br />Source code for Scutex is managed at GitHub <a href=\"https://github.com/wavetech/Scutex\">https://github.com/wavetech/Scutex</a>. Official builds will be posted here for download and will also be available on our website.<br />\n<h1>License</h1>\rLicensed under the Microsoft Public License (MS-PL)<br />\n<h1>Resources</h1>\r<ul><li>WaveTech&#39;s Home page: <a href=\"http://www.wtdt.com\">http://www.wtdt.com</a></li>\n<li>Scutex&#39;s Home Page: <a href=\"http://www.wtdt.com/Products/Scutex.aspx\">http://www.wtdt.com/Products/Scutex.aspx</a></li>\n<li>Discussion list: <a href=\"http://groups.google.com/group/scutex-dev\">http://groups.google.com/group/scutex-dev</a></li>\n<li>GitHub Source Code: <a href=\"https://github.com/wavetech/Scutex\">https://github.com/wavetech/Scutex</a></li></ul>\n\n<h1>Official Builds &amp; Releases</h1>\rThere are a number of additional processes that occur for preparing Scutex to be used in your applications. You can obtain offical builds on our CodePlex site (<a href=\"http://scutex.codeplex.com\">http://scutex.codeplex.com</a>) and the Scutex homepage at <a href=\"http://www.wtdt.com/Products/Scutex.aspx\">http://www.wtdt.com/Products/Scutex.aspx</a> and click on the Downloads link. If you want to secure Scutex using your own protection systems or products feel free to just use the codebase, official builds are provided for convince.<br />\n<h1>Prerequisites</h1>\rYou will need the .Net Framework 4 and SQL Server or SQL Express to use Scutex. To develop Scutex you will need the following installed.<br />\n<ul><li>Visual Studio 2010 (WPF/MSTest)</li>\n<li>SQL Server 2005/2008/2008 R2 or SQL Express 2005/2008 R2</li>\n<li>Microsoft MOLES &amp; Pex Power Tools</li>\n<li>Infragistics WPF v10.3 (Temporary)</li>\n<li>IIS, IIS Express or Casini for testing Services</li></ul>\n\n<h1>Unit Testing</h1>\rI moved the unit tests from NUnit to MSTest to get integrated MOLES support, and to play around with Pex a little. Unfortunately the way MSTest plays and moves things around it makes getting the paths for required files a major issue. The ReSharper Unit Test Runner does not have that issue, and still runes the MOLES tests. If you run the unit tests from within Visual Studio using MSTest all the test dependent on location will fail. Additionally the performance of the unit tests went downhill due to how MSTest wires things up. Eventually I&#39;ll get back in there are refactor the Setup and Teardowns so that they work with MSTest.<br />\n<h1>Supported License Key Types</h1>\rThere are two license key types supported:<br />\n<ul><li>Small Static License Key (SSK) XXX-XXXXXX-XXXX</li>\n<li>Large Static License Key (LSK) XXXXX-XXXXX-XXXXX-XXXXX-XXXXX</li></ul>\nThe small static key only supports basic license key functionality, while the large static key supports many licensing scenarios.</div><div class=\"ClearBoth\"></div>",
  "TagList": "Licensing,License key,Security,Usage,csharp,wpf,wcf,encryption,decryption,services,com,component,Controls,User Controls,Licence service,licencias,",
  "LastEdited": "2012-02-01T12:18:27.157-08:00"
}
{
  "ProjectName": "bdcmodelbuilder",
  "Title": "SharePoint 2010 BDC Model Builder",
  "Description": "This is a code generation tool for building Visual Studio 2010 Bdc Models for web services. It allows the use of complex service methods which aren't supported by SharePoint Designer.\r\n\r\nThe application is written in WPF 4 using an MVVM pattern.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><a href=\"http://geoffwebbercross.blogspot.com/\">http://geoffwebbercross.blogspot.com/</a><br>\r\n<br>\r\n<strong>Project Description</strong><br>\r\nThis is a code generation tool for building Visual Studio 2010 Bdc Models for web services. It allows the use of complex service methods which aren't supported by SharePoint Designer.<br>\r\n<br>\r\nThe application is written in WPF 4 using an MVVM pattern.</p>\r\n<p>BDC Model Builder was originally written because the SharePoint designer BDC functionality could not handle complex web services with deep return and parameter objects such as requests and responses with container objects and I wanted a way of easily integrating\r\n web services in a consistent manner without having to manually produce VS BDC models.<br>\r\n<br>\r\nIf a service contains methods like this:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>[OperationContract]\nBusinessDataEntity GetMountainBikesComplex();\n</pre>\r\n</div>\r\n<p>Which return complex types like this:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">namespace</span> WebberCross.BdcModelBuilder.WcfBikeService\n{\n    [DataContract]\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> BusinessDataEntity\n    {\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">int</span> _id = 0;\n        <span style=\"color:blue\">private</span> MountainBike _bike = <span style=\"color:blue\">null</span>;\n        <span style=\"color:blue\">private</span> List&lt;MountainBike&gt; _bikes = <span style=\"color:blue\">null</span>;\n\n        [DataMember]\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> ID\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>._id; }\n            <span style=\"color:blue\">set</span> { <span style=\"color:blue\">this</span>._id = value; }\n        }\n\n        [DataMember]\n        <span style=\"color:blue\">public</span> MountainBike Bike\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>._bike; }\n            <span style=\"color:blue\">set</span> { <span style=\"color:blue\">this</span>._bike = value; }\n        }\n\n        [DataMember]\n        <span style=\"color:blue\">public</span> List&lt;MountainBike&gt; Bikes\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> <span style=\"color:blue\">this</span>._bikes; }\n            <span style=\"color:blue\">set</span> { <span style=\"color:blue\">this</span>._bikes = value; }\n        }\n    }\n}\n</pre>\r\n</div>\r\n<p><br>\r\nSharePoint Designer can't use them because it doesn't support nested objects or worse still if the business object contains multiple nested levels or multiple collections and entities, the user can't pick which they want to use; the BDC Model Builder allows\r\n this functionaily.</p>\r\n<p>The complex method will appear like this in SP Designer:</p>\r\n<p><img src=\"http://download.codeplex.com/download?ProjectName=bdcmodelbuilder&DownloadId=233051\" alt=\"\"></p>\r\n<p>The BDC Model Builder has a nice UI which reflects the target DLL and allows the user to pick an entity then the CRUD methods required for the model. C# and BDCM XML is generated for the entity, BDCM and service classes which are written to a package.</p>\r\n<h3>Features:</h3>\r\n<ul>\r\n<li>UI with TreeView pickers for selecting required Model options. </li><li>BDC Model Builder configurations saved/loaded from BDCMB format file </li><li>WCF service support </li><li>ASMX service support </li><li>Complex business object support </li><li>Nullable types automatically parsed to and from non-nullable types </li><li>Byte array fields automatically parsed to and from strings (useful for time stamped entities)\r\n</li><li>Generates fully formed Visual Studio 2010 BDC Models </li><li>Error handling feature (for user implementation) </li></ul>\r\n<p>To get started with this project before the documentation is finished, download the source and install the latest msi installer. The best thing to do is to open the template or main .bdcmb file from the source with BdcModelBuilder.exe and see how a working\r\n model is implemented. The template should form the basis of a new implementation.<br>\r\n<br>\r\n<img title=\"Screen1.png\" src=\"http://i3.codeplex.com/download?ProjectName=bdcmodelbuilder&DownloadId=223782\" alt=\"Screen1.png\"><br>\r\n<br>\r\nA shim assembly containing service references is reflected and exposed through the 'Assembly Tree' viewer. This allows all the necessary parts of the shim to be selected for a model.<br>\r\n<br>\r\n<img title=\"tv1.png\" src=\"http://i3.codeplex.com/download?ProjectName=bdcmodelbuilder&DownloadId=223795\" alt=\"tv1.png\"><br>\r\n<br>\r\nInstalled Model:<br>\r\n<br>\r\n<img title=\"SP1.png\" src=\"http://i3.codeplex.com/download?ProjectName=bdcmodelbuilder&DownloadId=223790\" alt=\"SP1.png\"></p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "toolset,beta,sharepoint,",
  "LastEdited": "2011-06-09T14:47:03.9-07:00"
}
{
  "ProjectName": "rssreaderforscreens",
  "Title": "Multi Targetted Rss Reader",
  "Description": "A Multi Targetted Rss Reader demo that shows how to multi target your view model across different screens (WP7, Silverlight, WPF, Surface).",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong></p>\r\n<p>A Multi Targetted Rss Reader demo that shows how to multi target your view model across different screens (WP7, Silverlight, WPF, Surface).<br>\r\n<br>\r\n</p>\r\n<ul>\r\n<li><a href=\"http://amazedsaint.blogspot.com/2010/12/rss-reader-for-all-screens-sharing-your.html\">Read my blog post on this</a>\r\n</li><li><a href=\"http://bit.ly/ep5GBZ\">See this video where I demonstrated this technique during Microsoft VTD</a>\r\n</li></ul>\r\n<p>&nbsp;</p>\r\n<p>As&nbsp;you may see in the above demo, almost 80% of the code is shared via <a href=\"http://msdn.microsoft.com/en-us/library/ff921176(v=pandp.40).aspx\">\r\nmulti targeting</a>. The&nbsp;following classes&nbsp;we share include</p>\r\n<ul>\r\n<li><strong>RssReaderViewModel&nbsp;</strong>&ndash; Which is our actual view model.\r\n</li><li><strong>RssEntry</strong>&nbsp;&ndash; The model element that actually holds a element.\r\n</li><li><strong>RssReader</strong>&nbsp;&ndash; Contains methods for fetching the RSS feed from a remote server.\r\n</li><li><strong>AsyncDelegateCommand</strong>&nbsp;&ndash; My own asynchronous version of delegate command.\r\n</li></ul>\r\n<p>In all the projects, you may see a &lsquo;Shared&rsquo; folder, that has the links to the shared files in the RssReader.Common project.&nbsp; The views are different per device, but the view model, the feed fetching logic etc remain the same.&nbsp;It is\r\n a quick demo I&rsquo;ve put together, so you should add stuff like proxy support for the web client if you are going to test this behind a proxy.</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "MVVM,reference-app,",
  "LastEdited": "2010-12-28T23:31:37.313-08:00"
}
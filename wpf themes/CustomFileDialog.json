{
  "ProjectName": "CustomFileDialog",
  "Title": "CustomFileDialog Open/Save for Windows Forms and WPF",
  "Description": "Provides an easy way to customize the OpenFileDialog or SaveFileDialog for Windows Forms or WPF by providing source code and examples.",
  "MovedLink": "https://github.com/dmihailescu/CustomFileDialog",
  "HomeWiki": "<div class=\"wikidoc\"><h1><b>Project Description</b></h1>\rExtends OpenFileDialog and SaveFileDialog Using Windows Forms or WPF<br />\n<h1><i>Important: This project with its latest updates has been moved to <a href=\"https://github.com/dmihailescu/CustomFileDialog/wiki\">GitHub</a></i></h1>\r\n<b>**This project contains the source code for the articles published on codeproject **</b><br /><br />If you used WinForms or WPF, chances are that at some point you wanted to extend the OpenFileDialog or SaveFileDialog, but you gave up because there is no easy way to do it, especially if you wanted to add some new graphical elements. The source code provided  makes customization of these dialogs very easy, and shows how to call it for a quick ramp up.<br />Iâ€™ve included the equivalent VB.NET code in the downloadable zip file for the VB folks.<br />\n<h1><b>How to use it</b></h1>\r\n<h2>For Windows Forms</h2>\r\n<img src=\"http://www.codeproject.com/KB/dialog/CustomizeFileDialog/saveas.jpg\" /><br /><br />To start using it, you can drop the code in your project or just add a reference to the FileDlgExtenders.dll assembly or to FileDlgExtenders project. If you choose the latter, build the solution before you move forward, because you need the base class at design time. To make things as easy as possible, select &#39;Add User Control&#39; to your project, than pick &#39;Inherited User Control&#39; and finally select FileDialogControlBase from the list. <br />\n<h2>For WPF</h2>\r\n<img src=\"http://www.codeproject.com/KB/dialog/WPFCustomFileDialog/SelectFile.PNG\" /><br /><br /> <a href=\"http://www.codeproject.com/Articles/42008/Extend-OpenFileDialog-and-SaveFileDialog-Using-WPF#heading0005\">Implement  IWindowExt</a> or  <a href=\"http://www.codeproject.com/Articles/42008/Extend-OpenFileDialog-and-SaveFileDialog-Using-WPF#heading0007\">Inherit from the WindowAddOnBase or the ControlAddOnBase Class</a><br />\n<h1><b>More about it</b></h1>\r\nA lot of additional information can be found on codeproject for  <a href=\"http://www.codeproject.com/Articles/42008/Extend-OpenFileDialog-and-SaveFileDialog-Using-WPF\">WPF</a> and <a href=\"http://www.codeproject.com/Articles/19566/Extend-OpenFileDialog-and-SaveFileDialog-the-easy\">Windows Forms</a> .</div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,OpenFileDialog,SaveFileDialog,Windows Forms,extend,customize,",
  "LastEdited": "2017-12-13T08:15:45.293-08:00"
}
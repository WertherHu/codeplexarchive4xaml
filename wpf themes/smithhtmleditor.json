{
  "ProjectName": "smithhtmleditor",
  "Title": "Smith Html Editor",
  "Description": "This simple and lightweight WYSIWYG HTML Editor is a user control for WPF application. It provides basic editing functions and outputs HTML code.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong><br>\r\nThis simple and lightweight WYSIWYG HTML Editor is a user control for WPF application. It provides basic editing functions and outputs standard HTML.<br>\r\n<br>\r\n<strong>Features</strong><br>\r\nWritten in C#<br>\r\nDesign for WPF application&nbsp;and use&nbsp;as UserControl<br>\r\nFull open source<br>\r\nHTML code output<br>\r\nSupport hyperlink, image and table inserting<br>\r\nSupport html source edting and world counting</p>\r\n<p><strong>Update History<br>\r\n</strong><br>\r\n2011/05/02 - v0.85 <span style=\"color:#ff0000\"><strong>New</strong></span> <a href=\"http://smithhtmleditor.codeplex.com/releases/view/65512#DownloadId=234531\">\r\nDownload</a><br>\r\n1. Add a dependency property named BindingContent to support binding html content to the editor. This property raise update notification via the StatusTextChanged event of the webbrowser control. A new window named BindingTestWindow in SmithHtmlEditor.Demo\r\n show how this property works.<br>\r\n2. A stylesheet is load from the file &quot;smithhtmleditor.stylesheet.css&quot; to set the default style of the editing document when the control is initializing. This can help us to set how the document looks.<br>\r\n3. Use the xml file &quot;smithhtmleditor.config.xml&quot; to setup the fonts used in the control. So we can configurate the fonts we need.<br>\r\n4. Update the appearance of the editor under source mode.<br>\r\n<br>\r\n2011/01/23 - v0.8&nbsp;<a href=\"http://smithhtmleditor.codeplex.com/releases/view/59676#DownloadId=202106\" target=\"_blank\">Download</a><br>\r\n1. Add HtmlDocument class and HtmlDocument.Range class for document editing instead of directly operating IHTMLDocument2 interface and System.Windows.Forms.HtmlDocument object.<br>\r\n2. Update HtmlEditingExtension class to extension methods for HtmlDocument object. And some methods were moved into HtmlDocument class.<br>\r\n3. Fix a bug in HtmlEditor.WordCount property.<br>\r\n4. Update the HtmlEditor.ContentText property as a get-only property.<br>\r\n5. The HtmlEditor.Document property is changed from type System.Windows.Forms.HtmlDocument to Smith.WPF.HtmlEditor.HtmlDocument.<br>\r\n6. Add editing methods for HtmlEditor class.<br>\r\n7. Add DocumentReady event for HtmlEditor class. This event will be raised after the document is ready to use. And it provides a way to load initial content to editor. See the demo.<br>\r\n8. Add DocumentStateChanged event for HtmlEditor class to notify the change of document state.<br>\r\n<br>\r\n2010/11/20 - V0.75 <a href=\"http://smithhtmleditor.codeplex.com/releases/view/56058#DownloadId=169760\">\r\nDownload</a><br>\r\nUpgraded the word counting algorithm and fixed a bug in color selecting.<br>\r\n<br>\r\n2010/10/19 - V0.7<br>\r\nGloblization and localization feature is added into this version.<br>\r\n<br>\r\n2010/10/17&nbsp;- V0.6<br>\r\nIt is a preview version for test and provides basic functions for common use.</p>\r\n<p><strong>About the Solution<br>\r\n</strong>You may need Visual Studio 2008 to open the solution.<strong><br>\r\n</strong>The <strong>Smith.WPF.HtmlEditor</strong> is the Html Editor user control and related supporting components.<br>\r\nThe&nbsp;<strong>Smith.WPF.HtmlEditor.Demo</strong> is a mini wpf application to show how to use this control.</p>\r\n<p><strong>Any help and suggestion for improving&nbsp;this control&nbsp;is welcome!<br>\r\n</strong>you can contact me with this email: <a href=\"mailto:john.smith.17th@gmail.com\">\r\njohn.smith.17th@gmail.com</a></p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,WPF controls,HTML Editor,WYSIWYG Editor,Controls,",
  "LastEdited": "2011-05-01T19:57:39.377-07:00"
}
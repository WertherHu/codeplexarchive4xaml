{
  "ProjectName": "pagedcollection",
  "Title": "Dynamic PagedCollection (Silverlight Pagination)",
  "Description": "PagedCollection helps a developer to easily control the pagination of their collection.\r\nThis collection doesnt need all datas in memory, it can be attached to RIA/SQL/XML data ... and load needed data one after the other.\r\n\r\nThe PagedCollection can be used with Silverlight.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Project Description</h1>\r\n<br />PagedCollection helps a developer to easily control the pagination of their collection.<br />This collection doesnt need all datas in memory, it can be attached to RIA&#47;SQL&#47;XML data ... and load needed data one after the other.<br /><br />The PagedCollection can be used with Silverlight.<br />\n<h2>This project just implement 4 classes :</h2>\r\n<ul><li><b>ExtendedCollection.cs :</b> \n<ul><li><i>Collection that implements ICollectionView, inheriting from ObservableCollection.</i></li>\n<li><i>Enables collections to have the functionnalities of current record management, custom sorting, filtering and grouping.</i></li></ul></li>\n<li><b>PagedCollection.cs :</b> \n<ul><li><i>Collection that implements IPagedCollectionView, inheriting from ExtendedCollection.</i></li>\n<li><i>Implement methods and properties that a collection need to provide pagination functionnalities.</i></li></ul></li>\n<li><b>PagedCollectionFilter.cs :</b> \n<ul><li><i>Used to add filters in PagedCollection ( with FilterType enumeration ).</i></li>\n<li><i>Added to the collection, only to store the filter used in the query.</i></li></ul></li>\n<li><b>CollectionExtensions.cs :</b> \n<ul><li><i>Just some extensions ( it&#39;s free xD ).</i></li></ul></li></ul>\n<b><i>All the pages are loaded dynamicly, on each pagination ! There is not 5000 entities loaded in memory, but just 20 per 20, 50 per 50, 178 per 178 .... as you want , in a RIA Service, LINQtoSQL, XMLDocument etc...</i></b><br /><br />\n<h2>Included in downloads parts you can find a MVVM Test application using the PagedCollection :</h2>\r<ul><li>Attached to an RIA Service</li>\n<li>Search needed data in RIA after each filters, sorts, choise of page</li>\n<li>The PagedCollection is created in ViewModel</li>\n<li>The PagedCollection is binded to the <b>page size choice</b>, to a <b>DataGrid</b> and to a <b>pager control</b></li></ul>\n<img src=\"/projects/pagedcollection/452fdfba-56f7-4b19-8520-2242619cfd73\" alt=\"easy2.png\" title=\"easy2.png\" /><br /><br /><b>Initialization (HomeViewModel)</b>\n<ol><li>DomainContext creation</li>\n<li>PagedCollection creation</li>\n<li>PageSize setting</li>\n<li>SortDescription creation ( mandatory in RIA to do Skip/Take )</li>\n<li>Event attachement, notified when the PagedCollection needs new datas</li>\n<li>RIA LoadBehavior</li></ol>\n<img src=\"/projects/pagedcollection/6ae3e203-7f26-4471-b7df-ff9beb429a89\" alt=\"Initialize.png\" title=\"Initialize.png\" /><br /><br /><b>RequireUpdate Event (RIA exemple)</b>\n<ol><li>Query creation</li>\n<li>Filter settings</li>\n<li>Sort settings</li>\n<li>Skip/Take settings</li>\n<li>Query loading</li></ol>\n<img src=\"/projects/pagedcollection/967f6dbd-5557-4c8d-b7b0-cd6572cbcff3\" alt=\"query.png\" title=\"query.png\" /></div><div class=\"ClearBoth\"></div>",
  "TagList": "Silverlight,Paging,pagination,WPF,Class,Extension,C#,MVVM,",
  "LastEdited": "2011-11-12T08:05:20.13-08:00"
}
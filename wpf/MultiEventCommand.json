{
  "ProjectName": "MultiEventCommand",
  "Title": "Multi Event Command Binder",
  "Description": "Most of the command patterns for WPF in internet you will find would be limited to one event one command to one control.\r\n\r\nBy using this project not even can you bind multiple commands to multiple events , you can even get event arguments as well as command parameter.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description:</strong></p>\r\n<p><a title=\"Buy me a cup of cofee\" href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=bhushanpoojary%40gmail%2ecom&lc=US&item_name=Column%20To%20Chooser&no_note=0&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHostedGuest\" target=\"_blank\"><img src=\"http://download-codeplex.sec.s-msft.com/Download?ProjectName=wpfextendeddatagrid&DownloadId=528935\" alt=\"\" width=\"300\" height=\"90\" style=\"float:right\"></a></p>\r\n<p>This project extends and improves existing command binder.It has feature of binding multiple events of a single control to multiple commands.</p>\r\n<p><strong>Benefits:</strong></p>\r\n<ol>\r\n<li>Ability&nbsp;to bind multiple event to multiple commands. </li><li>In CommandArgs in command handler you can even get original event args this was not possible with existing command binders.\r\n</li><li>In CommandArgs in command handler you can even get original source of the event this was not possible with existing command binders.\r\n</li><li>In this you can control individual CanExecute methods. </li></ol>\r\n<p>&nbsp;</p>\r\n<p><strong>Project Contents:</strong></p>\r\n<p>To use this multi event command feature you should update the files like shown below.</p>\r\n<p><strong>&nbsp; &nbsp;XAML:</strong></p>\r\n<p><strong>&nbsp;</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre style=\"color:black\"><strong><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Canvas</span>  <span style=\"color:red\">mecb:CommandBehavior.Event</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">MouseDown,MouseEnter,MouseMove,MouseUp,MouseLeave</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Background</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">LightBlue</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">VerticalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">HorizontalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Stretch</span><span style=\"color:black\">&quot;</span>\n\n                     <span style=\"color:red\">mecb:CommandBehavior.Command</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding DockPanelCommandCollection}</span><span style=\"color:black\">&quot;</span> \n\n                    <span style=\"color:red\">mecb:CommandBehavior.CommandParameter</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">{Binding ElementName=txtCommandParameter,Path=Text}</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">&gt;</span>\n\n                 <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">TextBlock</span> <span style=\"color:red\">VerticalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Center</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">HorizontalAlignment</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Center</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">TextWrapping</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Wrap</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>Test Mouse Event In This Block<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">TextBlock</span><span style=\"color:blue\">&gt;</span>\n\n <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Canvas</span><span style=\"color:blue\">&gt;      \t\t\t\t\t\t</span></strong></pre>\r\n<pre style=\"color:black\"><strong>&nbsp;C#</strong></pre>\r\n<pre style=\"color:black\"><strong>&nbsp;</strong><div style=\"color:black; background-color:white\"><pre><span style=\"color:blue\">#region</span> Constructor        public ClientUserControlViewModel()\n        {\n            DockPanelCommandCollection=<span style=\"color:blue\">new</span> ObservableCollection&lt;RelayCommand&gt;\n                                           {\n                                               MouseDownCommand,\n                                               MouseUpCommand,\n                                               MouseEnterCommand,\n                                               MouseMoveCommand,\n                                               MouseLeaveCommand\n                                           };\n            MouseMoveIsChecked = <span style=\"color:blue\">true</span>;\n        }\n\n        <span style=\"color:blue\">#endregion</span>\n\n        <span style=\"color:blue\">#region</span> Members\n\n        <span style=\"color:blue\">private</span> RelayCommand _mouseDownCommand;\n        <span style=\"color:blue\">private</span> RelayCommand _mouseUpCommand;\n        <span style=\"color:blue\">private</span> RelayCommand _mouseMoveCommand;\n        <span style=\"color:blue\">private</span> RelayCommand _mouseEnterCommand;\n        <span style=\"color:blue\">private</span> RelayCommand _mouseLeaveCommand;\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">string</span> _lastEvent;\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">string</span> _leftButtonState;\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">string</span> _rightButtonState;\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">string</span> _commandParamterValue;\n\n        <span style=\"color:blue\">#endregion</span>\n\n        <span style=\"color:blue\">#region</span> Commands\n\n        <span style=\"color:blue\">public</span> RelayCommand MouseDownCommand\n        {\n           <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _mouseDownCommand ?? (_mouseDownCommand = <span style=\"color:blue\">new</span> RelayCommand(MouseDownCommandHandler,CanExecuteMouseDown){EventName = <span style=\"color:#a31515\">&quot;MouseDown&quot;</span>})\n               \n               ; }\n         \n        }\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> CanExecuteMouseDown(<span style=\"color:blue\">object</span> obj)\n        {\n            <span style=\"color:blue\">return</span> !MouseDownIsChecked;\n        }\n\n        <span style=\"color:blue\">public</span> RelayCommand MouseUpCommand\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _mouseUpCommand ?? (_mouseUpCommand = <span style=\"color:blue\">new</span> RelayCommand(MouseUpCommandHandler, CanExecuteMouseUp) { EventName = <span style=\"color:#a31515\">&quot;MouseUp&quot;</span> }); }\n          \n        }\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> CanExecuteMouseUp(<span style=\"color:blue\">object</span> obj)\n        {\n            <span style=\"color:blue\">return</span> !MouseUpIsChecked;\n        }\n\n\n        <span style=\"color:blue\">public</span> RelayCommand MouseEnterCommand\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _mouseEnterCommand ?? (_mouseEnterCommand = <span style=\"color:blue\">new</span> RelayCommand(MouseEnterCommandHandler,CanExecuteMouseEnter) { EventName = <span style=\"color:#a31515\">&quot;MouseEnter&quot;</span> }); }\n            \n        }\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> CanExecuteMouseEnter(<span style=\"color:blue\">object</span> obj)\n        {\n            <span style=\"color:blue\">return</span> !MouseEnterIsChecked;\n        }\n\n        <span style=\"color:blue\">public</span> RelayCommand MouseMoveCommand\n        {\n            <span style=\"color:blue\">get</span>\n            {\n                <span style=\"color:blue\">return</span> _mouseMoveCommand ??\n                       (_mouseMoveCommand = <span style=\"color:blue\">new</span> RelayCommand(MouseMoveCommandHandler,CanExecuteMouseMove) {EventName = <span style=\"color:#a31515\">&quot;MouseMove&quot;</span>});\n            }\n        }\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> CanExecuteMouseMove(<span style=\"color:blue\">object</span> obj)\n        {\n            <span style=\"color:blue\">return</span> !MouseMoveIsChecked;\n        }\n\n        <span style=\"color:blue\">public</span> RelayCommand MouseLeaveCommand\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _mouseLeaveCommand ?? (_mouseLeaveCommand = <span style=\"color:blue\">new</span> RelayCommand(MouseLeaveCommandHandler,CanExecuteMouseLeave) { EventName = <span style=\"color:#a31515\">&quot;MouseLeave&quot;</span> }); }\n           \n        }\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> CanExecuteMouseLeave(<span style=\"color:blue\">object</span> obj)\n        {\n            <span style=\"color:blue\">return</span> !MouseLeaveIsChecked;\n        }\n\n        <span style=\"color:blue\">#endregion</span>\n\n        <span style=\"color:blue\">#region</span> Handlers\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> MouseDownCommandHandler(CommandArgs obj)\n        {\n            LastEvent = <span style=\"color:#a31515\">&quot;MouseDown&quot;</span>;\n            TryCatch.BeginTryCatch(UpdateResults,obj);\n        }\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> MouseUpCommandHandler(CommandArgs obj)\n        {\n            LastEvent = <span style=\"color:#a31515\">&quot;MouseUp&quot;</span>;\n            TryCatch.BeginTryCatch(UpdateResults, obj);\n        }\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> MouseEnterCommandHandler(CommandArgs obj)\n        {\n            LastEvent = <span style=\"color:#a31515\">&quot;MouseEnter&quot;</span>;\n            TryCatch.BeginTryCatch(UpdateResults, obj);\n        }\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> MouseMoveCommandHandler(CommandArgs obj)\n        {\n            LastEvent = <span style=\"color:#a31515\">&quot;MouseMove&quot;</span>;\n            TryCatch.BeginTryCatch(UpdateResults, obj);\n        }\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> MouseLeaveCommandHandler(CommandArgs obj)\n        {\n            LastEvent = <span style=\"color:#a31515\">&quot;MouseLeave&quot;</span>;\n            TryCatch.BeginTryCatch(UpdateResults, obj);\n        }\n\n        <span style=\"color:blue\">#endregion</span>\n\n        <span style=\"color:blue\">#region</span> CommandCollection\n\n        <span style=\"color:blue\">public</span> ObservableCollection&lt;RelayCommand&gt; DockPanelCommandCollection { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; }\n    \n\n        <span style=\"color:blue\">#endregion</span>\n\n        <span style=\"color:blue\">#region</span> Methods\n\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> UpdateResults(CommandArgs obj)\n        {\n            <span style=\"color:blue\">var</span> args = obj.OriginalArgs <span style=\"color:blue\">as</span> MouseEventArgs;\n            <span style=\"color:blue\">if</span>(args!=<span style=\"color:blue\">null</span>)\n            {\n                LeftButtonState = args.LeftButton.ToString();\n                RightButtonState = args.RightButton.ToString();\n               \n            }\n            <span style=\"color:blue\">if</span> (obj.CommandParameters != <span style=\"color:blue\">null</span>) CommandParameterValue = obj.CommandParameters.ToString();\n        }\n\n        <span style=\"color:blue\">#endregion</span>\n\n        <span style=\"color:blue\">#region</span> Properties\n\n        \n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span>  _mouseDownIsChecked;\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> MouseDownIsChecked\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span>  _mouseDownIsChecked; }\n            <span style=\"color:blue\">set</span>\n            {\n                 _mouseDownIsChecked = value;\n                NotifyPropertyChanged(<span style=\"color:blue\">this</span>, o =&gt; o.MouseDownIsChecked);\n            }\n        }\n\n        \n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> _mouseUpIsChecked;\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> MouseUpIsChecked\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _mouseUpIsChecked; }\n            <span style=\"color:blue\">set</span>\n            {\n                _mouseUpIsChecked = value;\n                NotifyPropertyChanged(<span style=\"color:blue\">this</span>, o =&gt; o.MouseUpIsChecked);\n            }\n        }\n\n        \n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> _mouseEnterIsChecked;\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> MouseEnterIsChecked\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _mouseEnterIsChecked; }\n            <span style=\"color:blue\">set</span>\n            {\n                _mouseEnterIsChecked = value;\n                NotifyPropertyChanged(<span style=\"color:blue\">this</span>, o =&gt; o.MouseEnterIsChecked);\n            }\n        }\n\n        \n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> _mouseLeaveIsChecked;\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> MouseLeaveIsChecked\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _mouseLeaveIsChecked; }\n            <span style=\"color:blue\">set</span>\n            {\n                _mouseLeaveIsChecked = value;\n                NotifyPropertyChanged(<span style=\"color:blue\">this</span>, o =&gt; o.MouseLeaveIsChecked);\n            }\n        }\n\n        \n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">bool</span> _mouseMoveIsChecked;\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">bool</span> MouseMoveIsChecked\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _mouseMoveIsChecked; }\n            <span style=\"color:blue\">set</span>\n            {\n                _mouseMoveIsChecked = value;\n                NotifyPropertyChanged(<span style=\"color:blue\">this</span>, o =&gt; o.MouseMoveIsChecked);\n            }\n        }\n \n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> LastEvent\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _lastEvent; }\n            <span style=\"color:blue\">set</span>\n            {\n                _lastEvent = value;\n                NotifyPropertyChanged(<span style=\"color:blue\">this</span>, o =&gt; o.LastEvent);\n            }\n        }\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> LeftButtonState\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _leftButtonState; }\n            <span style=\"color:blue\">set</span>\n            {\n                _leftButtonState = value;\n                NotifyPropertyChanged(<span style=\"color:blue\">this</span>, o =&gt; o.LeftButtonState);\n            }\n        }\n\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> RightButtonState\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _rightButtonState; }\n            <span style=\"color:blue\">set</span>\n            {\n                _rightButtonState = value;\n                NotifyPropertyChanged(<span style=\"color:blue\">this</span>, o =&gt; o.RightButtonState);\n            }\n        }\n\n      \n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">string</span> CommandParameterValue\n        {\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> _commandParamterValue; }\n            <span style=\"color:blue\">set</span>\n            {\n                _commandParamterValue = value;\n                NotifyPropertyChanged(<span style=\"color:blue\">this</span>, o =&gt; o.CommandParameterValue);\n            }\n        }\n\n        <span style=\"color:blue\">#endregion</span>\n\n</pre>\n</div>\n&nbsp;</pre>\r\n<pre style=\"color:black\"><a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=bhushanpoojary%40gmail%2ecom&lc=US&item_name=Multi%20Event%20Command%20Binder&no_note=0&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHostedGuest\"></a></pre>\r\n<div style=\"color:black; background-color:white\">\r\n<p style=\"color:black\">&nbsp;</p>\r\n</div>\r\n</div>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "Multi Event Command,Command Binder,WPF Command,Command,Binding Command,",
  "LastEdited": "2012-11-14T02:23:41.853-08:00"
}
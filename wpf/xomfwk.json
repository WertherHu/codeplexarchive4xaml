{
  "ProjectName": "xomfwk",
  "Title": "Xomega Framework",
  "Description": "Xomega Framework is a powerful .NET framework for building multi-tier ASP.NET, WPF or Silverlight applications.",
  "MovedLink": "https://github.com/Xomega-Net/XomegaFramework",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<h3>Note: we have moved to <a href=\"https://github.com/Xomega-Net/XomegaFramework\">\r\nGitHub</a>!</h3>\r\n<h2>Project Description</h2>\r\n<p>Xomega Framework is a powerful .NET framework for building multi-tier ASP.NET, WPF or Silverlight applications backed by a WCF service layer based on Entity Framework or any other ORM framework.<br>\r\n<br>\r\nThe framework has been built from more than 10 years of experience and is based on the approach that has been proven in many large scale applications. The primary goals of the framework are to:</p>\r\n<ul>\r\n<li>Enable rapid application development. </li><li>Promote reusability, which can significantly reduce maintenance costs. </li><li>Ensure consistency to deliver the best user experience. </li></ul>\r\n<h2>Framework Features</h2>\r\n<p>Xomega framework provides rich base and utility classes for building presentation layer data objects that can be bound to the standard ASP.NET, WPF or Silverlight controls. Some of the important features that the framework supports are as follows.</p>\r\n<table border=\"0\">\r\n<tbody>\r\n<tr>\r\n<td align=\"left\" valign=\"top\">\r\n<ul>\r\n<li><strong>Data Objects (View Models)</strong>\r\n<ul>\r\n<li>Nesting child objects and object lists. </li><li>Editability of data objects. </li><li>Modification tracking. </li><li>Validation of data objects. </li><li>Sorting object lists by multiple properties. </li></ul>\r\n</li><li><strong>Data Properties</strong>\r\n<ul>\r\n<li>Value conversion and formatting rules. </li><li>Multi-valued properties. </li><li>Editability of properties. </li><li>Required properties. </li><li>Property visibility and security access level. </li><li>Property change events. </li><li>Validation rules for properties. </li><li>Set of general and specialized properties. </li><li>Combo properties. </li></ul>\r\n</li><li><strong>Lists of Values</strong>\r\n<ul>\r\n<li>Flexible value list providers. </li><li>Cascading properties. </li><li>Look-up cache. </li><li>Self-indexing lookup tables. </li><li>Extensible cache loaders. </li><li>Flexible search operators. </li></ul>\r\n</li></ul>\r\n</td>\r\n<td align=\"left\" valign=\"top\">\r\n<ul>\r\n<li><strong>WPF/Silverlight/ASP.NET</strong>\r\n<ul>\r\n<li>Binding WPF/Silverlight/ASP.NET controls to properties in XAML/ASPX. </li><li>Binding controls state to property attributes. </li><li>Compile time check of WPF bindings in XAML. </li><li>Highlighting invalid properties. </li><li>Displaying validation errors. </li><li>Marking required fields. </li><li>Bindings for common WPF/Silverlight/ASP.NET controls. </li><li>Binding (editable) grid controls to data object lists. </li></ul>\r\n</li><li><strong>Error handling</strong>\r\n<ul>\r\n<li>Reporting multiple errors during validation or a service call. </li><li>Special handling based on error severity. </li><li>Error codes and user messages that support localization. </li></ul>\r\n</li><li><strong>Communication with service layer</strong>\r\n<ul>\r\n<li>Converting Data Objects to/from transport data contracts. </li><li>Multiple-request communication sessions with the service layer for stateful services.\r\n</li></ul>\r\n</li></ul>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>Despite the multitude of features that the framework supports, coding to the framework is very easy and straightforward to the point where the bulk of the presentation data objects can be generated from a business object model. In fact, Xomega generators\r\n provided by the Xomega.Net plug-in for Visual Studio do exactly that - they generate the presentation data objects and the forms that bind to these objects from an XML-based Xomega object model. For more details please visit\r\n<a href=\"http://www.xomega.net\">http://www.xomega.net</a>.</p>\r\n<h2>How to get started with Xomega Framework</h2>\r\n<p>If you would like to test drive the Xomega Framework to see how easy it makes building .Net applications, here are the different ways that you can do it:</p>\r\n<ul>\r\n<li>The fastest way to see Xomega in action, is to <a href=\"http://xomega.net/\">install the free Xomega.Net plug-in for Visual Studio</a> for XML-based model driven development, which comes packaged with Xomega Framework. Take a look at our simple\r\n<a href=\"http://xomega.net/Tutorials/Overview.aspx\">step-by-step tutorials</a> that allow you to generate a powerful end-to-end WPF, Silverlight or ASP.NET application with full searching capabilities and CRUD support from a database in just several minutes.\r\n</li><li>You can also download <a href=\"http://xomfwk.codeplex.com/releases\">the latest version of the Xomega Framework</a>. It has a sample application based on the AdventureWorks database from Microsoft, which demonstrates the framework features.\r\n</li><li>If you use NuGet, you can also add the Xomega Framework to your project through the Package Manager. Just search the packages for Xomega.\r\n</li></ul>\r\n<h2>Additional Resources</h2>\r\n<p><a href=\"/wikipage?title=Xomega%20Framework%20Overview&referringTitle=Home\">Xomega Framework Overview</a> - quick overview of the framework principles.</p>\r\n<h3>Articles</h3>\r\n<ul>\r\n<li><a href=\"http://www.codeproject.com/KB/WPF/xomfwk.aspx\">Take MVC to the Next Level in .Net</a>&nbsp;- in-depth run through framework's UI features with examples.\r\n</li><li><a href=\"http://www.codeproject.com/Articles/317232/How-to-Build-Flexible-and-Reusable-WCF-Services\">How to Build Flexible and Reusable WCF Services</a> - framework's support for service layer best practices and design patterns.\r\n</li><li><a href=\"http://www.codeproject.com/KB/usability/PowerSearch.aspx\">How to Build Powerful Search Forms</a> - demonstrates application of the framework for building advanced search forms.\r\n</li><li><a href=\"http://www.codeproject.com/Articles/545906/Cascading-Selection-the-MVC-Way\">Cascading Selection the MVC Way</a>&nbsp;- describes working with cached static data, selection controls, cascading selection, etc.\r\n</li></ul>\r\n<h3>Tutorials</h3>\r\n<p><a href=\"http://xomega.net/Tutorials/HowTos.aspx\">How-To Guides</a> for developing&nbsp;applications&nbsp;with Xomega Framework and Xomega.Net.</p>\r\n<h3>Videos</h3>\r\n<p><a href=\"http://www.youtube.com/watch?v=TnegCCkqO8Q&hd=1\">How to build WPF forms with Xomega</a><br>\r\n<a href=\"http://www.youtube.com/watch?v=9eW0gsguzGM&hd=1\">How to build details forms with Xomega</a><br>\r\n<a href=\"http://www.youtube.com/watch?v=PCkeYbbDxxc&hd=1\">How to build Silverlight pages with Xomega</a><br>\r\n<br>\r\n<a href=\"http://xomega.net/Videos/VideoTutorials.aspx\">All Xomega Videos</a></p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "WCF,Framework,RAD,",
  "LastEdited": "2017-06-14T21:39:16.467-07:00"
}
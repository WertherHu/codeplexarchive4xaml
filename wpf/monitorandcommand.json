{
  "ProjectName": "monitorandcommand",
  "Title": ".NET/Mono/NETMF Monitor and Command middleware for embedded projects",
  "Description": "The \"Monitor and Command\" solution builds client/server libraries providing \"monitor and command\" messaging for embedded projects using .NET/NETMF/Mono.",
  "MovedLink": "https://github.com/codeabilitynet/monitorandcommand",
  "HomeWiki": "<div class=\"wikidoc\">The &#34;Monitor and Command&#34; solution builds client&#47;server libraries providing &#34;monitor and command&#34; messaging for embedded projects using .NET&#47;NETMF&#47;Mono.<br />\n<h1>Overview</h1>\r\nThe Visual Studio 2013 / .NET 4.5 solution building this middleware features : \n<ul><li>Core projects, providing the .NET/Mono server and .NET/NETMF/Windows Phone 8 client libraries; </li>\n<li>Test projects, using the core libraries in server/device/remote console applications for testing/prototyping purposes; </li>\n<li>Demo projects, showcasing the use of the core libraries to define Netduino, Raspberry Pi, WPF &amp; Windows Phone applications communicating through the .NET/Mono server.</li></ul>\n<i>Xamarin being integrated in Visual Studio 2015 Community Edition, it&#39;s now possible to develop for Android &amp; iOS devices .NET/C# applications that integrate the Client library.</i><br /><br /><i>C++/Wiring &quot;client&quot; code is available for devices like Particle&#39;s Photon.</i><br /><a href=\"http://github.com/codeabilitynet/monitorandcommandclientforparticlephoton\">http://github.com/codeabilitynet/monitorandcommandclientforparticlephoton</a><br /><br /><img src=\"/projects/monitorandcommand/aadb84b1-78ac-4bc5-8829-d3e765dc2b16\" alt=\"Monitor&#32;and&#32;Command&#32;Schema.png\" title=\"Monitor&#32;and&#32;Command&#32;Schema.png\" /><br />\n<h1>Showcase videos</h1>\r\nShort demo video showcase the use of the core libraries to provide monitoring and commanding between the server, running on: \n<ul><li>Windows (<a href=\"https://youtu.be/uIvmFdClZJ4\">https://youtu.be/uIvmFdClZJ4</a>) or;</li>\n<li>a Raspberry Pi 2 with Mono (<a href=\"https://youtu.be/siU3eFwBiak\">https://youtu.be/siU3eFwBiak</a>);</li></ul>\nusing the .NET/Mono server library to handle connections and to route messages between devices: \n<ul><li>a Netduino Plus using the NETMF client to send random data (faking data generated by a sensor) and to receive commands to light on/off LEDs (<a href=\"https://youtu.be/uIvmFdClZJ4\">https://youtu.be/uIvmFdClZJ4</a>); </li>\n<li>a Netduino 3 Wifi sending the temperature read by a DS18B20 sensor (<a href=\"https://youtu.be/S69T4bpdfsU\">https://youtu.be/S69T4bpdfsU</a>) or controlling the voltage applied to a LED with a MCP 4921 (<a href=\"https://youtu.be/srGZ8fE9hNs\">https://youtu.be/srGZ8fE9hNs</a>);</li>\n<li>a Raspberry Pi using the .NET/Mono client to send the status the LEDs of it&#39;s Pibrella board (<a href=\"https://youtu.be/-u_burGlGyk\">https://youtu.be/-u_burGlGyk</a>);</li>\n<li>a Raspberry Pi 2 using the .NET/Mono client to send random data (<a href=\"https://youtu.be/rHzfAcbFsg0\">https://youtu.be/rHzfAcbFsg0</a>);</li>\n<li>a Windows Phone using the WP client to receive the messages sent by some of the above devices and to send them back commands (<a href=\"https://youtu.be/uIvmFdClZJ4\">https://youtu.be/uIvmFdClZJ4</a>);</li>\n<li>a WpfMonitor application using the .NET/Mono client to present the data received from all devices on a WPF UI;</li>\n<li>a Surface RT tablet using the W8 client to receive all the messages exchanged by the server and several devices and present them on a XAML UI <a href=\"https://youtu.be/jgTgU7ul_Jo\">https://youtu.be/jgTgU7ul_Jo</a>.</li></ul>\n<br /><img src=\"http://img.youtube.com/vi/jgTgU7ul_Jo/sddefault.jpg\" /><br /><img src=\"http://img.youtube.com/vi/nfd8XJ2L2gg/sddefault.jpg\" /><br /><br />Additionnaly, an ASP.NET MVC application logs, through a WCF service called by the server, all the messages received by the server.<br /><br /><img src=\"/projects/monitorandcommand/7df9e60a-f13f-47ba-b31a-13ddc1a84a61\" alt=\"azure.png\" title=\"azure.png\" /><br />\n<h1>&quot;How to&quot; Documentation</h1>\r\nThe <a href=\"https://monitorandcommand.codeplex.com/documentation?referringTitle=Home\">Documentation</a> page explains how you can reference the solution&#39;s library to your projects to add messaging capabilities to your .NET/Mono/NETMF projects.<br />\n<h1>Visual Studio Solution</h1>\r\nDetailed description of the solution : <a href=\"https://monitorandcommand.codeplex.com/SourceControl/latest#CodeAbility.MonitorAndCommand/Projects.txt\">https://monitorandcommand.codeplex.com/SourceControl/latest#CodeAbility.MonitorAndCommand/Projects.txt</a><br /><br /><img src=\"/projects/monitorandcommand/642297d0-dbeb-42d1-82d1-2a08b5873c89\" alt=\"Solution.png\" title=\"Solution.png\" /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "mono,WPF,windows phone,NETMF,Netduino,.NET 4.5,Raspberry Pi,Client/Server,GPIO,Multithreading,",
  "LastEdited": "2016-09-11T01:08:17.813-07:00"
}
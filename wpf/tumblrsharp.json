{
  "ProjectName": "tumblrsharp",
  "Title": "Tumblr#",
  "Description": "A fully featured C# Tumblr client for Windows 8, Windows Phone 8 and WPF. Includes multi-photo posting using multipart forms.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Tumblr#</h1>\rA fully featured C&#35; Tumblr client for Windows 8, Windows Phone 8 and WPF. Includes multi-photo posting using multipart forms. <br /><br /><b>Main Features</b>\n<ul><li>Fully featured client for the Tumblr v2 API (<a href=\"http://www.tumblr.com/docs/en/api/v2\">http://www.tumblr.com/docs/en/api/v2</a>)</li>\n<li>Core libraries are built as PCLs</li>\n<li>Can be used from .NET 4.5, Windows Store or Windows Phone 8 apps</li>\n<li>Extensible model</li></ul>\n<br /><b>Obtaining the binaries</b><br />You can either download the binaries from the <a href=\"https://tumblrsharp.codeplex.com/releases/view/111274\">Releases</a> section or, even easier, install Tumblr# from NuGet:<br /><br /><img src=\"/projects/tumblrsharp/93d0c597-03b6-4e60-ab4e-cf7bb25cf75a\" alt=\"tumblrsharp-nuget.png\" title=\"tumblrsharp-nuget.png\" /><br /><br /><br /><b>Overview</b><br />Tumblr# is composed by two main assemblies:\n<ul><li><b>DontPanic.TumblrSharp</b>. This is the main assembly and includes a base client for Tumblr. This client provides a few generic methods to call into the Tumblr API and expects the caller to provide the business entities to which to deserialize Tumblr&#39;s JSON responses. If you want to work with your types, you can just reference this assembly.</li>\n<li><b>DontPanic.TumblrSharp.Client</b>. This assembly contains a fully featured client and a whole set of business entities representing the responses received from the Tumblr API.</li></ul>\nThese assemblies are built as PCLs targeting:\n<ul><li>Windows 8</li>\n<li>Windows Phone 8</li>\n<li>.NET 4.5</li></ul>\nSince PCLs have limited access to the .NET framework API (basically the intersection of all the selected platforms) I had to abstract out the cryptographic classes required to sign the OAuth requests as an interface and take that interface as a dependency. When creating instances of the OAuthClient or TumblrClient classes you will have to pass a concrete implementation of this dependency - or simply use one of the provided platform-specific extensions:\n<ul><li>DontPanic.TumblrSharp.WinRT</li>\n<li>DontPanic.TumblrSharp.WP8</li>\n<li>DontPanic.TumblrSharp.Net45</li></ul>\nThese assemblies contain a concrete implementation of the crypto dependency and also a couple of useful factory classes to create instances of the OAuthClient and the TumblrClient without having to pass the dependency.</div><div class=\"ClearBoth\"></div>",
  "TagList": ".NET,C#,Client,Tumblr,Tumblr API,Portable,",
  "LastEdited": "2013-08-29T19:53:19.16-07:00"
}
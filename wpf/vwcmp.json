{
  "ProjectName": "vwcmp",
  "Title": "Vodnev WPF Controls Micro Pack",
  "Description": "VWCMP is the small set of controls which can help you to create flexible UI with the smaller effort.\r\nContains:\r\n- DateSelector;\r\n- Keyboard;\r\n- ValidatableTextBox.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>VWCMP</h1>\r<b>Current version: 1.0.18</b><br /><br /><i>VWCMP</i> is the small set of controls which can help you to create flexible UI with the smaller effort.<br /><i>VWCMP</i> contains:\n<ul><li><i>DateSelector</i> - this control can be used to select date from the list;</li>\n<li><i>Keyboard</i> – the on-screen keyboard which can serve as a hardware device analogue;</li>\n<li><i>ValidatableTextBox</i> – the classic TextBox control with regular expression-based validation logic.</li></ul>\nAll types are defined inside the <i>Vodnev.Controls</i> namespace. <br />\n<h2>DateSelector control (Date Picker)</h2>\r<i>DateSelector</i> is the control which can be used to select date from the list.<br /><br /><img src=\"/projects/vwcmp/a418be0f-e96e-4b01-b723-42b7c2a4b68d\" alt=\"Picture1_1.png\" title=\"Picture1_1.png\" /><br /><b>Picture 1.1. DateSelector example application with all properties in their default values.</b><br /><br /><i>DateSelector</i> has several important members:\n<ul><li><i>SelectedDate</i> – gets or sets visible date;</li>\n<li><i>MinimumYear</i> – gets or sets minimum year in the list;</li>\n<li><i>MaximumYear</i> – gets or sets maximum year in the list;</li>\n<li><i>ControlStyle</i> – an enumeration, sets one of the predefined templates;</li>\n<li><i>LocaleName</i> – gets or sets months names;</li>\n<li><i>SelectedDateChanged</i> – an event raised when <i>SelectedDate</i> changes.</li></ul>\nYou can use one of predefined templates via ControlStyle property. Today only “Default”, “Touchscreen” and &quot;TouchscreenYearOnly&quot; templates are available, and you also can create your own. An example of custom template is included into the demo application (DateSelectorCustomTemplateDictionary.xaml). <br /><br />If MinimumYear property value is greater than MaximumYear, last assigned value will be used for both MinimumYear and MaximumYear.<br />LocaleName gets and sets months names language. If no value is assigned, CultureInfo.CurrentCulture will be used.<br /><br /><img src=\"/projects/vwcmp/ed3873fe-f2e9-4ca1-9ed6-97cc1ae3f618\" alt=\"Picture1_2.png\" title=\"Picture1_2.png\" /><br /><b>Picture 1.2. DateSelector with ControlStyle.Touchscreen and LocaleName “it-IT”.</b><br /><br /><img src=\"/projects/vwcmp/d603cc15-d6ac-4199-88b1-cb8c578d475e\" alt=\"Picture1_3.png\" title=\"Picture1_3.png\" /><br /><b>Picture 1.3. DateSelector with custom template applied.</b><br />\n<h2>Keyboard control </h2>\rThis control emulates hardware device buttons pressures. <br />It is possible to create almost any keyboard template. Control finds all buttons inside the template and uses ther <i>Tag</i> property values.<br /><br /><img src=\"/projects/vwcmp/243586ef-00dc-4448-85fc-e0ea0c9469aa\" alt=\"Picture2_1.png\" title=\"Picture2_1.png\" /><br /><b>Picture 2.1. Keyboard with ControlStyle.Default.</b><br /><br /><i>Keyboard</i> also has <i>KeyPressed</i> event, which can be used to add additional functionality.<br /><br /><img src=\"/projects/vwcmp/6d8fac8f-7e89-46da-abea-bca715e82b5b\" alt=\"Picture2_2.png\" title=\"Picture2_2.png\" /><br /><b>Picture 2.2. Keyboard with ControlStyle.TouchscreenNumbersOnly.</b><br /><br /><img src=\"/projects/vwcmp/043f8224-704e-4d58-9778-9be10bff27bf\" alt=\"Picture2_3.png\" title=\"Picture2_3.png\" /><br /><b>Picture 2.3. Keyboard with ControlStyle.LatinSimple.</b><br /><br /><img src=\"/projects/vwcmp/541ec73a-2c75-4fea-bfe3-521ce838e0fd\" alt=\"Picture2_4.png\" title=\"Picture2_4.png\" /><br /><b>Picture 2.4. Keyboard with custom template applied.</b><br />\n<h2>ValidatableTextBox control</h2>\rThis control uses regular expression to validate user input.<br />Every char typed (or erased) results in validating current text against <i>Regex</i> type object. For sure, you will need some hands-on experience in using regular expressions. <br /><br />Here are some examples:\n<ul><li>“^\\d{5}$” – correct text must contain exactly five numbers;</li>\n<li>“^\\d{4,}$” – correct text must contain four or more numbers.</li>\n<li>or you can refer to the <a href=\"http://msdn.microsoft.com/en-us/library/az24scfc(VS.71).aspx\">Regular Expression Language Elements</a></li></ul>\nUsing <i>ValidationStateChanged</i> event and <i>IsCorrect</i> dependency property, you can notify user in any manner.<br /><br /><img src=\"/projects/vwcmp/4151e857-b0d2-4f66-8f7e-517a58549eee\" alt=\"Picture3_1.png\" title=\"Picture3_1.png\" /><br /><b>Picture 3.1. ValidatableTextBox validated as incorrect.</b><br /><br /><img src=\"/projects/vwcmp/3a1b12e3-4d9d-4ee8-9a11-8a6e56fec888\" alt=\"Picture3_2.png\" title=\"Picture3_2.png\" /><br /><b>Picture 3.2. ValidatableTextBox validated as correct.</b><br /><br /><img src=\"/projects/vwcmp/c5d6f29f-afb4-48b4-ade0-394379b23d96\" alt=\"Picture3_3.png\" title=\"Picture3_3.png\" /><br /><b>Picture 3.3. ValidatableTextBox with ControlStyle.Colored and ValidationRegex ‘^\\(\\d{3}\\)-\\d{3}-\\d{4}$’.</b><br /><br /><img src=\"/projects/vwcmp/cee80575-9dea-441a-9ef2-0b74dfcc5c49\" alt=\"Picture3_4.png\" title=\"Picture3_4.png\" /><br /><b>Picture 3.4 ValidatableTextBox with the same parameters, as shown at the picture 3.3 and custom template applied.</b></div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,WPF controls,",
  "LastEdited": "2009-07-08T11:55:54.033-07:00"
}
{
  "ProjectName": "MetaClip",
  "Title": "Open Source Clipboard Content Management Utility",
  "Description": "A simple clipboard content archiving tool and class library. The MetaClip GUI application makes it easy for content users to permanently store, organize and restore clipboard contents in a portable file format that can be stored, restored, and moved from one Windows PC to another, and for developers to incorporate similar clipboard archiving functionality into their own applications.  ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>PROJECT DESCRIPTION</strong></p>\r\n<p>MetaClip is a Windows clipboard content archiving and organization tool (including both a simple GUI implementation and a core class library) that provides the ability to permanently store, organize and restore Windows clipboard contents, including complex\r\n formatted textual content, images and other data formats, in portable file-system based libraries for future reuse.&nbsp;</p>\r\n<p>&#65279;&#65279;<img src=\"http://i104.photobucket.com/albums/m200/xenocide_2006/MainView.png\" alt=\"MetaClip Main View\" width=\"469\" height=\"299\" style=\"float:right\">MetaClip's ClipManager's current pre-alpha build uses binary serialization to store clipboard content, related\r\n metadata, and clipboard object formatting specifications to a custom file format using the '.clpx' extension. The '.clpx' file format encapsulates a collection of the active clipboard objects and all the formatting data and metadata necessary to restore them\r\n to the clipboard.</p>\r\n<p>The current build includes the ClipManager library (.DLL) which provides the basic serialization functionality, a simple state-driven application and GUI loosely following the MVVM design pattern, with views defined in WPF XAML classes and view models injected\r\n by a Unity-derived bootstrapper into a dependency injection container at start-up.</p>\r\n<p>The MetaClip application is in the early stages of design/development, but the current build more or less fulfills all the basic functions you'd expect, only &nbsp;without robust exception handling or sufficient abstraction/modularity in some areas. Specifically,\r\n the current build provides the ability to permanently store and retrieve Windows clipboard contents in a portable (.clpx) file format, functionality for classifying and filtering quick access to stored clips, and options for exporting and modifying the locations\r\n of file system-based clip libraries. &nbsp; &nbsp;&nbsp;</p>\r\n<p>THIS PROJECT USES/ABUSES THE FOLLOWING TECHNOLOGIES:&nbsp;C#, .NET 4.0, Prism, Unity,&nbsp;Visual Studio 2010, WPF, XAML</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,unity,Prism,MVVM,Clipboard Utility,C#,Content Management,",
  "LastEdited": "2011-12-27T20:31:59.917-08:00"
}
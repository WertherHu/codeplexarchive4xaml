{
  "ProjectName": "wpffizzbuzz",
  "Title": "WPF Progressive FizzBuzz Coding Assignment",
  "Description": "Classic \"FizzBuzz\".",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<div>\r\n<p>NOTE: This requires .NET 4.0 with the Async CTP.</p>\r\n</div>\r\n<h1>Classic FizzBuzz</h1>\r\n<p>The classic FizzBuzz programming exercise is as follows:</p>\r\n<p>Print out the numbers from 1 to 100, with the following exceptions:</p>\r\n<ul>\r\n<li>If the number is divisible by 3, print &quot;Fizz&quot; instead. </li><li>If the number is divisible by 5, print &quot;Buzz&quot; instead. </li><li>If the number is divisible by both 3 and 5, print &quot;FizzBuzz&quot; instead. </li></ul>\r\n<h1>Your Assignment</h1>\r\n<ol>\r\n<li><span style=\"font-size:7pt\">&nbsp;</span>Implement a classic FizzBuzz application as a WPF app. Generating the numbers to the screen should be initiatied by the user clicking a &ldquo;Start&rdquo; button. Output values should be displayed on the screen\r\n one at a time, for .25 seconds, with the new values replacing the existing value (that is, only one output value is seen at a time). In addition, do the following:\r\n</li><li>Your FizzBuzz app should allow the user to change the numeric range, for output of ranges other than 1 to 100, e.g., generate output for -32 to 5489\r\n</li><li>As the sequence of numbers is being generated, the screen should also show a running tally of how many values are divisible by 3, how many by 5, and how many by both.\r\n</li><li>Your FizzBuzz app should allow the user to specify alternate output tokens other than &ldquo;Fizz&rdquo; and &ldquo;Buzz&rdquo; to represent divisibility by three and 5.\r\n</li><li>Your solution should include tests that demonstrate the correctness of your implementation. You are free to use any unit test library with which you are comfortable.\r\n</li><li>Your app should use the MVVM architecture to separate UI and business logic, preferably utilizing the Caliburn.Micro MVVM application framework.\r\n</li></ol>\r\n<h1>Deliverables to Us</h1>\r\n<ul>\r\n<li>Email us a link to an online source code repository (bitbucket, github, codeplex, etc.), preferable with incremental commits so we can see your thought process as you developed.\r\n<ul>\r\n<li>We should be able to pull the repository to a local dev machine, build it, run unit tests, and confirm behavior of the application.\r\n</li><li>Inside that repository, a readme file with any explanation you deem necessary &ndash; decisions you made, ambiguities in requirements and how you decided to resolve them, interesting aspects of the application you think we should be aware of, etc.\r\n</li></ul>\r\n</li></ul>\r\n<p><strong><br>\r\n</strong></p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2012-05-18T09:11:02.003-07:00"
}
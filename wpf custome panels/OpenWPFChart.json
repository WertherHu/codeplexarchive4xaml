{
  "ProjectName": "OpenWPFChart",
  "Title": "OpenWPFChart library",
  "Description": "OpenWPFChart library goal is to provide the component model along with base components to assemble Chart controls. Parts set is extensible so the developer can add its own new components. Chart controls composed from the these parts could have different look and feel.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />OpenWPFChart library goal is to provide the component model along with base components to assemble Chart controls. Parts set is extensible so the developer can add its own new components. Chart controls composed from the these parts could have different look and feel.<br />\n<h1>Rationale</h1>\rChart controls design is a rather complex task. Companies and individuals propose wide spectrum of Chart controls, both open source and proprietary. Problem is that it’s practically unreal to design the Chart control or control suite satisfying various users needs and preferences (and even foresee them). At the first place the problem arises from: \n<ul><li>Chart elements set – functions graphs, scattered point clouds, colored areas between curves, diagrams, coordinate grids and axes, legends, labels, sorts of markers, etc. </li>\n<li>Control visual look.</li>\n<li>The way these elements are positioned at or around the Chart area; e.g. coordinate axes, legends and labels might be placed either inside the Chart area or along its borders or somewhere else. </li></ul>\nThe problem becomes even worst if a Chart control should provide editing capabilities of the data displayed.<br />As a result we see more and more new Chart controls written from the scratch. <br />\n<h1>General</h1>\rOpenWPFChart library provides the extensible set of Windows Presentation Foundation elements to enable a developer to assemble different Chart controls fit exactly her/his needs and preferences. It provides the developer with the opportunity do not start its Chart development from the ground. Instead, she or he build its Chart from the parts provided either by OpenWPFChart library or by third party parts developed on OpenWPFChart library model. That parts are then composed into the Chart by means of WPF wonderful composition capabilities.<br />\n<h1>Solution</h1>\rUsually a Chart behave as a collection of visual elements which can support or not support the notion of &quot;selected element(s)&quot;. So, basically, a Chart control could derive either from ItemsControl or from one of its derivatives: Selector, ListBox, etc. Since data presentation visual Chart items should share common Chart Area screen space, we could use Canvas (or like) as ItemsPanel to position that visuals in ItemsControl. Farther, we could place required decorative or functional elements like axes, grids, legends, labels, etc in the ItemsControl template. <br /><br />We could develop a set of elements (Visuals, FrameworkElements):\n<ul><li>Data presentation visual elements: function curves, scattered points clouds, etc.</li>\n<li>Coordinate grids.</li>\n<li>Coordinate axes.</li></ul>\n<br />With these elements at hands we could compose a Chart as follows:\n<ol><li>Data presentation visual elements (Chart items) are displayed as the ItemsControl items. We place grids into the ItemsControl template. If required, we could also place here the coordinate axes (if they should be alongside at the chart items). That ItemsControl forms &quot;the Chart Area&quot;. </li>\n<li>Chart Area outskirts are decorated with coordinate axes, legends, labels, etc. </li></ol>\n<br />To manage all the things above we don&#39;t even required to create the Chart control, we could compose all the parts directly in the application window. Note, however, that the window XAML in such a case becomes rather unwieldy, so this approach isn’t practical; it’s better to create one or more Chart controls (either Custom Controls or User Controls) with the look and feel required.<br /><br />One part of OpenWPFChart library is the object model of Chart components (<b>Chart Parts</b>) along with the basic set of these parts. Another part is the set of <b>Chart Controls</b> composed from the parts above.<br />\n<h1>See more</h1>\r<a href=\"https://openwpfchart.codeplex.com/wikipage?title=ChartParts&referringTitle=Home\">Chart Parts</a><br /><a href=\"https://openwpfchart.codeplex.com/wikipage?title=ChartPartsComposition&referringTitle=Home\">Chart Parts Composition</a><br /><a href=\"https://openwpfchart.codeplex.com/wikipage?title=ChartControls&referringTitle=Home\">Chart Controls</a><br /><a href=\"https://openwpfchart.codeplex.com/wikipage?title=Gallery&referringTitle=Home\">Gallery</a></div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,Chart,Controls,DataDisplay,Charts,",
  "LastEdited": "2009-05-09T00:58:03.06-07:00"
}
{
  "ProjectName": "graphviz4net",
  "Title": "Graphviz4Net",
  "Description": "Graphviz4Net provides WPF control that is capable of generating \"nice looking\" graph layouts with sub-graphs, curved edges with arrows, edges between sub-graphs and more. Nodes, edges and all other elements in the graph are fully customizable and can contain any other WPF controls (e.g., click-able buttons). Besides this WPF control, Graphviz4Net also provides .NET API for generating input and consuming the output of the Graphviz command line tool. We are also working on a Silverlight support, preview of it is already in the VCS.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><div style=\"clear:both;height:0;\">&nbsp;</div><img style=\"float:right;padding-left:.5em;\" src=\"/projects/graphviz4net/d8e6ba77-1d3c-4c6d-8bb8-29418116b263\" alt=\"example-shot.png\" title=\"example-shot.png\" /><br /><br /><b>Project Description</b><br />Graphviz4Net provides WPF control that is capable of generating &#34;nice looking&#34; graph layouts with sub-graphs, curved edges with arrows, edges between sub-graphs and more. Nodes, edges and all other elements in the graph are fully customizable and can contain any other WPF controls &#40;e.g., click-able buttons&#41;. Besides this WPF control, Graphviz4Net also provides .NET API for generating input and consuming the output of the Graphviz command line tool. We are also working on a Silverlight support, preview of it is already in the VCS.<br /><br />Fell free to <b>leave us any feedback or suggestions in Discussions section</b>. It will be appreciated. <br /><br />If you are brave enough (1) to build the latest version from <a href=\"http://graphviz4net.codeplex.com/SourceControl/list/changesets\">source control</a>, we suggest you do so, because Graphviz4Net is evolving and you might be missing great features if you use the released version.<br /><br />(1) no bravery required actually, just Visual Studio 2010 or MSBuild, all dependencies are in the repository.<br /><br /><b>Installation</b><br />Graphviz4Net depends on command line tool called &#39;dot&#39; that is part of the Graphviz project (<a href=\"http://www.graphviz.org/\">http://www.graphviz.org/</a>). Installation of Graphviz under Windows is pretty straightforward. <br /><br /><b>Usage</b><br />The preview release contains an example of the usage of the WPF control, which is quite easy. The documentation for the Graphviz to .NET API is under construction. In the meantime one can use the documentation comments in the source code.<br /><br /><b>Future Work &amp; Contribution</b><br />Possible enhancements: The WPF control could be portable to Silverlight with only a few changes to the source code. Implementation of LayoutBuilder for other GUI platforms than WPF, for instance, Windows Forms, Gtk#, HTML and CSS (with ASP.NET control), ... If you want to take part in this project, send me an e-mail, or just make a fork.<br /><br />Note on coding style: the intention is to follow reasonable rules from StyleCop, that is naming rules, members&#39; order rules, spaces between arithmetic operators, spaces instead of tabs, curly brackets, method&#39;s arguments on separate lines, if the line would be too long etc., but not mandatory API documentation for every member, for example.<br /><br /><b>Alternatives to Graphviz4Net</b><br /><a href=\"http://graphsharp.codeplex.com/\">Graph#</a> - graph layout framework with support for WPF. Graph# uses custom algorithms hence it does not depend on Graphviz, but at the moment it does not support curved edges and sub-graphs.<br /><a href=\"http://code.google.com/p/graphviznet/\">graphviznet</a> - GraphViz .NET wrapper. It provides more advanced and complete API to GraphViz, but actual visualization of the result generated by GraphViz is left to users of this library.<br /><a href=\"http://dot2silverlight.codeplex.com/\">Dot2Silverlight</a> - similar project that provides Silverlight control. However, it does not support sub-graphs.<br /><br /><b>Code sample</b><br /><pre>\nCODE:\nvar graph = new Graph&lt;Person&gt;();\nvar a = new Person { Name = &quot;Jonh&quot;, Avatar = &quot;./Avatars/avatar1.jpg&quot; };\nvar b = new Person { Name = &quot;Michael&quot;, Avatar = &quot;./Avatars/avatar2.gif&quot; };\ngraph.AddVertex(a);\ngraph.AddVertex(b);\ngraph.AddEdge(new Edge&lt;Person&gt;(a, b, new DiamondArrow()) { Label = &quot;Boss&quot; });\n\nXAML:\n&lt;Window.Resources&gt;\n  &lt;DataTemplate DataType=&quot;{x:Type Example:Person}&quot;&gt;\n    &lt;Border BorderBrush=&quot;Black&quot; BorderThickness=&quot;1&quot; Padding=&quot;0&quot; CornerRadius=&quot;5&quot;&gt;\n      &lt;StackPanel Orientation=&quot;Horizontal&quot;&gt;\n        &lt;Image Source=&quot;{Binding Avatar}&quot; Width=&quot;32&quot; Height=&quot;32&quot; Margin=&quot;5&quot; VerticalAlignment=&quot;Top&quot;/&gt;\n        &lt;StackPanel Orientation=&quot;Vertical&quot; Margin=&quot;2&quot;&gt;\n          &lt;TextBlock Text=&quot;{Binding Name}&quot;/&gt;\n          &lt;!-- ... --&gt;\n  &lt;/DataTemplate&gt;\n  \n  &lt;DataTemplate DataType=&quot;{x:Type Example:DiamondArrow}&quot;&gt;\n    &lt;Canvas Width=&quot;6&quot; Height=&quot;11&quot;&gt;\n      &lt;Polygon Points=&quot;3,0 6,5 3,10 0,5&quot; Stroke=&quot;Black&quot; StrokeThickness=&quot;1&quot; Fill=&quot;Black&quot;/&gt;\n    &lt;/Canvas&gt;\n  &lt;/DataTemplate&gt;\n\n  &lt;DataTemplate DataType=&quot;{x:Type ViewModels:EdgeViewModel}&quot;&gt;\n    &lt;Path Data=&quot;{Binding Data}&quot; Stroke=&quot;Black&quot; StrokeThickness=&quot;1&quot;/&gt;\n  &lt;/DataTemplate&gt;\n&lt;/Window.Resources&gt;\n\n&lt;WPF:GraphLayout Graph=&quot;{Binding Graph}&quot;/&gt;\n</pre><br /><br /><pre>\nDOT PARSING:\nvar graph = AntlrParserAdapter&lt;string&gt;.GetParser().Parse(&quot;digraph { ... }&quot;);\nConsole.WriteLine(graph.Vertices.First().Position);\n</pre><br />For more information on how to use Graphviz4Net see <a href=\"http://graphviz4net.codeplex.com/documentation\">the documentation</a>.<br /><br /><b>Additional Screenshots</b><br /><br /><img src=\"/projects/graphviz4net/3593aea0-be8c-4bb2-9f12-3d97f9598fd9\" alt=\"ae-shot.png\" title=\"ae-shot.png\" /><br />Graphviz4Net was used in <a href=\"http://patterns4net.codeplex.com/\">Patters4Net</a> project to generate interactive UML-like class diagrams that stress design patterns.<br /><br /><img src=\"/projects/graphviz4net/d548a86c-77ce-4405-ba22-a57a00a01495\" alt=\"new-demo-shot.png\" title=\"new-demo-shot.png\" /><br />This is a screen shot of new version of demo available in the latest release.</div><div class=\"ClearBoth\"></div>",
  "TagList": "graph,layout,graphviz,visualization,WPF,WPF controls,",
  "LastEdited": "2012-08-30T10:24:03.573-07:00"
}
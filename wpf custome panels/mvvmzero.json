{
  "ProjectName": "mvvmzero",
  "Title": "MVVM Zero",
  "Description": "Fat-free MVVM for WPF and Silverlight.\r\nNo assemblies, no dependencies, no fuss.\r\n",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Fat-free MVVM for WPF and Silverlight.<br />No assemblies, no dependencies, no fuss.<br /><br /><br /><b>FAQ</b><br />Q: What is MVVM?<br />A: MVVM is an architectural pattern for <a href=\"http://en.wikipedia.org/wiki/Separation_of_concerns\">seperating concerns</a> in GUI applications.<br /><br />Q: What does MVVM stand for?<br />A: Model View ViewModel <a href=\"http://en.wikipedia.org/wiki/Model_View_ViewModel\">(MVVM)</a>\n<ul><li>Model: an object model that represents the real state content</li>\n<li>View: all elements displayed by the GUI such as buttons, windows, graphics, and other controls</li>\n<li>ViewModel: a “Model of the View”</li></ul>\n<br />Q: When should I use MVVM?<br />A: If you want to <a href=\"http://en.wikipedia.org/wiki/Unit_testing\">unit test</a> your UI code as far as the View Model. <br /><br />Q: When shouldn&#39;t I use MVVM?<br />A: MVVM is <a href=\"http://blogs.msdn.com/b/johngossman/archive/2006/03/04/543695.aspx\">&quot;overkill&quot;</a> for simple UI operations.<br /><br />Q: Do I need a <a href=\"http://en.wikipedia.org/wiki/Software_framework\">framework</a> to implement MVVM?<br />A: No.<br /><br />Q: Do I need MVVM Zero to implement MVVM?<br />A: No.<br /><br />Q: Do I need to read a book to understand the MVVM pattern?<br />A: No.<br /><br />Q: Will you be adding a plethora of incidental functionality to MVVM Zero in the future?<br />A: No.<br /><br /><b>Articles</b>\n<ul><li><a href=\"http://visualstudiomagazine.com/articles/2011/10/01/mvvm-in-5-minutes.aspx\">Visual Studio Magazine: MVVM in 5 Minutes</a></li>\n<li><a href=\"http://visualstudiomagazine.com/articles/2011/08/15/fundamental-mvvm.aspx\">Visual Studio Magazine: Fundamental MVVM</a></li>\n<li><a href=\"http://neverindoubtnet.blogspot.com/2011/05/mvvm-backlash.html\">MVVM Backlash</a></li>\n<li><a href=\"http://cargocultsoftwaredevelopment.blogspot.com/2010/10/cargo-cult-mvvm-death-knell-of-wpf.html\">Cargo Cult MVVM =&gt; The death knell of WPF</a></li>\n<li><a href=\"http://blogs.msdn.com/b/johngossman/archive/2006/03/04/543695.aspx\">Advantages and disadvantages of M-V-VM</a></li></ul>\n<br /><b>Quotes</b>\n<ul><li><i>&quot;Another confusion point is with the frameworks surrounding MVVM. Some I&#39;m very familiar with include PRISM, MVVM Light Toolkit, Caliburn Micro and Cinch. While these <b>frameworks</b> and toolkits are widely used and can prove very valuable, they&#39;re <b>not essential for MVVM</b>.&quot;</i> - John Papa, Technical Evangelist for Microsoft</li>\n<li><i>&quot;MVVM has only two truly distinctive technical advantages: <b>automated testing of the view logic</b> and <b>integrated design time data</b>. Lots of developers don’t care about either.&quot;</i> - Ward Bell, Microsoft MVP</li>\n<li><i>&quot;MVVM happens to be a leading pattern. However, <b>many people throw a lot of extra complexity into the definition of MVVM</b>, burdening it with things that really are optional and <b>confusing the community in the process</b>.&quot;</i> - Pete Brown, Microsoft Community PM WPF/Silverlight</li>\n<li><i>&quot;For simple UI, <b>M-V-VM can be overkill</b>.  In bigger cases, it can be hard to design the ViewModel up front in order to get the right amount of generality.  <b>Data-binding for all its wonders is declarative and harder to debug</b> than nice imperative stuff where you just set breakpoints (though if you have lots of events running around, it may not be much different).&quot;</i> - John Gossman, Microsoft Architect for WPF and Silverlight</li></ul></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2011-10-26T08:06:02.33-07:00"
}
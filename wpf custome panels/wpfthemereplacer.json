{
  "ProjectName": "wpfthemereplacer",
  "Title": "WPF Theme Replacer",
  "Description": "This library allows users to provide their own resource dictionaries to replace the default theme dictionaries loaded by WPF.  This will make it so you don't have to decorate custom styles with BasedOn=\"{StaticResource {x:Type ...}}\" and other benefits.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />This library allows users to provide their own resource dictionaries to replace the default theme dictionaries loaded by WPF. This makes it so you don&#39;t have to decorate custom styles with BasedOn=&quot;{StaticResource {x:Type ...}}&quot; when your own custom theme is being used in your application.  It also makes it so if you have custom controls that just provide enhanced capability and don&#39;t need to replace the the style, you don&#39;t need to define a new style or override the DefaultStyleKey when you create the custom control.<br /><br />It&#39;s important to understand that you will be replacing the entire theme for a given assembly.  So you need to have a complete theme that has a style for every control in the assembly.  So I highly advise starting with the Aero or Royale theme and replacing bits of the theme as you go.<br /><br />Also, <i>real</i> WPF themes won&#39;t resolve DynamicResources that are contained in the same resource dictionary.  They need to be located outside of the theme dictionary.  So keep that in mind when converting other themes people have written when using the WPF Theme Replacer.  Most of the time you&#39;ll probably just be changing DynamicResources to StaticResources.  For anything else, you should be using component keys to resolve a DynamicResource.<br /><br />Here&#39;s an example of loading my own version of the Royale theme in my project.  <b>Note</b> you would need to have downloaded your own copy of the Royale or Aero theme into your project to do this.  You can obtain the <a href=\"http://msdn.microsoft.com/en-us/library/aa972136.aspx\">Royale theme here</a> or <a href=\"http://msdn.microsoft.com/en-us/library/aa972144.aspx\">Aero theme here</a>.<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">using</span> QuixoticLabs.Presentation;\n<span style=\"color:Green;\">//...</span>\nResourceDictionary royale = Application.LoadComponent(\n    <span style=\"color:Blue;\">new</span> Uri(<span style=\"color:#A31515;\">&quot;QuixoticLabs.Presentation.Test;component/Themes/Royale.xaml&quot;</span>, UriKind.Relative))\n    <span style=\"color:Blue;\">as</span> ResourceDictionary;\n\nThemeReplacer.AddTheme(ThemeReplacer.PresentationFramework, royale);\nThemeReplacer.Initialize();\n<span style=\"color:Green;\">//...</span>\r\n</pre></div><br />Additional details on the inner-workings and other WPF stuff: <a href=\"http://www.nickdarnell.com\">http://www.nickdarnell.com</a></div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,Theme,Style,Replace,Custom,Skin,",
  "LastEdited": "2010-02-06T08:18:58.493-08:00"
}
{
  "ProjectName": "artefactanimator",
  "Title": "Artefact Animator",
  "Description": "Artefact Animator provides an easy to use framework for procedural time-based animations in Silverlight and WPF.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h2>Project Description</h2>\rArtefact Animator provides an easy to use framework for procedural time-based animations in Silverlight and WPF.<br /><br />Inspired by the Flash community and forged out of frustration, Artefact Animator brings to WPF and Silverlight what <a href=\"http://code.google.com/p/tweener/\">Tweener</a> has done for Flash. If you’ve ever tried to get into animation in C# you’ll soon realize there are way too many steps to get you where you need to be. The consequences are that developers don’t love to animate UI and designers are limited by what they can animate when working with dynamic content. <br /> <br /><i>For more samples + code, head over to the <a href=\"https://artefactanimator.codeplex.com/wikipage?title=examples&referringTitle=Home\">Examples Page</a>.</i><br /><br /><object data=\"data:application/x-silverlight-2,\" type=\"application/x-silverlight-2\" style=\"height:500px;width:590px;\"><param name=\"source\" value=\"http://www.justgooddesign.com/demo/artefact-animator/AnimatorShowcase.xap\"></param><param name=\"windowless\" value=\"true\"></param><param name=\"minRuntimeVersion\" value=\"5.0.61118.0\"></param><param name=\"autoUpgrade\" value=\"true\"></param><p>You need to install Microsoft Silverlight to view this content. <a href=\"http://go.microsoft.com/fwlink/?LinkID=149156&v=5.0.61118.0\" style=\"text-decoration:none;\">Get Silverlight!<br /><img src=\"http://go.microsoft.com/fwlink/?LinkID=108181\" alt=\"Get Microsoft Silverlight\" style=\"border-style:none;\" /></a></p></object><iframe style=\"visibility:hidden;height:0;width:0;border-width:0;\"></iframe><br /><br />So how do I use it?<br /> <br /><pre>ArtefactAnimator.AddEase ( object, properties, values, time, ease, delay );\n</pre> Pretty easy right? <br /><br />And that’s just the tip of the iceberg. But before you say to yourself, “I’ve already seen something like that before” let’s check out some features...<br />\n<h2>Features</h2>\r\n<h5>Easy to use</h5>\r<ul><li>Animate multiple properties with just one line of code!</li>\n<li>Use strings as shortcuts to animations like “x”, “y”, “alpha”, and more!</li>\n<li>Extensions help reduce coding time by wrapping common animations.\n<ul><li>SlideTo will animate an UIElement’s  Canvas.Top and Canvas.Left properties</li>\n<li>AlphaTo will animate a UIElement’s Opacity</li></ul></li></ul>\n \n<h5>Smooth animations</h5>\r<ul><li>Artefact Animator updates every time the UI layer refreshes using CompositionTarget.Rendering. This allows for the most responsive animations possible.</li>\n<li> Limited error checking to increases performance</li></ul>\n \n<h5>Easing support</h5>\r<ul><li>Includes ported Robert Penner easing equations ( WPF ) ( from <a href=\"http://code.google.com/p/wpf-animation/\">DoublePennerAnimation</a> )</li>\n<li>Includes native easing equations ( Silverlight )</li>\n<li>Allows custom easing functions</li></ul>\n \n<h5>Custom Animation support ( Advanced )</h5>\r<ul><li>Animate any property you want with very little effort\n<ul><li>Create your own custom wrapper using getter/setter functions</li>\n<li>Register your custom animations and reference them by name later</li></ul></li></ul>\n \n<h5>Smart System</h5>\r<ul><li>Animations don’t conflict resulting in smooth transitions from one call to the next</li>\n<li>Call the SlideTo method 1000 times with delays and never worry - the latest animation will always take over when it starts.</li>\n<li>If errors occur when easing your program is not affected, the ease is simply stopped</li></ul>\n \n<h5>Comprehensive</h5>\r<ul><li>Begin, Update, Completed, and Stopped events\n<ul><li>Perfect for sequencing and callbacks</li></ul></li>\n<li>Add callbacks via extensions to maintain calls on one line\n<ul><li>easeObject.OnBegin( beginHandler ).OnUpdate( updateHandler ).OnComplete( completeHandler );</li></ul></li>\n<li>An EaseObjectGroup can be used to report when a group of animations have been completed</li></ul>\n \n<h5>Consistent</h5>\r<ul><li>Includes methods to make sure an objects transform group is in place and in the right sequence before animating any transforms – UIElement.NormalizeTransformGroup()</li></ul>\n \n<h5>Flexible</h5>\r<ul><li>Doesn’t use Storyboards so every aspect of Artefact Animator can be customized and controlled by you.</li>\n<li>Constructs animations through composition resulting in the ability to extend functionality later on.</li>\n<li>Adding an Ease to Artefact Animator will produce an EaseObject that allows you to Start or Stop that animation anytime.</li></ul>\n<br />It’s flexible, fast, expandable, and is a super easy transition for coders coming from Flash.<br />\n<h2>Disclaimer</h2>\rKeep in mind this is the first public release of one of Artefact&#39;s internal tools. Documentation is sparse and it hasn’t been put through the fire so it’s still a bit wet behind the ears. Maybe after some people get hold of it it’ll morph into something completely different. That being said it’s a great prototyping tool and we expect it to mature quickly.<br />\n<h2>More From Artefact</h2>\rLearn more about <a href=\"http://www.artefactgroup.com/\">Artefact</a>, explore the latest projects in Artefact&#39;s <a href=\"http://www.artefactgroup.com/content/work/\">portfolio</a> or discover other projects <a href=\"http://justgooddesign.com\">Jesse Graupmann</a> has worked on.</div><div class=\"ClearBoth\"></div>",
  "TagList": "C#,Animation,WPF,Silverlight,Artefact,Easing,Transition,Tweener,Ease,Robert Penner,tween,.NET 3.5,Silverlight 3,.NET 4.0,silverlight 4,fino,WP7,Windows Phone 7,windows mobile,",
  "LastEdited": "2014-01-13T22:50:16.377-08:00"
}
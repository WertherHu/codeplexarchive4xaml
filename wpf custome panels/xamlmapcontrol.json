{
  "ProjectName": "xamlmapcontrol",
  "Title": "XAML Map Control",
  "Description": "A set of controls for WPF, Silverlight and Windows Runtime for rendering digital maps from different providers and various types of map overlays.",
  "MovedLink": "https://github.com/ClemensFischer/XAML-Map-Control",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />A set of controls for WPF, Silverlight and Windows Runtime for rendering digital maps from different providers and various types of map overlays.<br /><br />Map providers can easily be added by specifying an URL template for their map tile bitmaps. Map overlay layers allow to draw and interact with graphical objects and pushpins on the map. The Map Control API is very similar to that of the Microsoft Bing Maps Control for WPF, except that no API key is needed.<br /><br />The project includes sample applications for WPF, Silverlight and Windows Runtime, which demonstrate the features of XAML Map Control.<br /><br />The WPF version allows to use a System.Runtime.Caching.ObjectCache instance for caching map tile bitmaps. The cache may be set to an instance of System.Runtime.Caching.MemoryCache (e.g. MemoryCache.Default), but caching can also be done persistently by some specialized ObjectCache implementation. Map Control comes with two such implementations:\n<ul><li>FileDbCache, an ObjectCache implementation based on EzTools FileDb, a simple, file based No-SQL database.</li>\n<li>ImageFileCache, an ObjectCache implementation that stores each cached map tile as a single image file, in the original file format delivered by the map provider (typically PNG or JPG). ImageFileCache does not support expiration, which means that cached tile image files will not be deleted automatically. The cache may hence consume a considerable amount of disk space.</li></ul>\nIf you want to try the sample application with persistent caching, uncomment the appropriate TileImageLoader.Cache setting in the sample application&#39;s MainWindow.xaml.cs file. Please note that some map providers may not allow persistent caching of their map data.<br /><br />Since version 2.4.0 the TileImageLoader of the Windows Runtime version also supports caching of map tiles to local image files and to a FileDb file. The cache functionality is defined by the interface IImageCache (in namespace MapControl.Caching) and implemented by the classes ImageFileCache and FileDbCache in libraries ImageFileCache.WinRT and FileDbCache.WinRT. Local image files are written to the  ApplicationData.Current.TemporaryFolder by default.<br /><br />XAML Map Control is also available on NuGet, with Package Id XAML.MapControl. The NuGet package contains MapControl libraries for WPF, Silverlight and Windows Runtime.<br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2015-10-11T00:27:18.913-07:00"
}
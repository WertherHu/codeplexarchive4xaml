{
  "ProjectName": "atha",
  "Title": "Atha: Acceptance Testing Heuristics Automation",
  "Description": "Currently: Atha allows the user to write automated tests in the scripting languages IronPython, IronRuby, PowerShell, and Razor and to run those tests via a Console program (called \"AthaX\"), a WPF Rich-Client Windows application (called \"Athalon\"), or a Web Browser-Based Silverlight application (called \"Athalight\").\r\n\r\nThe goal of this project is to provide a simple means of acceptance and regression testing delivered on top of the Microsoft technology stack (although future versions may support non-Microsoft testing).\r\n\r\nAtha was derived from the initial alpha-version releases of the E.S.W.A.T. project (Even Simpler Web/Windows Acceptance Testing) to build on the lessons learned. The Atha name stands for \"Acceptance Testing Heuristics Automation\".\r\n\r\nAtha Terminology:\r\n    Athaverse = The Entire Atha System\r\n    Athamite = User\r\n    Athalect = Test Script Language\r\n    Athalon = Rich Windows Client Test Runner (WPF)\r\n    AthaX = Console Test Runner\r\n    Athalight = Cloud Client (Silverlight)\r\n    Athanet = Cloud Services & Host (WCF)\r\n    Athabot = Agent (a vague term for any unique component of Atha in the Cloud. e.g. a Language Runner, a Language Service, etc.)\r\n\r\nTechnology:\r\n    .NET 4.0 (C#, WPF, WCF)\r\n    Silverlight 5\r\n    DLR 1.1.2\r\n    Reactive Extensions for .NET 1.0\r\n    Async CTP 3.0\r\n    IronPython 2.7 (.NET embedded script engine)\r\n    IronRuby 1.0 (.NET embedded script engine)\r\n    PowerShell 6.1 (.NET embedded script engine)\r\n    RazorEngine 2.1 (.NET embedded script engine)\r\n    Unity 2.1.5\r\n    Prism 4.0",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Currently&#58; Atha allows the user to write automated tests in the scripting languages IronPython, IronRuby, PowerShell, and Razor and to run those tests via a Console program &#40;called &#34;AthaX&#34;&#41;, a WPF Rich-Client Windows application &#40;called &#34;Athalon&#34;&#41;, or a Web Browser-Based Silverlight application &#40;called &#34;Athalight&#34;&#41;.<br /><br />The goal of this project is to provide a simple means of acceptance and regression testing delivered on top of the Microsoft technology stack &#40;although future versions may support non-Microsoft testing&#41;.<br /><br />Atha was derived from the initial alpha-version releases of the E.S.W.A.T. project &#40;Even Simpler Web&#47;Windows Acceptance Testing&#41; to build on the lessons learned. The Atha name stands for &#34;Acceptance Testing Heuristics Automation&#34;.<br /><br />Atha Terminology&#58;<br />    Athaverse &#61; The Entire Atha System<br />    Athamite &#61; User<br />    Athalect &#61; Test Script Language<br />    Athalon &#61; Rich Windows Client Test Runner &#40;WPF&#41;<br />    AthaX &#61; Console Test Runner<br />    Athalight &#61; Cloud Client &#40;Silverlight&#41;<br />    Athanet &#61; Cloud Services &#38; Host &#40;WCF&#41;<br />    Athabot &#61; Agent &#40;a vague term for any unique component of Atha in the Cloud. e.g. a Language Runner, a Language Service, etc.&#41;<br /><br />Technology&#58;<br />    .NET 4.0 &#40;C&#35;, WPF, WCF&#41;<br />    Silverlight 5<br />    DLR 1.1.2<br />    Reactive Extensions for .NET 1.0<br />    Async CTP 3.0<br />    IronPython 2.7 &#40;.NET embedded script engine&#41;<br />    IronRuby 1.0 &#40;.NET embedded script engine&#41;<br />    PowerShell 6.1 &#40;.NET embedded script engine&#41;<br />    RazorEngine 2.1 &#40;.NET embedded script engine&#41;<br />    Unity 2.1.5<br />    Prism 4.0</div><div class=\"ClearBoth\"></div>",
  "TagList": "acceptance testing,unit testing,testing,TDD,integration test,system test,integration testing,system testing,acceptance test,unit test,unit tests,acceptance tests,integration tests,ironpython,ironruby,razor,test driven design,athaverse,athalite,athanet,athalon,athamite,",
  "LastEdited": "2011-12-02T10:45:52.687-08:00"
}
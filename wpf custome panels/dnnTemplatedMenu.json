{
  "ProjectName": "dnnTemplatedMenu",
  "Title": "DNN Platform Templated (Mega-)Menu Provider",
  "Description": "A derivative of the built-in DotNetNuke DNNMenu navigation provider, allowing for templated custom menu panels.  ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>DNN Platform Templated (Mega-)Menu Navigation Provider</h1>\rMore details about this project may be found on <a href=\"http://brandonhaynes.org\">my blog</a>.  <br />\n<h2>Description</h2>\rA derivative of the built-in DotNetNuke DNNMenu navigation provider, allowing for templated custom menu panels.  <br />\n<h2>Goals</h2>\r<ul><li>Allow website administrators to select from one or more pre-defined menu templates for any page</li>\n<li>Allow templates to be deployed at the installation, portal, and skin level</li>\n<li>Allow specification of both rendered HTML and CSS file attachment on a per-page basis</li>\n<li>Allow templates to be fully search engine friendly and utilize modern XHTML and CSS design</li>\n<li>Rely on default DNNMenu implementation for all other behavior</li>\n<li>Require no core changes and utilize only existing DotNetNuke extension points</li></ul>\n\n<h2>Background</h2>\r\nThe <a href=\"http://www.dotnetnuke.com\">DotNetNuke content management system</a> is a mature, robust, and widely-adopted web application framework.  While the framework allows for the use of myriad menu systems (through the application of the provider pattern), to date there is no way to effectuate per-page templated (&quot;mega&quot;) menus.<br /><br />This project attempts to bridge that gap by extending the DotNetNuke-default DNNMenu system to render custom templates in place of any node in the menu hierarchy.  These templates are easy to create and extend, and allow for a wide variety of final user experiences.  Several such templates are included out-of-the-box, demonstrating the flexibility of this provider extension.  For maximum flexibility, templates may be deployed by a host across an entire installation, provided as a part of a skinning package, or deployed on a per-portal basis.<br />\n<h4>What this project is...</h4>\rThis project is a derivative of the popular and DotNetNuke-included DNNMenu system included with the <a href=\"http://www.codeplex.com/dnnwebcontrols\">DotNetNuke Webcontrols</a> project.  All the functionality present in that menu system may be utilized by using this provider.<br />\n<h4>What this project is not...</h4>\rThis project is NOT a new menu system for DotNetNuke.  It merely extends a small part of the functionality that already exists in the DNNMenu system.  Although it is very likely that this method may be used to extend other menu providers (I have already verified this with the <a href=\"http://www.telerik.com/products/aspnet-ajax/menu.aspx\">Telerik&#39;s RadMenu</a>), it does not yet do so.<br /><br />If any developer wishes to extend the method used herein to any other popular DotNetNuke navigation provider and would be interested in donating the code to the project, it would be greatly appreciated.<br />\n<h2>Installation instructions</h2>\r\nThis provider is installed just as any other module or provider through the Host-&gt;Modules menu item.  Note that the provider requires DotNetNuke version 5.0.1 or greater; ensure that your installation meets this minimum requirement before proceeding.<br />\n<h4>To install:</h4>\r<ol><li>Log in as a host user</li>\n<li>Install the TemplatedDNNMenuNavigationProvider install package,</li>\n<li>Optionally install the Templated MinimalExtropy skin package, or any other skin configured to utilized the templated provider,</li>\n<li>Change a page (or site) skin to use a skin that utilizes the templated provider.  </li></ol>\n\n<h2>Configuration and Usage</h2>\r\n<ul><li>Navigate to the settings for the page that is the root of the menu you wish to template (e.g. the Admin page).</li>\n<li>In the Advanced-&gt;Page Header Tags textbox, enter the string:</li></ul>\n<div style=\"color:Black;background-color:White;\"><pre>\r\n                <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate&quot; content=&quot;</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div><ul><li>Return to the page you specified to use the template skin, and note that the tagged menu is now using the default template (which is not that attractive until the pages have been structured into a better hierarchy).</li>\n<li>The default template displays children in a large font; grandchildren are in a normal font.  You’ll have to use the Admin-&gt;Tabs page to rearrange some tabs to see this behavior.  For example, in one of the screenshots I moved the Tabs page to be under the “Web Administration” tab.</li></ul>\n <br />The default template is located at /Providers/NavigationProviders/DNNTemplatedMenuNavigationProvider/Default.ascx.  You can specify an alternate template by adding its name to the content portion of the meta tag; by way of example, a tag that reads as belowwill use the Descriptions.ascx template, which displays a page’s description (if any) underneath its link.  <br /><div style=\"color:Black;background-color:White;\"><pre>\r\n                <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">Descriptions</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div>Skin designers can deploy their own templates; these may be accessed via a tag of the form:<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n                <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">skin:[TemplateName]</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div>Similarly, a host may provide a portal-specific template which may be accessed via:<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n                <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">portal:[TemplateName]</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div>Finally, the templates generally render highly similar markup (a nested hierarchy of ULs) and are differentiated primarily by CSS.  A template CSS can be specified through another meta tag, formatted as:<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n                <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuCss</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">CssFile</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div>Like the template, a “portal:” or “skin:” prefix may be used; if none are specified the css is drawn from the provider directory.  The second screenshot below uses the “wide” css template.<br /> <br />So, to reproduce the screenshots, the first uses the following metadata:<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n                <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate&quot; content=&quot;</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div>And the second uses:<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n                <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">Heading</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\n                <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuCss</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">Wide</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div><br />All other modifications required to generate a menu similar to those displayed herein are normal DotNetNuke configuration functions, such as page image selection, descriptions, hierarchy adjustments, and so on. <br />\n<h2>Templates Included in this Distribution</h2>\r\n<h3>Default Template</h3>\r<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate&quot; content=&quot;</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div>The default template is designed to display a page&#39;s children as headings and grandchildren as subheadings.  Subheadings are organized into two columns.  If present, the page&#39;s image is displayed alongside the page name.<br /><br /><a href=\"http&#58;&#47;&#47;blogs.law.harvard.edu&#47;brandonhaynes&#47;files&#47;2009&#47;04&#47;dnnmegamenunavigationprovider.png\"><img src=\"/projects/dnnTemplatedMenu/f30755f0-39dc-4051-9d34-e02b69482bbe\" alt=\"Default&#32;Template&#32;Screenshot\" title=\"Default&#32;Template&#32;Screenshot\" /></a><br />\n<h3>Descriptions Template</h3>\r<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">Descriptions</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div>This template renders identically to the default template, and additionally includes the page&#39;s description (if any) below the main menu headings.<br /><br /><a href=\"http&#58;&#47;&#47;blogs.law.harvard.edu&#47;brandonhaynes&#47;files&#47;2009&#47;04&#47;dnnmegamenunavigationproviderdescriptionssmaller.png\"><img src=\"/projects/dnnTemplatedMenu/075b5f5b-90d8-4116-b2c3-84c2d23e72f4\" alt=\"Descriptions&#32;Template&#32;Screenshot\" title=\"Descriptions&#32;Template&#32;Screenshot\" /></a><br />\n<h3>Wide</h3>\r<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate&quot; content=&quot;</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuCss</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">Wide</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div>This template displays a node&#39;s children as column headings, and grandchildren as subheadings organized underneath.  <br /><br /><a href=\"http&#58;&#47;&#47;blogs.law.harvard.edu&#47;brandonhaynes&#47;files&#47;2009&#47;04&#47;dnnmegamenunavigationproviderwide.png\"><img src=\"/projects/dnnTemplatedMenu/b4551ced-d255-4e8d-bd3a-fe52bd4e321e\" alt=\"Default&#32;Template&#32;Screenshot\" title=\"Default&#32;Template&#32;Screenshot\" /></a><br />\n<h3>Heading</h3>\r<div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuTemplate</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">Heading</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">meta</span> <span style=\"color:Red;\">name</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">menuCss</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">content</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">Wide</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>)\r\n</pre></div>This template includes a configurable catchline at the top of the panel, and may be styled vertically or &quot;wide.&quot;<br /><br /><a href=\"http&#58;&#47;&#47;blogs.law.harvard.edu&#47;brandonhaynes&#47;files&#47;2009&#47;04&#47;dnnmegamenunavigationproviderwide.png\"><img src=\"/projects/dnnTemplatedMenu/595d386e-2516-4cda-8e1b-553937ecac98\" alt=\"Heading&#32;Template&#32;Screenshot\" title=\"Heading&#32;Template&#32;Screenshot\" /></a><br />\n<h2>I Want That on My Skin!</h2>\r\nIt&#39;s easy.  Instantiate an Admin/Skins/Nav.ascx control as:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n&lt;%@ Register TagPrefix=&quot;dnn&quot; TagName=&quot;NAV&quot; Src=&quot;~/Admin/Skins/Nav.ascx&quot; %&gt;\n\n  ...\n\n  <span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">dnn</span><span style=\"color:Blue;\">:</span><span style=\"color:#A31515;\">NAV</span> <span style=\"color:Red;\">runat</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">server</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">id</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">dnnNAV</span><span style=\"color:Black;\">&quot;</span>  <span style=\"color:Red;\">ProviderName</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">TemplatedDNNMenuNavigationProvider</span><span style=\"color:Black;\">&quot;</span> \n        <span style=\"color:Red;\">IndicateChildren</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">false</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Red;\">ControlOrientation</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">Horizontal</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\n\n  ...\r\n</pre></div><br />You can include any or all of the properties available on the DotNetNuke Nav control.  The templated menu provider does not directly use any of these; they are passed as-is to the underlying DNNMenu provider.  That&#39;s it! <br />\n<h2>Feedback, Reviews, and Ratings Appreciated!</h2>\rFeedback about your experiences is needed, and <u>greatly</u> appreciated!</div><div class=\"ClearBoth\"></div>",
  "TagList": "DotNetNuke,DotNetNuke Skins,DotNetNuke®,menu,Providers,provider,DotNetNuke Module,UI,MegaMenu,Template,Templating,DNN,like it,",
  "LastEdited": "2014-04-23T13:14:58.513-07:00"
}
{
  "ProjectName": "DropDownButtonLib",
  "Title": "DropDownButtonLib",
  "Description": "This project is all about drop down button elements and their usage in a .Net WPF/MVVM scenario.",
  "MovedLink": "https://github.com/Dirkster99/DropDownButtonLib",
  "HomeWiki": "<div class=\"wikidoc\"><b>DropDownButtonLib</b><br /><br />The <b>DropDownButtonLib</b> project supplies drop down controls that are based on a button. This project is based on the drop down control contained in the <a href=\"https://dropdownbuttonlib.codeplex.com/wikipage?title=Extended%20WPF%20Toolkit%e2%84%a2%20Community%20Edition%3ahttps%3a%2f%2fwpftoolkit.codeplex.com%2f&referringTitle=Home\">Extended WPF Toolkit&#8482; Community Edition&#58;https&#58;&#47;&#47;wpftoolkit.codeplex.com&#47;</a> from Xceed.<br /><br />This project includes some bugfixes to the original implementation and extends the original controls:\n<ul><li>DropDownButton, SplitButton</li></ul>\n<br />with:\n<ul><li>DropDownItemsButton, SplitItemsButton</li></ul>\n<br />controls. The original implementation (DropDownButton, SplitButton) can be used to drop down and interact with single drop down items, while the extended controls (DropDownItemsButton, SplittItemsButton) are based on an <b>ItemsControl</b> and can thus be with multiple drop down items (in a similar fashion as a <b>ComboBox</b> or <b>ListBox</b>).\n<hr />\n<br />The DropDown button shows a drop down element that gives users a way of editing something and confirming it with Cancel or OK (this works similar to a dialog but in a drop down scenario)<br /><img src=\"/projects/DropDownButtonLib/63d5163e-73d1-4961-968a-b570b8da7fbb\" alt=\"DropDownButton.png\" title=\"DropDownButton.png\" />\n<hr />\n<br />The Split button has a drop down section and a button.<br />The drop down element gives you a way of editing/selecting in a similar scenario as in the DropDownButton shown above, while the button itself can be used like a shortcut that refers to the last selected element.<br /><img src=\"/projects/DropDownButtonLib/99c5d724-e139-4bb8-884e-b7bd4832f81c\" alt=\"SplitButton.png\" title=\"SplitButton.png\" />\n<hr />\nThe DropDown button shows a drop down element which can be used to select one element out of many. This could also be implemented with the DropDownButton control but it is much easier with this control since it already contains an <b>ItemsControl</b> inside the drop down element.<br /><img src=\"/projects/DropDownButtonLib/c699c417-3e79-4ce2-8461-cd6abc1a4c0f\" alt=\"DropDownItemsButton.png\" title=\"DropDownItemsButton.png\" />\n<hr />\n<br />The Split button has a drop down section and a button.<br />The drop down element gives you a way of selecting from among many elements while the button itself can be used like a shortcut that refers to the last selected element.<br /><img src=\"/projects/DropDownButtonLib/91c9a5c2-5def-4cb3-be8f-b100452aca98\" alt=\"SplitItemsButton.png\" title=\"SplitItemsButton.png\" />\n<hr />\n<br />This is a screenshot of the MainWindow of the included Test Application. The complete implementation is MVVM compliant and all controls are fully themeable (look-less controls).<br /><img src=\"/projects/DropDownButtonLib/5d1cc7ea-e389-4b0d-a2a5-4e810dbb1046\" alt=\"MainTestWindow.png\" title=\"MainTestWindow.png\" /></div><div class=\"ClearBoth\"></div>",
  "TagList": "MVVM,WPF,.Net,",
  "LastEdited": "2014-06-24T11:20:01.983-07:00"
}
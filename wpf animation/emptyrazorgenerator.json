{
  "ProjectName": "emptyrazorgenerator",
  "Title": "Empty Razor Generator",
  "Description": "A stripped down single file generator powered by Razor. Similiar to other generators available with the exception that is an absolute minimal implmentation. It's easy to tweak and very flexible. Driven in part because I would love to see it on WPF/WP7/Silverlight.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />A stripped down single file generator powered by Razor. Similiar to other generators available with the exception that is an absolute minimal implmentation. It&#39;s easy to tweak and very flexible. Driven in part because I would love to see it on WPF&#47;WP7&#47;Silverlight.<br /><br />Oh, give credit where it&#39;s due: <br /><br />David Ebbo: the one who opened my eyes with a similiar project focused on helper methods for ASP.NET MVC3<br /><a href=\"http://visualstudiogallery.msdn.microsoft.com/1f6ec6ff-e89b-4c47-8e79-d2d68df894ec/\">http://visualstudiogallery.msdn.microsoft.com/1f6ec6ff-e89b-4c47-8e79-d2d68df894ec/</a><br /><br />Andrew Nurse: for his directions on how to leverage the base Razor engine.<br /><a href=\"http://vibrantcode.com/blog/2010/11/16/hosting-razor-outside-of-aspnet-revised-for-mvc3-rc.html\">http://vibrantcode.com/blog/2010/11/16/hosting-razor-outside-of-aspnet-revised-for-mvc3-rc.html</a><br />\n<h1>How to get started</h1>\rJust run the visual studio extension. Add &quot;EmptyRazorGenerator&quot; as a custom action on the file to run Razor against it.<br /><img src=\"/projects/emptyrazorgenerator/0c9acad8-4f76-4beb-89d5-461f1387bc67\" alt=\"settings.png\" title=\"settings.png\" /><br /><br />Then create your razor file. Make sure and specify the inherits attribute with you base class having the appropriate methods. <br /><img src=\"/projects/emptyrazorgenerator/7f37f36d-f5f2-479d-9867-7a16f5d8f063\" alt=\"source.png\" title=\"source.png\" /><br /><br />The results are there!<br /><img src=\"/projects/emptyrazorgenerator/b0266099-8dff-498e-8175-9c3462467eeb\" alt=\"results.png\" title=\"results.png\" /><br />\n<h2>Your base class.</h2>\rTo make Razor work, your base class needs three methods. Execute should be abstract as that is where your template will go.<br />Put your consumer logic in the WriteLiteral/Write methods. In my example, they just store in a string builder for later use.<br /><img src=\"/projects/emptyrazorgenerator/6b0b74e1-782c-4b1b-883c-4541ba1dc21a\" alt=\"base.png\" title=\"base.png\" /><br />\n<h2>Sample project</h2>\rVery quick sample project using the generator<br /><a href=\"/projects/emptyrazorgenerator/eb5c8cf2-2eb8-4e21-a16e-9fba19de4d7f\">Wpf.Razor.Views.zip</a></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2011-03-13T21:05:26.383-07:00"
}
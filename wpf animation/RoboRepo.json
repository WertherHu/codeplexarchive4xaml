{
  "ProjectName": "RoboRepo",
  "Title": "RoboRepo",
  "Description": "RoboRepo allows an admin to generate a summary of multiple Microsoft Robocopy logs, including appended log files. The summary data can be previewed before exporting to a raw CSV file for further processing in excel etc. ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><div class=wikidoc><strong>Project Description</strong><br>RoboRepo allows an admin to generate a summary of multiple Microsoft Robocopy logs, including appended log files. The summary data can be previewed before exporting to a raw CSV file for further processing in excel etc. <br><br><strong>Why RoboRepo?</strong><br>I needed a way to summaries the results of multiple Microsoft RoboCopy jobs that are run overnight. I couldn't find anything appropriate, so I had a go at writing one. I also took this as an opportunity to learn a bit about WPF and C#. <br><br><strong>How does it work</strong><br> The idea of this tool is simple. To generate a report summary for all the log files in a particular directory, do the follow :<br><br>1. Start RoboRepo.exe<br>2. Specify the path to the location of MicroSoft RoboCopy log files.<br>3. Click the &quot;Report&quot; button. RoboRepo will then processes the summary information for all the log files in the directory and present it in a preview table.<br>4. Use the cursor keys to step through each entry in the table and display any errors reported.<br><br>Below is an example screen shot from the tool (some data is obscured due to sensitivity) :<br><br><img title=roborepov2.JPG src=\"http://i3.codeplex.com/download?ProjectName=RoboRepo&DownloadId=146051\" alt=roborepov2.JPG><br><br>The source code for the CircularProgressBar usercontrol is closely based on the examples written by Sacha Barber (visit his excellent website <a href=\"http://sachabarber.net/\">http://sachabarber.net/<span>&nbsp;</span></a>)</div></div><div class=\"ClearBoth\"></div>",
  "TagList": "RoboCopy,WPF,BackgroundWorker,Circular Progress,",
  "LastEdited": "2010-08-26T15:43:09.437-07:00"
}
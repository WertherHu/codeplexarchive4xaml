{
  "ProjectName": "xnatweener",
  "Title": "XNA Tweener",
  "Description": "This is a library for XNA for doing animation movement - tweening. Can be used for movement, color changes, fades and whaterver you can dream up that has to be changed over time.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Latest News</h1>\r<b>January 24th, 2008:</b> <br />Added Vector2Tweener and Vector3Tweener for moving in more dimensions.<br />Added new PositionChanged event for better handling of updates.<br /><b>January 6th, 2008:</b> Updated release 1.0 with bugfix for bug #231<br />\n<h1>Project Description</h1>\rThis is a library for XNA for doing animation movement - tweening. Can be used for movement, color changes, fades and whaterver you can dream up that has to be changed over time.<br /><br />The XNA Tweener library exposes the Tweener class and 11 different easing equations for making advanced animation movement easy:<br /><br />      Linear<br />      Quadratic<br />      Cubic<br />      Quartic<br />      Quintic<br />      Sinusoidal<br />      Exponential<br />      Circular<br />      Elastic<br />      Back<br />      Bounce<br /><br />Each equation has functions for both easing in and out and both in and out, which gives you a full 31 different ways to tween. You can also provide your own tweening equations by passing a delegate to the Tweener class.<br /><br /><b>The included equations are all adaptions from the fabulous <a href=\"http://www.robertpenner.com/easing\">Easing framework for Flash/ActionScript made by Robert Penner</a>.</b><br /><br />The Tweener class tweens float values, so it is flexible and not tied to positioning. So you can easily tween for instance rotation or scale.<br /><br />Included is a demo project that shows how the library works.<br />\n<h1>Usage</h1>\r<ol><li>Create the Tweener</li></ol>\n<br /><pre>        Tweener tweener = new Tweener(0, Math.PI, TimeSpan.FromSeconds(2.0f), Bounce.EaseOut); \n        tweener.PositionChanged += delegate (float newRotation) { myRotation = newRotation } \n</pre><br />\n<ol><li>Update the Tweener on each frame and read the new position</li></ol>\n<br /><pre>        protected override void Update(GameTime gameTime)\n        {\n             ...\n             tweener.Update(gameTime);\n             ...\n        }\n</pre><br />\n<ol><li>When the tweener is finished you can react to the Ended event</li></ol>\n<br /><pre>\n        tweener.Ended += DoSomethingCrazy();\n</pre><br />\n<h1>Future development</h1>\r<ul><li>Make a 360 demo project</li>\n<li>Make tweener classes for Color structure and the all powerful PropertyTweener</li>\n<li>Make a tweening function to use the Curve class from XNA</li>\n<li>Looping</li></ul>\n\n<h1>Great stuff?</h1>\r\nIf you are using this library and want to encourage further deveolpment of it, or just show appreciation for the work that has been done - please consider making a <a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_xclick&amp;business=fehaar%40gosuman%2edk&amp;item_name=XNATweener&amp;no_shipping=0&amp;no_note=1&amp;tax=0&amp;currency_code=EUR&amp;lc=DK&amp;bn=PP%2dDonationsBF&amp;charset=UTF%2d8\">donation</a> to the project.<br /><br />You can also just post comments telling me how much the library rocks/sucks. Suggestions for future directions of the project, and of course code is also appreciated - it shows that you care for it!<br /><br />If you make great games with it, please tell me and I will post it here.<br />\n<h2>Have fun. Make cool games.</h2></div><div class=\"ClearBoth\"></div>",
  "TagList": "XNA,XNA Libraries,Animation,bDownload,bRated,",
  "LastEdited": "2008-01-24T14:29:26.163-08:00"
}
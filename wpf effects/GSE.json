{
  "ProjectName": "GSE",
  "Title": "Global Stock Exchange (Hobby Project)",
  "Description": "GSE is sort of a hobby project.  \r\nGlobal Stock Exchange has a rich dynamic UI. A number of concurrent multi-threaded actions are going on behind the scene.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p>Global Stock Exchange - Investment Banking (Hobby Project)</p>\r\n<p>Technologies: WPF, WCF, DevExpress, Prism, Unity, MEF, MVVM, EF, MS SQL Server</p>\r\n<p>ScreenShots:&nbsp;<a href=\"http://goo.gl/Tpu6V\" target=\"_blank\">http://goo.gl/Tpu6V</a></p>\r\n<p>DEMO:&nbsp;<a href=\"http://www.youtube.com/watch?v=IxZYzh9mBwg\">http://www.youtube.com/watch?v=IxZYzh9mBwg</a></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:10pt\">Global Stock Exchange (GSE) is a dashboard/analyzer for real-time stock data (dummy) as well as a basic Fixed Income Calculator.&nbsp;</span></p>\r\n<p><strong><span style=\"font-size:10pt\">Practices:</span></strong></p>\r\n<ul>\r\n<li><span style=\"font-size:10pt\">Design and develop the entire application from scratch with\r\n<strong>SOA, CAB (Composite Application Block), MVVM/MVP.</strong></span> </li><li><span style=\"font-size:10pt\">Extensive use of <strong>DevExpress (DxTiles, DxGrid, DxChart, input controls)\r\n</strong>and<strong> WPF</strong> controls, styles, triggers, dependency/attached properties, markup extension, 2D graphics, user control, data-control-item templates and animation to create a soothing user experience.\r\n</span></li></ul>\r\n<ul>\r\n<li><span style=\"font-size:10pt\">Developed numerous <strong>multithreaded</strong> (UI-Worker-TPL-lock/Non-lock) messaging with the help of\r\n<strong>MVVM, Action delegate, Predicate, non-blocking UI </strong>and<strong> command-data binding.</strong></span>\r\n</li><li><span style=\"font-size:10pt\">Heavy use of <strong>LINQ to Object</strong>, <strong>\r\nLINQ to Entity</strong> Framework to take advantage of <strong>query extension/method group, implicit typed variable, object initializer, anonymous types-methods, lambda expressions, and extension method.</strong></span>\r\n</li><li><span style=\"font-size:10pt\">Design and develop <strong>WCF</strong> WsHTTP communication with\r\n<strong>AES symmetric</strong> (dynamic key exchange) encryption of critical message body.<strong>&nbsp;</strong></span>\r\n</li><li><span style=\"font-size:10pt\">Created Modules (directory loaded), Shell, Bootstrapper with the help of\r\n<strong>Prism</strong>, <strong>Unity</strong> and <strong>MEF</strong>. A good practice of dependency injection, inversion of control and AOP.<strong>&nbsp;</strong></span>\r\n</li><li><span style=\"font-size:10pt\">Developing (on-going) basic <strong>Fixed Income calculation</strong>, such as\r\n<strong>present value, future value, return, yield, bond pricing </strong>etc.<strong>&nbsp;</strong></span>\r\n</li></ul>\r\n<p><span style=\"font-size:10pt\"><br>\r\n</span></p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "LINQ,WPF,wcf,DEVEXPRESS,unity,Prism,EF4,",
  "LastEdited": "2012-11-02T08:08:01.657-07:00"
}
{
  "ProjectName": "PowerWPF",
  "Title": "PowerShell WPF Template",
  "Description": "A simple and ready to use PowerShell-Ready WPF project template. With PowerWPF, you can easely build WPF application with:\r\n\r\n- Asynchronous execution (no freezing of your GUI).\r\n- Execute PowerShell code or use embedded PowerShell script.\r\n- Create a single exe > easy to deploy.\r\n\r\nStart creating WPF application with PowerShell interaction now !",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>A PowerShell-Ready WPF project template by Antoine Habert of Nelite Software <a href=\"http://www.nelite.com\">http://www.nelite.com</a>, creator of PoshBoard <a href=\"http://www.poshboard.com\">http://www.poshboard.com</a></b><br /><br /><b>Project Description</b><br />this project started when colleagues writing PowerShell scripts asked me for a simple way to create PowerShell tools with a descent GUI that doesn&#39;t require high WPF or C# skills. They also wanted to use a visual designer to get a result. Other concerns was to prevent the freezing of the UI when launching long running scripts, and if possible to embbed all this in one single exe.<br /><br /><b>So here comes PowerWPF!</b><br /><br />Our goal is to ease the creation of WPF application for PowerShell people, that are <b>absolute beginners in WPF development</b>. We took care of all the PowerShell management functions (asynchronous calls, pipeline/runspace creation, etc...), leaving only the easiest way to call PowerShell engine and get its output. you just need to create your UI using Visual studio, either by drag n drop or by XAML code, add a few lines of C# code and you&#39;re done.<br />\n<ul><li><b>Calling PowerShell code and getting outputs is done with only 2/3 lines of C# code that a regular PowerShell user can understand quickly.</b> </li></ul>\n\n<ul><li><b>Low WPF/C# skills required</b>: You don&#39;t need to go very deep in WPF/C# development to create your GUI, call an internal script, use GUI element as reference for your code and update your UI.</li></ul>\n\n<ul><li><b>No freezing, responsive UI</b>: PowerWPF uses asynchronous calls to PowerShell, leaving your UI responsive even with long running script, by design.</li></ul>\n\n<ul><li><b>Fast, self-contained build</b>: build your application, and you get a <b>self-contained exe file</b> that you can share with anyone.</li></ul>\nIf you want to build quickly PowerShell based tools and discover the joy and ease of XAML GUI creation, PowerWPF is a pretty good start! tested and approved internally at Nelite with our IT experts. We think that XAML GUI development is really cool and easy to understand, enjoyable to design, we hope that PowerWPF will help you get started with PowerShell/WPF tools creation.<br /><br />We will publish a video shortly and how-to to help you get started.<br /><br /><img src=\"http://img856.imageshack.us/img856/3769/powerwpf.png\" /><br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "PowerShell,WPF,administration,",
  "LastEdited": "2011-07-22T05:31:01.217-07:00"
}
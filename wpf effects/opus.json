{
  "ProjectName": "opus",
  "Title": "Opus - Silverlight UI Framework",
  "Description": "The opus framework provides a simple way for creating UIs for Silverlight by leveraging your current MVVM structure. ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>About Opus Silverlight UI Framework</strong></p>\r\n<p>The Opus Silverlight UI Framework lets you add a few data annotations to your existing MVVM application ViewModels, and generate UI from the metadata. Here are some of the highlights:</p>\r\n<ul>\r\n<li>Basic Silverlight View generation from MetaData </li><li>WP7 UI Generation from MetaData </li><li>Ability to create your own custom views from metadata. </li><li>Built in validation helpers (WP7 coming soon) </li></ul>\r\n<p>See a quick over view at:&nbsp;<a href=\"http://indepthdev.com/2010/11/introducing-opus-silverlight-ui-framework-beta/\">http://indepthdev.com/2010/11/introducing-opus-silverlight-ui-framework-beta/</a></p>\r\n<p><strong>Why Use Opus?</strong></p>\r\n<p>I have worked on several very large scale Silverlight applications where you may have hundreds of views and viewmodels. With the scale of these applications I needed to create my UIs very fast to get an initial prototype and&nbsp;consistent&nbsp;interface\r\n between data entry screens. I took the best of these projects and started creating Opus. This allowed me to stick with the standards of a MVVM application but still have the flexibility to customize beyond my standard framework if needed. As with many business\r\n applications of that scale, you may have hundreds of controls that aren't all that exciting, so sometimes having to build a unique view every time is a little&nbsp;tedious.&nbsp;</p>\r\n<p>I will be providing some real world screenshots coming soon on how I have used this framework to take it way beyond the examples included in the project, so stay tuned.</p>\r\n<p><strong>Coming Soon</strong></p>\r\n<p>Since this is a beta, there are many features I have not included but will be releasing very soon as well as better documentation.</p>\r\n<ul>\r\n<li>AutoGenerate columns on DataGrid:\r\n<ul>\r\n<li>AutoGenerate comboboxes </li><li>AutoGenerate with StringFormat from metadata </li><li>AutoGenerate custom control columns </li></ul>\r\n</li><li>Create buttons on WP7 application bar </li><li>Validation on WP7 </li><li>More examples (custom views, custom input controls and other customization features)\r\n</li><li>A better looking GenericView for SL </li></ul>\r\n<p>&nbsp;</p>\r\n<p>Again, this is a beta but is functional from a basic standpoint.</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "Siliverlight,WPF,MVVM,Silverlight,code generation,",
  "LastEdited": "2011-03-08T14:19:52.613-08:00"
}
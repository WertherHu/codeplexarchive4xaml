{
  "ProjectName": "dx11experiments",
  "Title": "DirectX 11 Framework for Experimentation",
  "Description": "Basic Framework for DirectX 11 (without DXUT) containing basic stuffs like Text Rendering, Quad Render, Model Loading, basic Skinning animation, Shader framework (substitute for the effect API) and lots of random stuffs !!!",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Basic Framework for DirectX 11 &#40;without DXUT&#41; containing basic stuffs like Text Rendering, Quad Render, Model Loading, basic Skinning animation, Shader framework &#40;substitute for the effect API&#41; and lots of random stuffs &#33;&#33;&#33;<br />\n<h1>Purpose</h1>\r\nJust Learning, Experimenting and Sharing !!!<br />Some examples i want it to be fast, some i want to be beautiful and some i just want to work <br />\n<h1>Features</h1>\r\n<ul><li>Model Loader (Supports almost all commons Models used in games, except .fbx)</li>\n<li>Basic Skinning ( does not have Blending and smooth transition between animations YET )</li>\n<li>Supports all the node hierarchy used in 3D Modeling software (ataching a not animated gun to a bone is very simple) </li>\n<li>Text Rendering API (Using GDI to build the font and Instanceddraw to draw the words)</li>\n<li>Sprite Rendering</li>\n<li>Integrated Physx (Objects, Triggers ....)</li>\n<li>Lots of data structures to make the life easier (Manage Render States, Render Targets ...)</li>\n<li>Uses XNAMath (nothing to do with xna, just a dummy name) instead of D3DXMath</li></ul>\n\n<h1>Random Features </h1>\r\n<ul><li> Tessellation using Geometry Shader (Phong Tesselation), The tessellation process runs once and the result is streamed out to a buffer that is used for drawing.</li>\n<li> Skeleton of a particle system using Geometry Shader </li>\n<li> Very Simple HeightMap</li>\n<li> BMP loader (just 24 bits, not compressed).</li></ul>\n\n<h1>Future</h1>\r\n<ul><li>Finish the Particle System</li>\n<li>Add Blending and Smooth transition to the animation</li>\n<li>Implement Massive Bilboards using instancing</li>\n<li>Implement Displacement mapping using the Tessellator unit</li>\n<li>Everytime i found something cool i will try to implement !!!</li></ul>\n\n<h1>Dependencies</h1>\r\n<ul><li>C++ Boost Library http://www.boost.org/ (there is an installer that make life easier, only the basic of the lib is used, dont need to download everything)</li>\n<li>Assimp  http://assimp.sourceforge.net/</li>\n<li>NVIDIA Physx http://www.nvidia.com.br/object/physx<i>new</i>br.html </li>\n<li>ModelXML  http://modelxml.codeplex.com/ (Included in the project)</li></ul>\n<br /><b>CHECK THE CODE IN THE MERCURIAL REPO, SOURCE CODE SECTION</b><br /><br />EVERYONE THAT WANTS TO DO SOMETHING WITH DIRECTX 11 MUST JOIN THE PROJECT !!!!!!!! ;) <br />\n<h2>Others Projects From this author:</h2>\r\n<ul><li>Software Raytracing http://sourceforge.net/projects/learnraytracing/</li>\n<li>Software Render http://softrender.codeplex.com/</li>\n<li>Model Importer Exporter - ModelXML http://modelxml.codeplex.com/</li>\n<li>Ploobs Game Engine - http://ploobsengine.codeplex.com/</li></ul></div><div class=\"ClearBoth\"></div>",
  "TagList": "directx11,Framework,computer graphics,",
  "LastEdited": "2011-11-16T12:04:22.057-08:00"
}
{
  "ProjectName": "MVC4WPF",
  "Title": "MVC4WPF",
  "Description": "Hierarchical MVC automated development pattern for WPF based applications. That includes intergrated support for visual studio 2008",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h2>What is MVC4WPF?</h2>\r<table><tr><td> <img src=\"/projects/MVC4WPF/0a18add2-e738-403c-9d19-4cd159a2b625\" alt=\"View_icon_oneinch.png\" title=\"View_icon_oneinch.png\" /> </td><td> MVC4WPF is a software architectural pattern that provides an approach for building enterprise  applications in an efficient, highly flexible, and cost-effective manner. Broadly speaking, MVC4WPF is based on a hybrid of the MVC pattern and the PAC patterns, with modules built on MVC and controller parent-child relationships built on PAC relationships.   The result is a natural, hierarchical flow.  MVC4WPF provides flexible architecture but requires a disciplined implementation approach.  It also provides code automation for rapidly producing reliable &quot;plumbing&quot; code, allowing your developers to focus on requirements rather than reinventing solutions to old problems.  It also maintains the separation of roles provided by MVC to gain all the advantages of parallel development.</td></tr></table><br />\n<h2>How does MVC4WPF reduce total cost and development time?</h2>\r<table><tr><td> <img src=\"/projects/MVC4WPF/4c7c8f3a-831b-4266-ba79-8d06f4fcdae4\" alt=\"Model_icon_oneinch.png\" title=\"Model_icon_oneinch.png\" /> </td><td> MVC4WPF provides reliable code automation (creates up to 45% of your routine code), allowing you to focus on requirements rather than reinventing solutions to old problems. MVC4WPF&#39;s design pattern promotes the creation of software that is very easy to debug or update as your business needs change.  These qualities keep maintenance straightforward and cost low.  Total time of development can be reduced with development teams working in parallel, since the inherent MVC pattern promotes separation of roles.</td></tr></table><br />\n<h2>How is this different from classic Model-View-Controller designs?</h2>\r<table><tr><td> <img src=\"/projects/MVC4WPF/c61a42d5-7b0d-435d-b0c8-6e907d67ab81\" alt=\"Controller_icon_oneinch.png\" title=\"Controller_icon_oneinch.png\" /> </td><td> MVC4WPF provides an approach for building enterprise applications in an efficient, highly flexible, and cost-effective manner. MVC4WPF blends best-of-breed design patterns, using the MVC pattern for modules and PAC relationships for controller parent-child relationships.  The result is a natural, hierarchical flow.  While MVC4WPF reduces code complexity, allows for separation of roles, and promotes independent development in the way classic MVC does, it also provides additional advantages such as a natural hierarchical flow and a customizable code base.</td></tr></table><br />\n<h2>Where can I get more information about MVC4WPF?</h2>\r<table><tr><td> <img src=\"/projects/MVC4WPF/429ab20e-4b4b-499d-a58d-43c27611013e\" alt=\"model_contract_oneinch.png\" title=\"model_contract_oneinch.png\" /> </td><td> MVC4WPF documentation is available on our support site: <a href=\"http://www.mvc4wpf.com\">www.mvc4wpf.com</a>. This documentation includes a developer&#39;s guide and an architectural guide.  The developers guide, which is divided into two parts, shows examples of how the pattern has been used and how to extend it. In addition, we have built out a technical <a href=\"http://www.mvc4wpf.com/Pages/faqs\">FAQs</a> section for your reference.  If you have specific questions, you are welcome to participate in the MVC4WPF discussions here on CodePlex or contact the experts that created MVC4WPF directly at <a href=\"mailto:info@mvc4wpf.com\">info@mvc4wpf.com</a>. </td></tr></table></div><div class=\"ClearBoth\"></div>",
  "TagList": "MVC,WPF,",
  "LastEdited": "2009-12-10T10:41:14.623-08:00"
}
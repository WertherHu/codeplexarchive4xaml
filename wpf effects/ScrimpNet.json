{
  "ProjectName": "ScrimpNet",
  "Title": "C# Developer Utility Library",
  "Description": "Collection of helpful C# functions including zero-config rolling file logging, parameter validation, reflection & object construction, I18N country codes, MIME types, WCF self-hosting,  trees, strongly typed configuration, DateTime, I18N distance (Metric & English), Coordinate",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><img src=\"http://www.scrimpnet.com/images/title.gif\" /><br /><br /><table><tr><td><b>New!</b></td><td> Completely rewritten cryptography library that makes adding strong encryption to your applications extremely easy. see <a href=\"https://scrimpnet.codeplex.com/wikipage?title=Cryptography&referringTitle=Home\">Cryptography</a> for details</td></tr></table><br />\n<h1>Scrimp<i>Net</i>.com Developer Utility Library</h1>\r<h2><b>New</b> WCF Membership Provider!</h2>\rThis library extension creates a WCF wrapper around your ASP.Net membership provider.  You can use most any standard ASP.Net membership provider as your underlying security.  You can use this provider to easily build out web farms using a common web services security end point.  (This is a beta project seems to work, but we don&#39;t haven&#39;t deployed this into a production environment).  See <a href=\"https://scrimpnet.codeplex.com/wikipage?title=Security&referringTitle=Home\">Security</a> documentation for details.\n<h2>Project Description</h2>\r\nScrimpNet.Core is a library of miscellaneous utilities we have found to be useful in our real applications.  Of course we might have thrown in something cool just for fun.  Most of these classes and functions are nothing new or reflect some radical new thought. They are just helper functions and libraries which we found helpful from time to time.<br /><br />We have tried to organize the urchins in the same categories as the .Net System and Microsoft namespaces.  Of course the squirrely things might end up anywhere. We didn&#39;t create and collect ScrimpNet.Core as some science experiment or a demo or some code mash thing.  We are not in the business of building framework libraries or tools.  This library is in actual production systems. Thus as we find bugs (and yes there are some) or we find ways to refactor, we&#39;ll fix, fold, spindle, remove, mutilate, morph, or simply change what we want to.  You are free to use the library but by doing so, you acknowledge the fact that we don&#39;t owe anything to you. <br /><br />You are looking at a library, not especially a framework.  That means the classes and functions here were not necessarily built for extensibility.  You might find places in the code where we think we might find it helpful to extend.  So we don&#39;t forget where they were we marked those places with the //EXTENSION comment flag.<br /><br />ScrimpNet.Core is currently targeted for .Net 3.5 or better.  We have tried to keep the library as generic as possible but we do use Extensions and the newer thread locking mechanisms.<br /><br />We hope you find these functions will help you handle some tedious tasks faster so you can focus on delivering excellent code and solving real problems.<br /><br />Steve Powell<br /><i>The ScrimpNet.com Team</i>\n<h2>Library Summary</h2>\r<table><tr><th>Namespace</th><th>Summary</th><th>Examples and Notes</th></tr>\n<tr><td>Collections</td><td>Handles things like data structures and groups of objects</td><td>AsyncBuffer - a multi-threaded FIFO buffer. Used in our logging subsystem but can be used anytime you need out of band buffering. Tree - supports traditional tree operations</td></tr>\n<tr><td>Configuration</td><td>Retrieve strong typed values from  .config</td><td>Robust methods and patterns for grabbing and using values from configuration files</td></tr>\n<tr><td><a href=\"https://scrimpnet.codeplex.com/wikipage?title=Cryptography&referringTitle=Home\">Cryptography</a></td><td>Encode &amp; decode objects using internal and external keys</td><td>Decrypt, Encrypt,Hash (Rijndael with 256 bit key)</td></tr>\n<tr><td>Diagnostics</td><td>A log wrapper to easily integrate logging and tracing</td><td>A zero-config (no configuration necessary), out-of-band, high speed rolling file name logging facade.  Stand-alone or integrates with log4Net, EntLib.Logging,  .Net tracing, and NLog.</td></tr>\n<tr><td>i18N</td><td>Utilities around dealing with various kinds of spatial, globalization, and internationalization</td><td>Coordinate - mathematical, comparison, and ToString(). Culture Codes enumeration - RFC1766 collection. DistanceSpan - operations and conversions around distance.  Supports both Metric and English systems. </td></tr>\n<tr><td>IO</td><td>Deals with streams and file based operations</td><td>ToBytes - convert an object into byte array.  CleanFileName - remove operating system invalid characters from a string. StreamToBytes - convert any stream into byte array.  BytesToStream - convert array of bytes to stream</td></tr>\n<tr><td>Net</td><td>Operations relating to network protocols</td><td>MIME - supports MIME types, determining MIME types from file extensions, getting an icon for a particular MIME type, etc.  Very helpful when we were receiving files from callers or streaming a requested file back to a caller.</td></tr>\n<tr><td>Reflection</td><td>Interrogates runtime environment</td><td>AssemblyVersion - retrieves values stored typically stored in the AssemblyInfo.cs file of projects.  ProviderFactory - load and instantiate classes from file system.  Resources - open/read files embedded in an assembly</td></tr>\n<tr><td>Presentation</td><td>Light weight helper library to easily incorporate common MVVM functionality into your WPF ViewModels including Command management, IDataErrorInfo, IPropertyChanged, and IDisposable. (ScrimpNet.Presentation.dll)</td></tr>\n<tr><td>Serialization</td><td>Lightweight wrappers around common conversion patterns</td><td> Supports JSON, SOAP and XML.  Includes Extension overloads</td></tr>\n<tr><td>ServiceModel</td><td>Patterns around WCF</td><td>Self hosting library particularly useful for short console applications or exercising your services without IIS.  Great for development and testing scenarios.</td></tr>\n<tr><td>Text</td><td>String construction and manipulation</td><td>Code snippets for things such as Left, Right, MaskRight/MaskLeft (for partial masking such as SSN and CreditCard</td></tr>\n<tr><td>Web</td><td>Web centric helper methods</td><td>RequestToString - build a string of the complete HTTP Request.  Used especially for logging and debugging.</td></tr>\n<tr><td>(core)</td><td>Contains  functionality that doesn&#39;t fall within other namespaces. </td><td>Also contains all extension classes (thus if you are using down level frameworks you can exclude all extensions easily).</td></tr>\n<tr><td>Validation</td><td>Methods to validate data, particularly used in parameter validation areas</td><td>Guard.* validates data and throws an exception if the validation fails. Check.* validates data and returns boolean.  Especially helpful when validating DateTime and floating point (single, double, float) values.  These classes are modeled after .Net and NUnit assertions and are heavily overloaded while  supporting .Net native types.  Some sample validations are: LessThan/GreaterThan, Between/NotBetween, MatchesPattern/MatchesWildCard, Equal/NotEqual, Null/NotNull, \tEmptyGuid/NotEmptyGuid, EMailValid</td></tr>\n<tr><td>Transform</td><td>Modeled after .Net Convert methods</td><td>Used often in configuration and ADO operations.  Supports default values on conversion failure. Cool feature is that it supports Boolean couplets of {Yes,No},{ On, Off}, {true, false},  and {0,1} which makes our configurations less fragile. Often includes more detailed conversion error information than .Net.</td></tr>\n<tr><td>Utils.Date</td><td>A DateTime library</td><td>Manipulates days (e.g. DayBegin, DayEnd) weeks, months, quarters, fiscal (e.g. Quarter, MonthNumber) and calendar years.  Key function is SqlDate that coverts .Net Datetime value into something safe for Microsoft SQLServer.</td></tr>\n<tr><td>Extensions</td><td>Wrappers around existing library methods.</td><td>Commonly used ones are:<i>&lt;StringBuilder&gt;</i>.AppendLine,<i>&lt;Exception&gt;</i>.Expand,<i>&lt;IDataRecord&gt;</i>.GetValue,<i>&lt;DateTime&gt;</i>.SqlDate,<i>object&gt;</i>.ConvertTo</td></tr>\n<tr><td>CoreConfig </td><td> </td><td>All configuration that is specific to the ScrimpNet.Core classes</td></tr></table><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "WCF,WCF Hosts,WCF Tools,Coordinate Systems,Coordinates,Cryptography,Encryption,MIME,Culture,RFC1766,Reflection,Serialization,validation,validator,datetime,Date & Time,Configuration,Config,Utilities,Utility Library,RETURN 2010,WPF,MVVM,Utility,WCF Provider,Custom Provider,WCF Security,Library,Rijndael,SHA256,Base64,HMAC,",
  "LastEdited": "2011-09-04T18:51:02.607-07:00"
}
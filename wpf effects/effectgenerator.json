{
  "ProjectName": "effectgenerator",
  "Title": "XNA Effect Generator",
  "Description": "A Visual Studio custom tool which generates a code-behind file for High Level Shader Language Effect Files.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h2>Looking for the <a href=\"https://effectgenerator.codeplex.com/wikipage?title=User%20Manual&referringTitle=Home\">User Manual</a>? Or <a href=\"http://www.codeplex.com/effectgenerator/download?DownloadId=7932\">Sample Code</a>?</h2>\r\n<h2>What is Effect Generator?</h2>\rEffect Generator is a Custom Tool plug-in for Visual Studio which generates C# classes from Direct3D Effect (.fx) files for use with the <a href=\"http://msdn.microsoft.com/xna\">Microsoft XNA Framework</a>. The generated class is a type-safe wrapper around the effect file&#39;s parameters.<br />\n<h2>Why should I use it?</h2>\rThe XNA Content Pipeline is great. It greatly simplifies the process for importing and loading models, textures, and other content. Unfortunately, it is optimized for loading data, not code. Effect files are essentially code, so an alternative approach could provide additional benifits.<br /><br />Like the XNA Content Pipeline, Effect Generator compiles your .fx files at build time, reducing game load times. Additionally, Effect Generator further simplifies run-time loading and effect parameterization. Effect Generator accomplishes this by creating a type-safe class that mimics the implementation of <i>Microsoft.Xna.Framework.Graphics.BasicEffect</i>.<br /><br />Compare these functionally equivilant blocks of code:<br /><br /><b>XNA Content Pipeline</b><br /><pre>\nEffect myEffect;\nEffectParameter worldViewProjectionParam;\nEffectParameter ambientParam;\nEffectParameter textureParam;\n\nvoid LoadEffect(ContentManager contentManager)\n{\n    myEfect = contentManager.Load&lt;Effect&gt;(&quot;MyEffect&quot;);\n    worldViewProjectionParam = myEffect.Parameters[&quot;WorldViewProjection&quot;];\n    ambientParam = myEffect.Parameters[&quot;Ambient&quot;];\n    textureParam = myEffect.Parameters[&quot;Texture&quot;];\n}\n\nvoid ParameterizeEffect(Matrix worldViewProjection, Vector4 ambient, Texture2D texture)\n{\n    worldViewProjectionParam.SetValue(worldViewProjection);\n    ambientParam.SetValue(ambient);\n    textureParam.SetValue(texture);\n}\n</pre><br /><br /><b>Effect Generator</b><br /><pre>\nMyEffect myEffect;\n\nvoid LoadEffect(GraphicsDevice device)\n{\n    myEfect = new MyEffect(device);\n}\n\nvoid ParameterizeEffect(Matrix worldViewProjection, Vector4 ambient, Texture2D texture)\n{\n    myEffect.WorldViewProjection = worldViewProjection;\n    myEffect.Ambient = ambient;\n    myEffect.Texture = texture;\n}\n</pre><br />\n<h2>How do I get started?</h2>\rDownload and run the <a href=\"http://www.codeplex.com/effectgenerator/Release/ProjectReleases.aspx\">Installer</a><br />And read the <a href=\"https://effectgenerator.codeplex.com/wikipage?title=User%20Manual&referringTitle=Home\">User Manual</a></div><div class=\"ClearBoth\"></div>",
  "TagList": "XNA,.fx,effect file,custom tool,generator,XNA Effects,",
  "LastEdited": "2007-03-07T00:42:38.057-08:00"
}
{
  "ProjectName": "nbox",
  "Title": "NBox",
  "Description": "This is a tool for packing several assemblies or other files into one executable file. Build automation supported. You can specify configuration XML file and run this utility to build project.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />This is a tool for packing several assemblies or other files into one executable file. Build automation supported. You can specify configuration XML file and run this utility to build project.<br />\n<h1>PROJECT MOVED TO GITHUB ! <a href=\"https://github.com/elw00d/nbox\">https://github.com/elw00d/nbox</a></h1>\r\n<b>Introduction</b><br /><br />NBox is the utility which can help to simplify deployment of your Application, minimize load time when it starts at<br />executing, minimize the cumulative size of Application and hide your Application code from quick decompilation<br />by tools like Reflector.<br /><br />You can merge several dependency assemblies into a one executable file. Result assembly will be 100% managed.<br />Also you can embed any file into result assembly. It can be a native module (dll), or configuration files<br />(config, xml), or any file that you need. This content of result assembly will be extracted on loading time into<br />directory that you can specify.<br /><br />You can select the kind of register your dependency. There are three ways to do it :\n<ul><li>File (assembly will attempt to load dependency from separate packed file, usually placed near than result assembly)</li>\n<li>Resource (assembly will be loaded from resources)</li>\n<li>Overlay (in build time the packed dependency assembly will be appended to the end of result assembly file)</li>\n<li>App.config file. If you have a configuration file, you can specify it explicitly. And NBox will unpack and configure your application during starting</li></ul>\n  even if executable file will be renamed.<br /><br />You can straightforward automate the build process because there are no command line arguments set,<br />there are only NBox.exe and your configuration file.<br /><br />NBox is compatible with many obfuscation tools like {smartassembly}. If you use tools like that, you can make the 2-level obfuscation : before NBoxing and<br />after them. Result assembly will be 100% managed, compressed and obfuscated.<br /><br />NBox uses LZMA algorithm applied in popular archive manager 7-zip (http://7-zip.org) so it produces the<br />minimal size of output assemblies and provides high decompression speed at run time.<br /></div><div class=\"ClearBoth\"></div>",
  "TagList": ".NET,LZMA,Zip,Build,Deployment,",
  "LastEdited": "2017-09-28T07:30:06.683-07:00"
}
{
  "ProjectName": "AStarPathFindingApp",
  "Title": "AStar Sample WPF Application by Ben Scharbach",
  "Description": "The A* Pathfinding component contains an A* Manager, with three A* path finding engines, allowing for 3 simultaneous path searches on PC and XBOX. - By Ben",
  "MovedLink": "https://github.com/TemporalWars/AStarPathfinding",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<h4><strong>AStar Pathfinding WPF Sample Application</strong></h4>\r\n<p><span style=\"text-decoration:underline; color:#0000ff\"><strong><a href=\"http://temporalwars.com/Products/AStarPathfindingSample\">http://temporalwars.com/Products/AStarPathfindingSample</a></strong></span></p>\r\n<p>I started the FREE game engine in 2008, as a silly side-project to learn the XNA framework. However, the longer I worked on the project, the more I wanted to accomplish.&nbsp;&nbsp; For example, the A* pathfinding portion of the project become a HUGE piece\r\n of the R.T.S. game.&nbsp; I used many sources of information, from online how-to articles and technical books, to piece together the best of A* pathfinding algorithm for the PC and XBOX-360.</p>\r\n<p>Now 2012, I have decided to upload my sample WPF application, which shows how to use the A* Pathfinding dll in one of your own projects!&nbsp; Be it a PC project, Xbox XNA project or a Windows Phone project, you can now use this assembly, as shown in my\r\n sample.&nbsp;</p>\r\n<p><br>\r\n<img title=\"AStarEngineSample_100x100.jpg\" src=\"http://i3.codeplex.com/Download?ProjectName=astarpathfindingapp&DownloadId=476944\" alt=\"AStarEngineSample_100x100.jpg\"></p>\r\n<p><strong>See My YouTube Videos :)<br>\r\n</strong></p>\r\n<ol>\r\n<li><a href=\"https://www.youtube.com/user/berben11/\">My YouTube Channel</a> </li></ol>\r\n<p><br>\r\n<strong>Description</strong><br>\r\n<br>\r\nThis <span style=\"color:#ff0000\">A* XNA</span> Component is designed from the ground up, to take full advantage of the XBox's and PC threading capabilities. The A* component contains an A* Manager, with three A* path finding engines, allowing for 3 simultaneous\r\n path searches, while also maintaining excellent performance and low G.C.(Garbage Collection).<br>\r\n<br>\r\nPerformance is achieved and maintained, due to key concepts incorporated into the A* component, like the 'Cheap List'<a href=\"/wikipage?title=3&referringTitle=Home\">3</a> methology. Also the 'Closed List'<a href=\"/wikipage?title=4&referringTitle=Home\">4</a>\r\n is eliminated all together, since an array with Enum types are used to quickly update the status of A* nodes inside the core A* algorithm.<br>\r\n<br>\r\nThe <span style=\"color:#ff0000\">A* XNA</span> component also contains the A<strong>-</strong>Graph, which allows for directly tracking blocked/unblocked nodes; a vital part of the pathfinding formula. Furthermore, the A-Graph accepts point-value setting, to\r\n influence different parts of the map; for example, higher point-values represent rough terrain, and lower point-values represent passable terrain. The A<strong>-</strong>Graph is automatically used in the core A algorithm, influencing the overall pathfinding\r\n search results.<br>\r\n<br>\r\nFor License or General Questions: melben02@yahoo.com or benscharbach@temporalwars.com<br>\r\n<br>\r\n<span style=\"color:#008000\"><strong>What you Get!</strong></span><br>\r\n<br>\r\nThe download zip file contains the 'AStarComponent.dll' assembly, designed to be usable in any other XNA project for the PC and Xbox-360. You can also use the bindable component in other types of projects, like simple WPF (Windows Presentation Format) projects\r\n for school demonstrations or for learning the A* algorithm. The 'AStarComponent.dll' assembly is designed for extreme performance, and was tested 1000 of hours on the Xbox-360 and PC.<br>\r\n<br>\r\nThe download zip also contains a simple WPF 'AStarSampleApp', shown in the picture above, which shows you how to use the AStar component. With this sample application, you can study the C# code to see how to call and create A* solution paths in seconds. The\r\n code shows how to start bind the assembly, initialize the iternal A* graph, and make &quot;Find-Path&quot; solution paths in a matter of seconds! Feel free to use the code in any project you desire.<br>\r\n<br>\r\n<span style=\"color:#ff0000\"><strong>Main Features</strong></span><br>\r\n<br>\r\nA* Manager, cordinating requests internally with the A* engines. 3-Thread engine design, using all 3 processors on the Xbox-360. Designed to maintain a low GC (Garbage Collection). Optimized A* engine using concepts like the 'Cheap List' to reduce search times.</p>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>A* Graph, tracking Blocked/Unblocked path nodes </li><li>Designed to run on Windows and Xbox-360 platforms </li><li>Can be 'Late-Bind' to the TemporalWars 3D engine </li></ul>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "game engine,.NET,game,XNA,Framework,Components,graph,Windows,WPF,wcf,patterns &amp; practices,FREE,strategy,XBox360,sample,windows mobile,Algorithms,XBOX 360,XNA Game Studio,Applications,Parallel Programming,Samples,real-time,XNA Framework,Xna Engine,RTS,Parallel,Sample Code,A* Client Apps,application,A*,rts engine,Pathfinding,block,graph theory,algorithm,.NET 4.0,pc,windows phone,Windows Phone 7,XNA 4.0,real time,Paths,unblock,cheap list,closed list,ben,benjamin scharbach,AStarComponent.dll,temporalwars engine,real time strategy,late-bind,late bind,TemporalWars 3D,3D Game Engine,Tools,tool,Toolkit,Terrain,formula,Threading,Thread,Ben Scharbach,c#,code,",
  "LastEdited": "2016-05-10T13:52:08.043-07:00"
}
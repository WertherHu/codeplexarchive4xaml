{
  "ProjectName": "VeraDotNet",
  "Title": ".NET Library for Micasaverde (Vera) Home Automation Controllers",
  "Description": ".NET Library for accessing Micasaverde (Vera) Home Automation Controllers (VeraLite, Vera3 and VeraEdge).\r\n",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />.NET Library for accessing Micasaverde &#40;Vera&#41; Home Automation Controllers &#40;VeraLite, Vera3 and VeraEdge&#41;.<br /><br /><br />VeraDotNet is a .NET library for accessing capabilities of Vera (Mi Casa Verde) home automation controllers.<br /><br />Vera controllers provide an extensive http interface which provides access to many of it&#39;s functionality. <br /><br />VeraDotNet is provide simpler access to Vera functionality from a .NET capable devices. VeraDotNet encapsulates most of the complexity of interfacing with Vera controller and gives developer ability to make use of Visual Studio&#39;s Intellisense functionality. <br /><br />Simply, you can turn on a light switch by following three lines of code.<br /><br />            var ui5Controllers = new Ui5Controllers();<br />            <br />             var myController = ui5Controllers.GetController(&quot;12345678&quot;);<br /><br />            var miosEngine = new MiosEngine(myController);            <br />            var officeLight = new BinaryLight1(miosEngine, 20);<br /><br />            // Executes SetTarget action to turn on the device.<br />            officeLight.SSwitchPower1.SetTarget(true);<br /><br />Or, you can access the same light switch by name, with a few more lines of code.<br /><br />            var ui5Controllers = new Ui5Controllers();<br />            <br />             var myController = ui5Controllers.GetController(&quot;12345678&quot;);                       <br /><br />            var miosEngine = new MiosEngine(myController);<br /><br />            var miosData = new UserData(miosEngine);<br /><br />           var officeLight = (BinaryLight1) miosEngine.GetDeviceByName(&quot;Office Light&quot;);<br /><br />            // Executes SetTarget action to turn off the device.<br />            officeLight.SSwitchPower1.SetTarget(false);<br /><br />As of now, Vera controllers support two different firmware which require different authentication mechanisms. With VeraDotNet, you can retrieve you can retrieve and access Ui5 controllers as above sample. For Ui7 controllers you need code similar to following:<br />            <br />            var ui7Controllers = new Ui7Controllers(&quot;vera-us-oem-autha.mios.com&quot;, &quot;username&quot;, &quot;password&quot;, &quot;passwordseed&quot;, &quot;1&quot;);<br /><br />            var myController = ui7Controllers.GetController(&quot;12345678&quot;);<br /><br />The TestApp provides more information in the form of comments.<br /><br />UI7 functionality is just recently added. So it has room for improvement. But it should be sufficient to make you existing UI5 related code to work on UI7.<br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2015-01-25T13:30:53.967-08:00"
}
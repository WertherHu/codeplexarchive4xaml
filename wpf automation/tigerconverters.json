{
  "ProjectName": "tigerconverters",
  "Title": "Tiger Converters",
  "Description": "Tiger is a small languaje based on expressions, so it's perfect for writing the body of a WPF/SL converter.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong><br>\r\nTiger is a small languaje based on expressions, so it's perfect for writing the body of a WPF/SL converter.</p>\r\n<p>For example here's the code needed to write a visibility converter:</p>\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">tc</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ValueConverter</span> <span style=\"color:red\">x:Key</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">NegatedBoolConverter</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\n\t<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">tc</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ValueConverter.Program</span><span style=\"color:blue\">&gt;</span>\n\t\t<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">sys</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">String</span><span style=\"color:blue\">&gt;</span>\nif value then Visibility.Visible else Visibility.Hidden\n                <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">sys</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">String</span><span style=\"color:blue\">&gt;</span>\n\t<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">tc</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ValueConverter.Program</span><span style=\"color:blue\">&gt;</span>\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">tc</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ValueConverter</span><span style=\"color:blue\">&gt;</span></pre>\r\n<p>And what about the negated bool converter??</p>\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">tc</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ValueConverter</span> <span style=\"color:red\">x:Key</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">NegatedBoolConverter</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\n\t<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">tc</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ValueConverter.Program</span><span style=\"color:blue\">&gt;</span>\n\t\t<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">sys</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">String</span><span style=\"color:blue\">&gt;</span>not value<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">sys</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">String</span><span style=\"color:blue\">&gt;</span>\n\t<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">tc</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ValueConverter.Program</span><span style=\"color:blue\">&gt;</span>\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">tc</span><span style=\"color:blue\">:</span><span style=\"color:#a31515\">ValueConverter</span><span style=\"color:blue\">&gt;</span></pre>\r\n<p>There are some times when you don't need to rehuse the converter and just use one time in one control. Or the converter just should evaluate an aritmetric expression.<br>\r\n<br>\r\nA converter fully written in XAML fit's perfectly in those scenarios.<br>\r\n<br>\r\nAs for performance, the code is parsed only once and a System.Linq expression is generated and used as the body of the converter.<br>\r\n<br>\r\nThe project is still in development phase, i'll try to put some more info ASAP.</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "c#,xaml,converter,compiler,",
  "LastEdited": "2012-04-10T09:49:04.663-07:00"
}
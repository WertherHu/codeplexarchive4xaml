{
  "ProjectName": "versioning",
  "Title": "MSBuild Versioning",
  "Description": "MSBuild Versioning allows you to use your source control revision number in your .NET assembly version. You can have version numbers in the format Major.Minor.Revision, where Revision is automatically set to your currently checked-out revision number.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><div style=\"clear:both;height:0;\">&nbsp;</div><img style=\"float:right;padding-left:.5em;\" src=\"/projects/versioning/41ed27d5-8bd8-4c50-b9a4-9746c375e460\" alt=\"AssemblyProperties.png\" title=\"AssemblyProperties.png\" />\n<h3>Use your source control revision number in your .NET assembly version.</h3>\r\n<br />MSBuild Versioning allows you to build programs with version numbers such as <b>Major.Minor.Revision</b>, where <b>Revision</b> is automatically set to your currently checked-out source control revision number.<br /><br />Currently, this supports Mercurial and Subversion, but the code is super-simple, and adding support for other systems should be pretty easy. If you add some code to support another system, please consider contributing it back to this project!<br /><br /><blockquote><blockquote><b><a href=\"https://versioning.codeplex.com/wikipage?title=Instructions&referringTitle=Home\">Download and Setup Instructions</a></b></blockquote></blockquote>\n<h4>Features</h4>\r\n<ul><li>Your <b>Major</b> and <b>Minor</b> version numbers are specified in a file that is checked in to source control. If you want to go from version 1.9.x to version 2.0.x, you modify the file and commit the change. This makes it easy to have branches for different versions build with the correct version number. </li>\n<li>Your <b>Revision</b> number is automatically set to your currently checked-out Mercurial or Subversion revision number.</li>\n<li>If your working copy has uncommitted changes, the version number will be <b>Major.Minor.Revision.1</b>. The 1 is a hint that this is not a clean build from source control.</li>\n<li><b>Flexible!</b> Use whatever version format you want. In fact, you can inject other source control information (branch name, revision ID, etc) into any project source file.</li>\n<li><b>Nothing to install!</b> Simply drop the MSBuildVersioning.dll file into your solution, edit a few files, and you&#39;re away. All you need is Visual Studio and your source control command-line program (hg.exe or svn.exe).</li>\n<li><b>Fast!</b> The MSBuild Versioning build task does nothing if the version doesn&#39;t need to be updated, so it doesn&#39;t trigger unnecessary builds.</li></ul>\n\n<h4>Advantages</h4>\r\n<ul><li>If a customer reports a problem in a particular version, it’s a piece of cake to check out and build that exact version to try and reproduce their problem.</li>\n<li>The version numbers auto-increment, so you don’t have to remember to change 1.9.14 to 1.9.15.</li>\n<li>This is better than having version numbers based on build date – if you build revision 1473 today, it should be exactly the same as when you built revision 1473 three months ago, not have a different version number.</li></ul>\n\n<h4>Instructions</h4>\r\nSee the <a href=\"https://versioning.codeplex.com/wikipage?title=Instructions&referringTitle=Home\">download and setup instructions</a> and the list of <a href=\"https://versioning.codeplex.com/wikipage?title=Tokens&referringTitle=Home\">file tokens</a>.<br />\n<h4>Development &amp; Contributing</h4>\r\nSee the <a href=\"https://versioning.codeplex.com/wikipage?title=Development&referringTitle=Home\">development</a> page.</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2010-06-30T07:11:04.417-07:00"
}
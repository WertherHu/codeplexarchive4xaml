{
  "ProjectName": "passwordtextboxcontrol",
  "Title": "PasswordTextBox Control",
  "Description": "A Windows Forms control that enables the user to enter password text, momentarily showing each character entered.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1><i>PasswordTextBox</i> Control</h1>\r\n<img src=\"https://img.shields.io/nuget/v/PasswordTextBox-Control.svg\" alt=\"‘PasswordTextBox-Control’ NuGet package\" title=\"‘PasswordTextBox-Control’ NuGet package\" /><br /><br /><blockquote>See what’s changed lately by reading the <a href=\"https://github.com/njonsson/PasswordTextBox-Control/blob/master/History.md\">project history</a>.</blockquote>\nIt’s common knowledge that the <i><a href=\"https://msdn.microsoft.com/en-us/library/system.windows.forms.textbox.usesystempasswordchar.aspx\">UseSystemPasswordChar</a></i> and <i><a href=\"https://msdn.microsoft.com/en-us/library/system.windows.forms.textbox.passwordchar.aspx\">PasswordChar</a></i> properties of the <i>System​.Windows​.Forms​.TextBox</i> control let you obscure user input of secret information such as passwords. But you may have wanted behavior such as touch-screen devices exhibit: user input is <b>momentarily displayed before being replaced</b> by a password character. <i>TextBox</i> can’t do that.<br /><br /><i>PasswordTextBox</i> is what you were looking for.<br /><br /><img src=\"https://raw.githubusercontent.com/njonsson/PasswordTextBox-Control/master/demo.gif\" alt=\"PasswordTextBox control animated demonstration\" title=\"PasswordTextBox control animated demonstration\" /><br />\n<h2>Features</h2>\r\n☑︎ Accept user input via the keyboard, the clipboard, and drag-and-drop<br />☑︎ Prevent the user or system from copying control content to the clipboard if a password character is in effect<br />☑︎ Show input just once before replacing it with the password character, never allowing any input to be revealed again after it has been obscured<br />☑︎ Support the use of the system-defined password character<br />☑︎ Support the use of a custom password character<br />☑︎ Support the use of no password character at all (which makes the control behave like a standard text box)<br />☑︎ Support variable delay in connection with the password character<br />☑︎ Observe system settings governing text quality (i.e., antialiasing)<br />☑︎ Support user input via the keyboard by momentarily displaying each typed character<br />☐ Support user input via the clipboard by momentarily displaying pasted content<br />☐ Support user input via drag-and-drop by momentarily displaying dropped content<br />\n<h2>Installation</h2>\r\nInstall <a href=\"https://www.nuget.org/packages/PasswordTextBox-Control/\">the NuGet package</a>. You can do this using the Visual Studio NuGet plugin, or from the command line in your project folder: <span class=\"codeInline\">nuget install PasswordTextBox-Control</span>.<br /><br />Using the Visual Studio Windows Forms Designer is optional, and configuring it requires some manual steps. Once <i>PasswordTextBoxControl.dll</i> is a reference of your project, you need to add the control to the Visual Studio Toolbox so it can be dropped on forms in the designer:<br />\n<ol><li>Click <b>Choose Toolbox Items…</b> in the <b>Tools</b> menu.</li>\n<li>On the <b>.NET Framework Components tab</b> of the <b>Choose Toolbox Items</b> dialog box, click the <b>Browse…</b> button.</li>\n<li>Navigate to the <i>packages</i> folder of your project, and within that find the <i>PasswordTextBoxControl.dll</i> version that corresponds to the .NET Framework version you’re using.</li>\n<li>Click <b>OK</b> to save the changes to the toolbox.</li>\n<li>Look for <i>PasswordTextBox</i> among <i>Common Controls</i> in the toolbox.</li></ol>\n<h2>Usage</h2>\r\nSee the <a href=\"https://github.com/njonsson/PasswordTextBox-Control/tree/master/PasswordTextBoxControl.Test.Gui\">PasswordTextBox.Test.Gui project</a> in this solution for a demonstration of the behavior of the control. Salient properties include:<br />\n<ul><li><i>UseSystemPasswordChar</i></li>\n<li><i>PasswordChar</i></li>\n<li><i>PasswordCharDelay</i></li>\n<li><i>Text</i></li></ul>\n\n<h3><i>UseSystemPasswordChar</i> property</h3>\r\nIf <span class=\"codeInline\">true</span>, this property makes user input appear as bullet characters after it momentarily appears normally. If <span class=\"codeInline\">false</span>, then <i>PasswordChar</i> takes effect.<br /><br />This property defaults to <span class=\"codeInline\">true</span>.<br />\n<h3><i>PasswordChar</i> property</h3>\r\nThis property makes user input appear as a specific character after it momentarily appears normally. The value of this property has no effect unless <i>UseSystemPasswordChar</i> is <span class=\"codeInline\">false</span>.<br /><br />This property defaults to <span class=\"codeInline\">&#39;\\0&#39;</span> (the null character), which makes the control behave like a standard text box if <i>UseSystemPasswordChar</i> is <span class=\"codeInline\">false</span>.<br />\n<h3><i>PasswordCharDelay</i> property</h3>\r\nThis property controls the time in milliseconds during which user input appears normally before appearing as the password character.<br /><br />This property defaults to <i>1000</i> (i.e., one second).<br />\n<h3><i>Text</i> property</h3>\r\nAs you might expect, this property stores user input regardless of any password character that may be in effect.<br />\n<h2>Contributing</h2>\r\nTo submit a patch to the project:<br />\n<ol><li><a href=\"https://github.com/njonsson/PasswordTextBox-Control/fork\">Fork</a> the official repository.</li>\n<li>Create your feature branch: <span class=\"codeInline\">git checkout -b my-new-feature</span>.</li>\n<li>Commit your changes: <span class=\"codeInline\">git commit -am &#39;Add some feature&#39;</span>.</li>\n<li>Push to the branch: <span class=\"codeInline\">git push origin my-new-feature</span>.</li>\n<li>Make sure all tests in the project are still passing, and add test coverage of new behavior as appropriate.</li>\n<li><a href=\"https://github.com/njonsson/PasswordTextBox-Control/compare\">Create</a> a new pull request.</li></ol>\n<br />To release a new version:<br />\n<ol><li>Update the project history in <i><a href=\"https://github.com/njonsson/PasswordTextBox-Control/blob/master/History.md\">History.md</a></i>, and commit.</li>\n<li>Update the version numbers in the <i>PasswordTextBox-Control.nuspec</i> file and in all <i>AssemblyInfo.cs</i> files, and commit.</li>\n<li>Build the NuGet package: <span class=\"codeInline\">nuget pack PasswordTextBox-Control.nuspec</span>.</li>\n<li>Publish the NuGet package: <span class=\"codeInline\">nuget push PasswordTextBox-Control.X.Y.Z.nupkg</span> where <span class=\"codeInline\">X.Y.Z</span> is the version you just built.</li>\n<li>Tag the commit and push commits and tags.</li></ol>\n\n<h2>License</h2>\r\nReleased under the <a href=\"https://github.com/njonsson/PasswordTextBox-Control/blob/master/License.md\">MIT License</a>.</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2016-02-11T21:18:19.27-08:00"
}
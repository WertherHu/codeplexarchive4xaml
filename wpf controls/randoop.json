{
  "ProjectName": "randoop",
  "Title": "Randoop.NET: API Fuzzing for .NET",
  "Description": "Randoop.NET is a unit test generator for .Net libraries. It is a API fuzzing tool that creates test cases by sequence of API method calls.  ",
  "MovedLink": "https://github.com/abb-iss/Randoop.NET",
  "HomeWiki": "<div class=\"wikidoc\"><b>Randoop.NET is an API fuzzing unit test generator for .NET libraries.</b> It creates test cases by sequence of API method calls and it improves on random and static test generation by incorporating feedback during test generation. <br /><br />Randoop is extremely easy to use: \n<ul><li>point it at your asssembly</li></ul>\n<pre>\n&gt; randoop  /timelimit:10 System.Xml.dll\n....\n</pre>\n<ul><li>here is a typical generated test case:</li></ul>\n<br /><pre>\n//LAST ACTION: System.Xml.XmlConvert.Char ToChar(System.String)\n//EXCEPTION: System.FormatException\nusing System.Xml;\nusing System;\npublic class RandoopTest1262\n{\n  public static int Main()\n  {\n    try\n    {\n      //BEGIN TEST\n      System.DateTime v2 =\n         (System.DateTime)(System.Array.CreateInstance(typeof(System.DateTime), 1))\n         .GetValue(0);\n      System.Xml.XmlDateTimeSerializationMode v3 = \n         System.Xml.XmlDateTimeSerializationMode.Local;\n      System.String v4 = System.Xml.XmlConvert.ToString(v2, v3) ;\n      System.Char v5 = System.Xml.XmlConvert.ToChar((System.String)v4) ;\n      //END TEST\n      System.Console.WriteLine(&quot;This was unexpected behavior\n                                (expected an exception). Will exit with code 99.&quot;);\n      return 99;\n    }\n    catch (System.FormatException e)\n    {\n      System.Console.WriteLine(&quot;//EXCEPTION:&quot; + e.GetType().FullName);\n      System.Console.WriteLine(&quot;This was expected behavior.\n                                Will exit with code 100.&quot;);\n      return 100;\n    }\n    catch (System.Exception e)\n    {\n      System.Console.WriteLine(&quot;//EXCEPTION:&quot; + e.GetType().FullName);\n      System.Console.WriteLine(&quot;//STACK TRACE:&quot;);\n      System.Console.WriteLine(e.StackTrace);\n      System.Console.WriteLine();\n      System.Console.WriteLine(&quot;This was unexpected behavior.\n                                Will exit with code 99.&quot;);\n      return 99;\n    }\n  }\n}\n//REFASSEMBLY: C:\\windows\\assembly\\GAC_MSIL\\System.Xml\\2.0.0.0__b77a5c561934e089\\System.Xml.dll\n//REFASSEMBLY: C:\\WINDOWS\\Microsoft.NET\\Framework\\v2.0.50727\\mscorlib.dll\n\n</pre><br /><br />\n<h1>More information</h1>\r<ul><li><a href=\"https://randoop.codeplex.com/documentation?referringTitle=Home\">Documentation</a></li>\n<li><a href=\"https://randoop.codeplex.com/wikipage?title=Publications&referringTitle=Home\">Publications</a></li></ul>\n<br /><b>The Randoop tool for Java can be found <a href=\"https://randoop.github.io/randoop/\">here</a>.</b><br /><br />The project is sponsored by the <a href=\"http://research.microsoft.com/en-us/groups/rise/default.aspx\">Research in Software Engineering (RiSE)</a> team at <a href=\"http://research.microsoft.com/en-us/\">Microsoft Research</a>, Redmond.<br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": ".NET,C#,Testing,visual basic,Unit Testing,testing framework,Quality,Quality Control,random testing,F#,nunit,",
  "LastEdited": "2017-10-06T17:57:44.543-07:00"
}
{
  "ProjectName": "throttlewebapi",
  "Title": "Throttling Suite for Web API",
  "Description": "The Throttling Suite provides throttling control capabilities to the .NET Web API applications. It is highly customizable product, yet simple to use.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />The Throttling Suite provides throttling control capabilities to the .NET Web API applications. It is highly customizable product, yet simple to use. It is specifically designed to throttle high performance and high throughput Web API applications.<br /><br />This project is a spin-off of the original <a href=\"http://throttlingsuite.codeplex.com\">&quot;Throttling Suite for ASP.NET Applications&quot;</a> with improved capabilities providing implementation for .NET Web API framework. The implementation supports all available hosting options provisioning equal functionality for IIS-hosted or OWIN self-hosted solutions.<br /><br />The library contains multiple controller types implementing different throttling algorithms: \n<ul><li>Linear throttling - limits the number of calls by enforcing consistent delay between consequent requests;</li>\n<li>Short Average - limits the number of calls by ensuring consistent average over period of time, but allowing to have smaller traffic bursts for short time intervals; this type of throttling is very helpful cutting HTTP request floods;</li>\n<li>Long Average - limits the number of calls by specified number of requests per configured duration as short-average does, but includes &quot;blocked&quot; calls into total count, penalizing client for excessive application use.</li></ul>\nSee <a href=\"https://throttlewebapi.codeplex.com/wikipage?title=Throttling%20algorithm%20considerations&referringTitle=Home\">Throttling algorithm considerations</a> for more details on different throttling controller types.<br /><br />Each throttling controller is capable of unique client determination and management. The throttling for any end-point, or set of end-points can be configured either for the entire application, or per-client. It does not purely rely on client IP address, allowing multiple clients from the same network concurrently making requests to the server. <br />The Throttling Suite allows setting multiple controllers within the application and applying each to a pre-filtered traffic. The filters are also configurable.<br /><br />The Throttling Suite provides two modes: real blocking mode when request is blocked with 429 HTTP Status code and log-only mode whether it logs blocking information to a trace log, but allows request to continue. The log-only mode is very useful when there is a need to determine the most appropriate throttling configuration parameters.<br /><br />The code is highly optimized for its performance. It has very low memory impact. The throttle evaluation functionality takes less than 0.3 ms to run.<br /><br />As an extra functionality it provides with real-time snapshot of current throttle status for all throttling controllers. The snap-shot is available online as a JSON output. It requires configuration to assure authorized used as desired by an application.<br /><br />This component is also available as NuGet Package; search for &quot;ThrottlingSuite.Http&quot; in NuGet Package Manager or visit <a href=\"https://www.nuget.org/packages/ThrottlingSuite.Http\">https://www.nuget.org/packages/ThrottlingSuite.Http</a>.<br /><br />The Throttling Suite takes advantage of Web API <i>delegating handler</i> pattern and its combined flow diagram is present below:<br /><img src=\"/projects/throttlewebapi/491efe0c-000e-469e-b08c-3e7c332dd6ab\" alt=\"FlowDiagram.png\" title=\"FlowDiagram.png\" /><br /><br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": ".NET,Web Services,web api,WebApi,throttling,request throttling,throttling control,throttle control,throttle controller,throttle web api,throttling web api,",
  "LastEdited": "2014-06-03T04:33:40.85-07:00"
}
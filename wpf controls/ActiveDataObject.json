{
  "ProjectName": "ActiveDataObject",
  "Title": "Active Data Object for WPF Data Binding",
  "Description": "To make CLR object's properties automatically notify value changes so that WPF data binding engine can update UI accordinally. The solution utilizes .NET custom TypeDescriptor mechanism to selectively override existing CLR property's behavoir or create fresh new property for data binding. Property change notification can be triggered by instance's events (for example, SomePropertyChanged event) or external events (for example, a Timer's Elapsed event).\n\nOn top of the implementation stack, there will be an Application Model layer to make things more earier. It is being designed right now.\n\nWith only one line of code, your binding to the DataTime.Now is made alive for WPF data binding. Try it and provide feedback to us!",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h2>Project Description</h2>\rTo make CLR object&#39;s properties automatically notify value changes so that WPF data binding engine can update UI accordinally. The solution utilizes .NET custom TypeDescriptor mechanism to selectively override existing CLR property&#39;s behavoir or create fresh new property for data binding. Property change notification can be triggered by instance&#39;s events &#40;for example, SomePropertyChanged event&#41; or external events &#40;for example, a Timer&#39;s Elapsed event&#41;.<br /><br />On top of the implementation stack, there will be an Application Model layer to make things more earier. It is being designed right now.<br /><br />With only one line of code, your binding to the DataTime.Now is made alive for WPF data binding. Try it and provide feedback to us&#33;\n<ul><li><a href=\"https://activedataobject.codeplex.com/wikipage?title=See%20recent%20changes%20%28update%20on%20every%20significant%20check-in%29...&referringTitle=Home\">See recent changes &#40;update on every significant check-in&#41;...</a></li></ul>\n<h2>Goals</h2>\rThe ultimate goal for this project is to make every CLR object a first-citizen in WPF world which, for example, supporting dynamic data binding, routed eventing, commanding, etc. with less or no programming efforts.<br /><br />The solution starts from promoting/creating properties which support value change notifications, which is the most common scenario within our team.\n<h2>Scenarios</h2>\rThis section lists common scenarios during WPF application development in which data object is not designed to work with WPF data binding engine.\n<h3><a href=\"https://activedataobject.codeplex.com/wikipage?title=Make%20existing%20property%20alive%20on%20interval&referringTitle=Home\">Make existing property alive on interval</a></h3>\r<h3><a href=\"https://activedataobject.codeplex.com/wikipage?title=Make%20existing%20property%20alive%20on%20eventing&referringTitle=Home\">Make existing property alive on eventing</a></h3>\r<h3><a href=\"https://activedataobject.codeplex.com/wikipage?title=Create%20new%20active%20property%20on%20eventing%20out%20of%20event%20arguments&referringTitle=Home\">Create new active property on eventing out of event arguments</a></h3>\r<h3><a href=\"https://activedataobject.codeplex.com/wikipage?title=More...&referringTitle=Home\">More...</a></h3>\r<h2>Walkthroughs</h2>\r<h3><a href=\"https://activedataobject.codeplex.com/wikipage?title=Make%20DateTime.Now%20Alive&referringTitle=Home\">Make DateTime.Now Alive</a></h3>\r<h3><a href=\"https://activedataobject.codeplex.com/wikipage?title=Make%20Speech%20Recognition%20Engine%20Alive&referringTitle=Home\">Make Speech Recognition Engine Alive</a></h3>\r<h2>Technical Points</h2>\rThis section list several issues in providing reasonable solution to aforementioned scenarios.\n<h3>CustomTypeDescriptor</h3>\rTo be written...\n<h3>PropertyDescriptor</h3>\rTo be written...\n<h2>Further Considerations</h2>\rPlease let me know more scenarios and areas we could make it easier.</div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,Data Binding,CLR,TypeDescriptor,.NET,.NET 3.0,",
  "LastEdited": "2008-05-22T23:10:26.673-07:00"
}
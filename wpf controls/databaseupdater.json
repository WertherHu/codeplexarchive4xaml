{
  "ProjectName": "databaseupdater",
  "Title": "Continuous Database Intergation .NET",
  "Description": "Database Updater is .NET application that helps you manage database updates and can be easily integrated with Cruise Control .NET.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">Database Updater is .NET application that helps you manage database updates and can be easily integrated with Cruise Control .NET.<br /><br />For example,<br /><br /><pre>\n&lt;project name=&quot;ProjectName&quot;&gt;\n  ..\n  &lt;sourcecontrol type=&quot;svn&quot;&gt;\n  ...\n  &lt;/sourcecontrol&gt;\n  &lt;tasks&gt;\n    &lt;exec&gt;\n      &lt;executable&gt;DatabaseUpdater.exe&lt;/executable&gt;\t\n        &lt;baseDirectory&gt;[path to DatabaseUpdater installation folder]&lt;/baseDirectory&gt;\n        &lt;buildArgs&gt;-update&lt;/buildArgs&gt;\n        &lt;buildTimeoutSeconds&gt;360&lt;/buildTimeoutSeconds&gt;\n        &lt;successExitCodes&gt;0&lt;/successExitCodes&gt;\n    &lt;/exec&gt;\n    &lt;nant&gt;\n    ...\n    &lt;/nant&gt;\n  &lt;/tasks&gt;\n&lt;/project&gt;\n</pre><br /><br />As you can see I specified only &quot;0&quot; as a success exit code. If Database Updater cannot execute one of the update scripts it will return exit code &quot;2&quot; and CCNET will stop deployment before the project will be compiled and published on the web.<br /><br />To start using Database Updater you need to setup the database which means create a database schema and add information about the scripts that you probably already installed manually. Do not worry, Database Updater will do it for you. Just make a command:<br /><br /><span class=\"codeInline\"> DatabaseUpdater -setup -no_execute </span><br /><br />&quot;-setup&quot; means adding database schema that needs Database Updater to work with database and &quot;-no_execute&quot; means add all scripts that you have without actually executing them.<br /><br />But before this let&#39;s edit Database Updater configuration file - DatabaseUpdater.exe.config. Two things you should be considered - path to folder where you store update scripts (somewhere in the source control imported project folder) and connection string to the database.<br /><br />After setupping Database Updater you can ask it to update the database by this command:<br /><br /><span class=\"codeInline\"> DatabaseUpdater -update </span><br /><br />Or add Executable task in CCNET like I described above. The latest version of Database Updater with sources you can find here (release version placed in /bin/release folder inside the archive). Please notice also that Database Updater works with any database that .NET Framework supports. Enjoy the coding and let continuous integration do the other stuff!</div><div class=\"ClearBoth\"></div>",
  "TagList": "Database Updater,",
  "LastEdited": "2008-03-21T17:41:47.723-07:00"
}
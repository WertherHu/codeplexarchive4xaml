{
  "ProjectName": "PPSSCDDateRange",
  "Title": "Implement From Date and To Date Range for PerformancePoint 2010 Scorecard",
  "Description": "This project can assist you to implement a date range with PerformancePoint scorecard and control the filters behavior. This is a sample code, didnâ€™t tried it at production site.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong><span style=\"font-size:14pt\">Implement From Date and To Date Range for PerformancePoint 2010 Scorecard</span></strong></p>\r\n<p>I&rsquo;m always asking by customers how we can implement a date range with PerformancePoint scorecard.</p>\r\n<p>In all other objects in PerformancePoint we can do it (Analytic Grid &amp; Chart, Reporting services etc&hellip;).</p>\r\n<p>So, I decide to implement a scorecard transformation to do it, most of times we implement a scorecard transformation to extend the scorecard behavior.</p>\r\n<p>In this solution I had a basic assumption that there are 3 date filters in addition to other filters.</p>\r\n<ol>\r\n<li>Final Date (will be the final proxy filter which will connect to the scorecard).\r\n</li><li>From Date Filter (will remove dynamically in late binding by the extension). </li><li>To Date filter (will remove dynamically in late binding by the extension). </li></ol>\r\n<p>All of them had to load the same hierarchy.</p>\r\n<p><strong><span style=\"text-decoration:underline\">Order of filters:</span></strong></p>\r\n<p>The order of the filters in the page is not relevant, the order of the (Filter Links - web part links) is\r\n<span style=\"color:red\">important.</span></p>\r\n<p><img src=\"http://www.codeplex.com/Download?ProjectName=ppsscddaterange&DownloadId=329892\" alt=\"Filters\" width=\"284\" height=\"236\"></p>\r\n<p>For example if we have: Product &amp; Promotion filters the order to link the scorecard is the following: Final Date, From Date, To Date, Product, Promotion.</p>\r\n<p>All the filters can implement any UI objects (Tree, Multi Select Tree etc.)</p>\r\n<p>The final date filter will be read only so we will implement it with List (Combo Box) with a single value (for example the hierarchy All Member, the extension will override the value of final date.</p>\r\n<p>The following screenshots describes conceptual workflow:</p>\r\n<p>&nbsp;<img src=\"http://www.codeplex.com/Download?ProjectName=ppsscddaterange&DownloadId=329893\" alt=\"Slide1\" width=\"500\" height=\"500\"></p>\r\n<p>The extension will collect from &amp; to date unique name values and create the where clause and then remove both from &amp; to date filters.</p>\r\n<p>&nbsp;<img src=\"http://www.codeplex.com/Download?ProjectName=ppsscddaterange&DownloadId=329894\" alt=\"Slide2\" width=\"500\" height=\"500\"></p>\r\n<p>How the code works?</p>\r\n<p>Scorecard transformation has 4 main override event properties:</p>\r\n<ol>\r\n<li>Pre Query </li><li>Post Query </li><li>Pre Render </li><li>Post Render </li></ol>\r\n<p>I implemented the Pre Query method, I control the filter collection and then everything behaves the default.</p>\r\n<p><span style=\"color:#c00000; font-size:9pt\">public GridViewTransformType GetTransformType() { return GridViewTransformType.PreQuery; }</span></p>\r\n<p>The code does other two steps:</p>\r\n<ol>\r\n<li>Works on a specific Scorecard (this gives you a flexibility to work with a specific scorecard in specific page). You need to find the scorecard ID from the workspace or\r\n<span style=\"color:black; font-size:10pt\">from the view source of the page (locate for &quot;ScorecardId&quot;).</span>..\r\n</li><li>If the end user selects an arbitrary shape (members from different levels) I create a set, other if the end user selects members from the same level I create a range set.\r\n</li></ol>\r\n<p><strong><span style=\"text-decoration:underline\"><span style=\"color:red\">Be aware that multi select is not supported (data range have to be single value to single value).</span></span></strong></p>\r\n<p><img src=\"http://www.codeplex.com/Download?ProjectName=ppsscddaterange&DownloadId=329895\" alt=\"CodeImage\" width=\"1095\" height=\"708\"></p>\r\n<p>Installation steps:</p>\r\n<ol>\r\n<li>Open the source code project with Visual Studio 2010 </li><li>Compile the code </li><li>Copy the &ldquo;Microsoft.PerformancePoint.SDK.Samples.RangeCreatorTransform.dll&rdquo; to GAC (Global assembly cache).\r\n</li><li>Locate the PerformancePoint we.config file (default at C:\\Program Files\\Microsoft Office Servers\\14.0\\WebServices\\PpsMonitoringServer)\r\n</li><li>Backup the file (the panic step&hellip; J) </li><li>At the appsetting add the scorecard id , for example </li></ol>\r\n<p>&lt;appSettings&gt;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; &lt;add key=&quot;ScorecardViewId&quot; value=&quot;The GUID&hellip;&quot; /&gt;</p>\r\n<p>&lt;/appSettings&gt;</p>\r\n<ol>\r\n<li>Locate the &lt;Bpm&gt; &lt;CustomViewTransforms&gt; entry and add the following:\r\n</li></ol>\r\n<p>&lt;add key=&quot;RangeCreator&quot; value=&quot;Microsoft.PerformancePoint.SDK.Samples.ScorecardTransforms.PreQuery.RangeCreatorTransform, Microsoft.PerformancePoint.SDK.Samples.RangeCreatorTransform, Version=14.0.0.0, Culture=neutral, PublicKeyToken=fa525c8383a44a52&quot;/&gt;</p>\r\n<p>Be awere that FilterEmptyRows extension will be the last one, PPS product team add the remark.</p>\r\n<p><em><span style=\"color:red\">&lt;!-- FilterEmptyRows should allways be the last transform in this list --&gt;</span></em></p>\r\n<ol>\r\n<li>Reset IIS. </li><li>Create a dashboard page, add 3 date filters call them Final,From,To date (final date will be a combo box)\r\n</li><li>Link the filters to your scorecard. </li><li>Enjoy J </li></ol>\r\n<p>Good luck</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2012-01-18T23:27:14.72-08:00"
}
{
  "ProjectName": "GateKeeper",
  "Title": "Web Access Management",
  "Description": "GateKeeper is a .NET 2.0 built web module that provides access control based on the request IP address and UserAgent.  Additionally, a honeypot feature allows you to create a virtual path that can trap ill behaving spiders and bots and automatically block future requests.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Welcome</h1>\rGateKeeper allows you to manage access to your IIS based website/blog/webserver by using several mechanisms:\n<ul><li>IP Blacklist &amp; Whitelist</li>\n<li>UserAgent Blacklist &amp; Whitelist</li>\n<li>Hotlink Blacklist &amp; Whitelist</li>\n<li>Robots.txt Violation Honeypot</li></ul>\nGateKeeper will work with any ASP.NET website running IIS 6/7.  Management pages and User Controls are provided with the solution.  And for those using BlogEngine.NET there are special management pages included that integrate with the built-in admin pages.<br /><br /><b>Here are some screen shots of the management pages:</b><br /><br /><a href=\"http://www.dscoduc.com/image.axd?picture=GateKeeper_Screenshot_Config_1.png\">Config Screen 1</a><br /><a href=\"http://www.dscoduc.com/image.axd?picture=GateKeeper_Screenshot_Config_2.png\">Config Screen 2</a><br /><a href=\"http://www.dscoduc.com/image.axd?picture=GateKeeper_Screenshot_IPBlackList.png\">IP BlackLlist Screen</a><br /><a href=\"http://www.dscoduc.com/image.axd?picture=GateKeeper_Screenshot_HoneyPot.png\">HoneyPot Screen</a><br /><a href=\"http://www.dscoduc.com/image.axd?picture=GateKeeper_Screenshot_HttpBL.png\">HttpBL Screen</a>\n<h2>Blacklist</h2>\rThe core of this solution is the ability to deny a request based on a list of IP Addresses and UserAgents.  So when that BaiduSpider decides to download every single link on your site you can simply add BaiduSpider to your UserAgent list and all future requests will be denied.  If you see a nagging or malicious request coming in from a specific IP Address you can add that to your IP Address list and those will be denied as well.\n<h2>WhiteList</h2>\rNow suppose there is an IP Address or UserAgent that you want to allow access under all circumstances.  Simply add them to the Whitelist and future requests will be allowed to proceed.  Additionally, you can add Urls to the Whitelist to allow to blacklisted requestors access to  only the approved pages and links.\n<h2>HoneyPot</h2>\rGateKeeper provides a honeypot configuration that will trap requestors who have disregarded your robots.txt file.  Simply add an empty anchor tag to your home page pointing to a honeypot address, and then configure GateKeeper to look for any request to that link.  Once the trap is sprung you can have an email sent to you, as well as add that requestor’s IP address to the IP Address Blacklist.\n<h2>Hotlink Blocking</h2>\rHotlinking can also be detected and denied.  The configuration page allows you to configure which extensions you wish to monitor, as well as indicating which external sites are allowed to hotlink from your site.  The default behavior for a hotlinked request is to display the generic deny message but you can configure an image to display instead.\n<h2>Contact Form</h2>\rWhen a request is denied a configurable deny message is displayed to the user, which can include an optional contact form to allow the user to ask for removal.\n<h2>Management</h2>\rAll of the management of GateKeeper can be done using the included web pages that serve up User Controls for each management section.  If you would prefer to configure your own management console you can add the included User Controls to your own management page and you’re ready to go.\n<h2>XML Configuration</h2>\rAll configuration is stored in XML files and dynamically updated whenever they are changed.\n<h2>Sample Website</h2>\rA sample website is included in the project to help you get started and to show you all of the features.\n<h2>BlogEngine.NET Integration</h2>\rThe current release includes all that is necessary to load GateKeeper into BlogEngine.NET.  A duplication exists in configuring the messaging piece but a future BlogEngine.NET Extension will be forthcoming which will inject the credentials at run time so you don’t have to store the configuration in two places.</div><div class=\"ClearBoth\"></div>",
  "TagList": "asp.net,security,htaccess,module,blacklist,honeypot,hotlink,Web Access Mgmt,RETURN,",
  "LastEdited": "2009-01-27T18:34:42.227-08:00"
}
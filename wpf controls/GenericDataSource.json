{
  "ProjectName": "GenericDataSource",
  "Title": "ASP.NET Generic Data Source Control",
  "Description": "The ASP.NET Generic Data Source Control may be used as the Data Source for any ASP.NET data-bound controls: GridView, ListView, FormView, DropDownList, DetailsView,... delivering true flexibility, separation of concerns and real support for the ASP.NET web development",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>The GenericDataSource for ASP.NET 3.5</h1>\r<h2>Project Description</h2>\rThe ASP.NET Generic Data Source Control may be used as the Data Source for any ASP.NET data-bound controls&#58; GridView, ListView, FormView, DropDownList, DetailsView,... delivering true flexibility, separation of concerns and real support for the ASP.NET web development<br />\n<h2>Why to use the ASP.NET GenericDataSource?</h2>\r<ul><li>it may be the <b>DataSource for any ASP.NET data-bound control</b>: GridView, ListView, FormView, DetailsView, DropDownList, BulletedList, Repeater, etc.</li>\n<li>it is design for <b>RAD</b> (Rapid Application Development), but with respects to <b>best practices and proven standards</b>: it may be used for very simple websites, but also for the huge enterprise web applications.</li>\n<li>no need for additional settings over the data-bound controls; the GenericDataSource works just as any other ASP.NET DataSource, therefore <b>it may successfully replace the ObjectDataSource, LinqDataSource or EntityDataSource</b>.</li>\n<li><b>no need for any other DataSource configuration</b>, like <i>EntityTypeName</i>, <i>SelectMethod</i>, <i>InsertMethod</i>, <i>SelectCountMethod</i>,; it is very <b>simple and straightforward to use</b> the GenericDataSource: just implement the handlers that you need: Select, Update, Insert and Delete.</li>\n<li><b>it has great support for paging and sorting</b>; it naturally works with GridView paging and sorting, but also with ASP.NET 3.5 DataPager.</li>\n<li>since it doesn&#39;t require any configuration, the GenericDataSource is very flexible when it comes to <b>code refactoring</b> (as opposite to the nightmare of refactoring when working with the ObjectDataSource)</li>\n<li>it is designed for <b>performance</b>, since it doesn&#39;t use any reflection.</li>\n<li>real support for <b>optimistic concurrency</b>.</li>\n<li>developers really enjoy ASP.NET web development.</li></ul>\n\n<h2><a href=\"http://genericdatasource.codeplex.com/documentation\">How to use the GenericDataSource?</a></h2>\rIs as simple as this:<br /><br /><pre>&lt;%@ Register Assembly=&quot;GenericDataSourceControl&quot; Namespace=&quot;GenericDataSourceControl&quot; TagPrefix=&quot;cc1&quot; %&gt;\n\n...\n\n&lt;cc1:GenericDataSource ID=&quot;GenericDataSource1&quot; runat=&quot;server&quot;\n  OnExecuteSelect=&quot;GenericDataSource1_ExecuteSelect&quot;\n  OnExecuteInsert=&quot;GenericDataSource1_ExecuteInsert&quot;\n  OnExecuteUpdate=&quot;GenericDataSource1_ExecuteUpdate&quot;\n  OnExecuteDelete=&quot;GenericDataSource1_ExecuteDelete&quot;&gt;\n&lt;/cc1:GenericDataSource&gt;\n\n...\n\n\n&lt;asp:GridView ID=&quot;GridView1&quot; runat=&quot;server&quot; DataSourceID=&quot;GenericDataSource1&quot; AllowSorting=&quot;True&quot; AllowPaging=&quot;true&quot; DataKeyNames=&quot;ID&quot; PageSize=&quot;4&quot;&gt;\n...\n&lt;asp:GridView&gt;\n</pre><br /><br />... performing <b>SELECT</b><br /><pre>protected void GenericDataSource1_ExecuteSelect(object sender, GenericDataSourceControl.GenericSelectArgs e)\n{\n    //Just setup the DataSource\n    e.SetData(data); //data may be whatever IEnumerable/IQueryable \n}\n</pre><br /><br />..performing an <b>UPDATE with optimistic concurrency</b><br /><pre>\nprotected void GenericDataSource1_ExecuteUpdate(object sender, GenericUpdateArgs e)\n{\n    //Get the ID Entity key value; this value must be set on the GridView.DataKeyNames\n   var updated = e.GetDataItem&lt;T&gt;();\n   var original = e.GetOldDataItem&lt;T&gt;();\n\n    //submit the change back to the database:\n    ...Update(updated, original);\n}\n</pre></div><div class=\"ClearBoth\"></div>",
  "TagList": "ASP.NET,GridView,FormView,DetailsView,Repeater,DataSource,Listview,DataSourceID,Custom DataSource,",
  "LastEdited": "2010-06-16T02:55:29.37-07:00"
}
{
  "ProjectName": "feedfly",
  "Title": "FeedFly",
  "Description": "FeedFly is a feed reader application designed for the Windows Mobile Professional platform built using the .NET Compact Framework. It was created to allow its users the ability to keep up with internet-syndicated content when away from their computer and without an internet connection. By downloading when the device has a data connection, feed items will be available for offline viewing.\n\nUsability\n> D-pad navigation\n> Designed to be touch-screen friendly (no stylus required)\n> Feed lists support touch scrolling\n\nFeed Format Support\n> RSS 2.0\n> Atom\n> Inheritance and factory pattern for feeds; new formats added easily\n\nOffline Storage\n> SQL Server Compact Edition used to store feed information\n> Data types selected to maximize storage efficiency\n> Storage control algorithms control database size to prevent runaway growth\n> Formatted HTML supported when reading feed content\n\nPerformance\n> Multithreading is used frequently to provide a responsive user interface\n> Incorporates performance best practices published by the CF team\n> Database denormalization and indexing; index seeks (bypass query processor) used for most querying\n\nData Structures\n> Generics used to create strongly-typed lists, queues and stacks of custom objects\n> Binary searches used for item duplication detection\n\nPlatform Integration\n> State Notification broker used for data connection awareness\n> Square screen support\n> Windows Mobile Notification API used for error reporting",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />FeedFly is a feed reader application designed for the Windows Mobile Professional platform built using the .NET Compact Framework. It was created to allow its users the ability to keep up with internet-syndicated content when away from their computer and without an internet connection. By downloading when the device has a data connection, feed items will be available for offline viewing.<br /><br />Usability<br />&#62; D-pad navigation<br />&#62; Designed to be touch-screen friendly &#40;no stylus required&#41;<br />&#62; Feed lists support touch scrolling<br /><br />Feed Format Support<br />&#62; RSS 2.0<br />&#62; Atom<br />&#62; Inheritance and factory pattern for feeds&#59; new formats added easily<br /><br />Offline Storage<br />&#62; SQL Server Compact Edition used to store feed information<br />&#62; Data types selected to maximize storage efficiency<br />&#62; Storage control algorithms control database size to prevent runaway growth<br />&#62; Formatted HTML supported when reading feed content<br /><br />Performance<br />&#62; Multithreading is used frequently to provide a responsive user interface<br />&#62; Incorporates performance best practices published by the CF team<br />&#62; Database denormalization and indexing&#59; index seeks &#40;bypass query processor&#41; used for most querying<br /><br />Data Structures<br />&#62; Generics used to create strongly-typed lists, queues and stacks of custom objects<br />&#62; Binary searches used for item duplication detection<br /><br />Platform Integration<br />&#62; State Notification broker used for data connection awareness<br />&#62; Square screen support<br />&#62; Windows Mobile Notification API used for error reporting<br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "RSS,C#,feeds,blog,Compact Framework,Atom,Generics,windows mobile,SQL Server CE,FeedReader,.NET 3.5,",
  "LastEdited": "2008-05-10T15:56:16.18-07:00"
}
{
  "ProjectName": "ShaderPad",
  "Title": "ShaderPad - WPF ShaderEffects Workbench",
  "Description": "ShaderPad is a application like XamlPad / LinqPad , it is meant to server as WPF ShaderEffects Workbench. The ShaderEffect is a PixelShader based Effect that an be applied to any UIElement in WPF. This feature is available only in .NET 3.5 SP1 .",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />ShaderPad is a application like XamlPad &#47; LinqPad , it is meant to server as WPF ShaderEffects Workbench. The ShaderEffect is a PixelShader based Effect that an be applied to any UIElement in WPF. This feature is available only in .NET 3.5 SP1 .<br /><img src=\"/projects/ShaderPad/9aeb78db-b850-4d3c-8366-e1a737997f53\" alt=\"ShaderPad_release080811_sc2.png\" title=\"ShaderPad_release080811_sc2.png\" /><br /><b>Pre Requisites</b><br />.NET 3.5 SP1 : <a href=\"http://www.microsoft.com/downloads/info.aspx?na=22&amp;p=7&amp;SrcDisplayLang=en&amp;SrcCategoryId=10&amp;SrcFamilyId=&amp;u=%2fdownloads%2fdetails.aspx%3fFamilyID%3dab99342f-5d1a-413d-8319-81da479ab0d7%26DisplayLang%3den\">Download</a>.<br />Direct X SDK : <a href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=519aae99-b701-4ca1-8495-39ddde9d7030&amp;DisplayLang=en\">Download June 2008</a>.<br /><br /><b>More information</b><br /><a href=\"http://rakeshravuri.blogspot.com\">blog articles</a><br /><a href=\"http://blogs.msdn.com/greg_schechter/archive/tags/Effects/default.aspx\">ShaderEffect Basics</a><br /><br /><div class=\"rss\"><div class=\"accentbar\"><span class=\"left\">&nbsp;</span>Random Bits News Feed<span class=\"right\">&nbsp;</span></div><div class=\"entry\"><div class=\"title\"><a href=\"http://rakeshravuri.blogspot.com/2008/08/blending-modes-in-wpf-using.html\">Blending Modes in WPF using ShaderEffect's</a></div><div class=\"moreinfo\"><span class=\"date\">Tuesday, August 12, 2008</span> &nbsp;|&nbsp; <span class=\"source\">From <a target=\"_blank\" href=\"http://rakeshravuri.blogspot.com/feeds/posts/default/-/ShaderPad?alt=rss\">Random Bits</a></span></div><p><p>With the RTM of .NET 3.5 SP1 , we can now create hardware accelerated layer blending effects in WPF like those available in Image Editing tools &amp; Photoshop &amp; GIMP</p>  <p>some of the common blending modes are</p>  <p> </p>  <table width=\"623\" border=\"1\" cellpadding=\"2\" cellspacing=\"0\"><tbody>     <tr>       <td valign=\"top\" width=\"257\">Darken, Darker Colors preferred.<a href=\"http://lh3.ggpht.com/rravuri/SKD4_YNhg0I/AAAAAAAAATY/f23O9W7lops/s1600-h/darken%5B3%5D.png\">      <br /><img alt=\"darken\" src=\"http://lh6.ggpht.com/rravuri/SKD5AGrJsPI/AAAAAAAAATc/TaG87CGA4dc/darken_thumb%5B1%5D.png?imgmax=800\" width=\"240\" height=\"213\" /></a> </td>        <td valign=\"top\" width=\"364\">         <p>sampler2D input : register(s0);<br />sampler2D tex1 : register(s1);  </p>          <p>float4 main(float2 uv : TEXCOORD) : COLOR      <br />{        <br />float4 clr1;       <br />clr1= tex2D(tex1, uv.xy); </p>          <p>    float4 Color;      <br />Color= tex2D( input , uv.xy); </p>          <p>     if (Color.r&gt;clr1.r) Color.r=clr1.r;      <br /> if (Color.g&gt;clr1.g) Color.g=clr1.g;       <br /> if (Color.b&gt;clr1.b) Color.b=clr1.b; </p>          <p>    return Color;        <br />}</p>       </td>     </tr>      <tr>       <td valign=\"top\" width=\"262\">Lighten, Lighter Colors preferred.<a href=\"http://lh4.ggpht.com/rravuri/SKD5BQuWRnI/AAAAAAAAATg/aPeWqVXjiGQ/s1600-h/Lighten%5B4%5D.png\">      <br /><img alt=\"Lighten\" src=\"http://lh6.ggpht.com/rravuri/SKD5CNWd3SI/AAAAAAAAATk/WmJB9mHqZug/Lighten_thumb%5B2%5D.png?imgmax=800\" width=\"240\" height=\"212\" /></a></td>        <td valign=\"top\" width=\"364\">         <p>sampler2D input : register(s0);<br />sampler2D tex1 : register(s1);   </p>          <p>      <br />float4 main(float2 uv : TEXCOORD) : COLOR       <br />{        <br />float4 clr1;       <br />clr1= tex2D(tex1, uv.xy); </p>          <p>    float4 Color;      <br />Color= tex2D( input , uv.xy); </p>          <p>     if (Color.r&lt;clr1.r) Color.r=clr1.r;      <br /> if (Color.g&lt;clr1.g) Color.g=clr1.g;       <br /> if (Color.b&lt;clr1.b) Color.b=clr1.b; </p>          <p>    return Color;        <br />}</p>       </td>     </tr>      <tr>       <td valign=\"top\" width=\"265\">Difference, Simple Arithmetic difference on color components.    <br /><a href=\"http://lh4.ggpht.com/rravuri/SKD5DbMei3I/AAAAAAAAATo/3jwV-t3hxLM/s1600-h/Difference%5B3%5D.png\"><img alt=\"Difference\" src=\"http://lh4.ggpht.com/rravuri/SKD5EeyayzI/AAAAAAAAATs/FxENK62IArQ/Difference_thumb%5B1%5D.png?imgmax=800\" width=\"240\" height=\"213\" /></a> </td>        <td valign=\"top\" width=\"364\">         <p>sampler2D input : register(s0);<br />sampler2D tex1 : register(s1);<br /></p>          <p>float4 main(float2 uv : TEXCOORD) : COLOR      <br />{        <br />float4 clr1;       <br />clr1= tex2D(tex1, uv.xy); </p>          <p>    float4 Color;      <br />Color= tex2D( input , uv.xy); </p>          <p>     Color.r=clr1.r - Color.r;      <br /> Color.g=clr1.g - Color.g;       <br /> Color.b=clr1.b - Color.b; </p>          <p>    return Color;        <br />}</p>       </td>     </tr>      <tr>       <td valign=\"top\" width=\"265\">Multiply, Simple Arithmetic Multiplication on color components.    <br /><a href=\"http://lh4.ggpht.com/rravuri/SKD5Fua1QEI/AAAAAAAAATw/nBLanwKDtu4/s1600-h/Multiply%5B3%5D.png\"><img alt=\"Multiply\" src=\"http://lh4.ggpht.com/rravuri/SKD5GoMllYI/AAAAAAAAAT0/9ZoKDfZ88C4/Multiply_thumb%5B1%5D.png?imgmax=800\" width=\"240\" height=\"209\" /></a>      <br /></td>        <td valign=\"top\" width=\"364\">         <p>sampler2D input : register(s0);<br />sampler2D tex1 : register(s1);<br />float4 main(float2 uv : TEXCOORD) : COLOR       <br />{        <br />float4 clr1;       <br />clr1= tex2D(tex1, uv.xy); </p>          <p>    float4 Color;      <br />Color= tex2D( input , uv.xy); </p>          <p>     Color.r=clr1.r * Color.r;      <br /> Color.g=clr1.g * Color.g;       <br /> Color.b=clr1.b * Color.b; </p>          <p>    return Color;        <br />}</p>       </td>     </tr>      <tr>       <td valign=\"top\" width=\"265\">NegationDifference, opposite or negative of difference    <br /><a href=\"http://lh3.ggpht.com/rravuri/SKD5H1iXLBI/AAAAAAAAAT4/z4LhgVBfOtQ/s1600-h/NegationDifference%5B2%5D.png\"><img style=\"border: 0px none ;\" alt=\"NegationDifference\" src=\"http://lh6.ggpht.com/rravuri/SKD5IqtruvI/AAAAAAAAAT8/RE2aHv23DhU/NegationDifference_thumb.png?imgmax=800\" width=\"244\" border=\"0\" height=\"216\" /></a> </td>        <td valign=\"top\" width=\"364\">         <p>sampler2D input : register(s0);<br />sampler2D tex1 : register(s1);<br />  <br />float4 main(float2 uv : TEXCOORD) : COLOR       <br />{        <br />float4 clr1;       <br />clr1= tex2D(tex1, uv.xy); </p>          <p>    float4 Color;      <br />Color= tex2D( input , uv.xy); </p>          <p>     Color.r=1-(1-clr1.r - Color.r);      <br /> Color.g=1-(1-clr1.g - Color.g);       <br /> Color.b=1-(1-clr1.b - Color.b); </p>          <p>    return Color;        <br />}</p>       </td>     </tr>      <tr>       <td valign=\"top\" width=\"265\">Overlay Hardlight, Combination of Multiply for darer colors and NegationDifference for Lighter colors.    <br /><a href=\"http://lh5.ggpht.com/rravuri/SKD5JsUeXAI/AAAAAAAAAUA/fUNkbMjQ9Jg/s1600-h/overlayHard%5B3%5D.png\"><img alt=\"overlayHard\" src=\"http://lh4.ggpht.com/rravuri/SKD5Km2x3-I/AAAAAAAAAUE/i57yRX4QSw4/overlayHard_thumb%5B1%5D.png?imgmax=800\" width=\"240\" height=\"214\" /></a> </td>        <td valign=\"top\" width=\"364\">         <p>sampler2D input : register(s0);<br />sampler2D tex1 : register(s1);<br />  <br />float4 main(float2 uv : TEXCOORD) : COLOR       <br />{        <br />float4 clr1;       <br />clr1= tex2D(tex1, uv.xy); </p>          <p>    float4 Color;      <br />Color= tex2D( input , uv.xy);       <br /> if (Color.r&lt;0.5)       <br />     Color.r=clr1.r * Color.r;       <br /> else       <br />   Color.r=1-((1-Color.r)*(1-clr1.r)); </p>          <p>     if (Color.g&lt;0.5)      <br />     Color.g=clr1.g * Color.g;       <br /> else       <br />   Color.g=1-((1-Color.g)*(1-clr1.g)); </p>          <p>     if (Color.b&lt;0.5)      <br />     Color.b=clr1.b * Color.b;       <br /> else       <br />   Color.b=1-((1-Color.b)*(1-clr1.b)); </p>          <p>    return Color;        <br />}</p>       </td>     </tr>      <tr>       <td valign=\"top\" width=\"265\">Overlay SoftLight, Variation on Overlay for Lighter colors.    <br /><a href=\"http://lh5.ggpht.com/rravuri/SKD5L89pciI/AAAAAAAAAUI/WfQUurq4nC0/s1600-h/overlaysoft%5B3%5D.png\"><img alt=\"overlaysoft\" src=\"http://lh3.ggpht.com/rravuri/SKD5MjE0YUI/AAAAAAAAAUM/jOoXs5uI-Ak/overlaysoft_thumb%5B1%5D.png?imgmax=800\" width=\"240\" height=\"209\" /></a> </td>        <td valign=\"top\" width=\"364\">         <p>sampler2D input : register(s0);<br />sampler2D tex1 : register(s1);<br />float4 main(float2 uv : TEXCOORD) : COLOR       <br />{        <br />float c=0;   <br />float4 clr1;       <br />clr1= tex2D(tex1, uv.xy); </p>          <p>    float4 Color;      <br />Color= tex2D( input , uv.xy);       <br />c=clr1.r * Color.r;       <br />Color.r=c+Color.r*(1-((1-Color.r)*(1-clr1.r)-c)); </p>          <p>    c=clr1.g * Color.g;      <br />Color.g=c+Color.g*(1-((1-Color.g)*(1-clr1.g)-c)); </p>          <p>    c=clr1.b * Color.b;      <br />Color.b=c+Color.b*(1-((1-Color.b)*(1-clr1.b)-c)); </p>          <p>    return Color;        <br />}</p>       </td>     </tr>      <tr>       <td valign=\"top\" width=\"265\">Exclusion    <br /><a href=\"http://lh6.ggpht.com/rravuri/SKD5N8imNNI/AAAAAAAAAUQ/7aEift8KmN8/s1600-h/Exclusion%5B3%5D.png\"><img alt=\"Exclusion\" src=\"http://lh6.ggpht.com/rravuri/SKD5OuMDl2I/AAAAAAAAAUU/ELEUmWqdDqA/Exclusion_thumb%5B1%5D.png?imgmax=800\" width=\"240\" height=\"209\" /></a> </td>        <td valign=\"top\" width=\"364\">         <p>sampler2D input : register(s0);<br />sampler2D tex1 : register(s1);<br /></p>          <p>float4 main(float2 uv : TEXCOORD) : COLOR      <br />{        <br />float4 clr1;       <br />clr1= tex2D(tex1, uv.xy); </p>          <p>    float4 Color;      <br />Color= tex2D( input , uv.xy); </p>          <p>     Color.r+=clr1.r-clr1.r * Color.r;      <br /> Color.g+=clr1.g-clr1.g * Color.g;       <br /> Color.b+=clr1.b-clr1.b * Color.b; </p>          <p>    return Color;        <br />}</p>       </td>     </tr>      <tr>       <td valign=\"top\" width=\"265\"><br /></td>        <td valign=\"top\" width=\"364\"><br /></td>     </tr>   </tbody></table>  <p>Download <a href=\"http://www.codeplex.com/ShaderPad\" target=\"_blank\">ShaderPad</a> and play with these effects..</p></p></div><div class=\"entry\"><div class=\"title\"><a href=\"http://rakeshravuri.blogspot.com/2008/08/new-properties-in-shadereffect-class.html\">New Properties in ShaderEffect Class</a></div><div class=\"moreinfo\"><span class=\"date\">Tuesday, August 12, 2008</span> &nbsp;|&nbsp; <span class=\"source\">From <a target=\"_blank\" href=\"http://rakeshravuri.blogspot.com/feeds/posts/default/-/ShaderPad?alt=rss\">Random Bits</a></span></div><p><p>With .NET 3.5 RTM release today, I see that there are following new properties added to the ShaderEffect class.</p>  <p>for setting the register index that contains the size of the image to which the effect is being applied to. documentation on web is complete with examples on this.</p>  <ul>   <li>int DdxUvDdyUvRegisterIndex </li> </ul>  <p>For specifying the boundaries of the effect, this can be used to create glow like effects when so that the platform knows that the effect can determine output color outside the bounds of the UIElement. No Samples in the documentation.</p>  <ul>   <li>double PaddingBottom </li>    <li>double PaddingLeft </li>    <li>double PaddingRight </li>    <li>double PaddingTop </li>    <li>ShaderRenderMode property on PixelShader</li> </ul>  <p>I shall be adding support for these in the <a href=\"http://rakeshravuri.blogspot.com/2008/08/shaderpad-wpf-shadereffect-workbench.html\" target=\"_blank\">ShaderPad</a> shortly.</p>  </p></div><div class=\"entry\"><div class=\"title\"><a href=\"http://rakeshravuri.blogspot.com/2008/08/shaderpad-wpf-shadereffect-workbench.html\">ShaderPad - WPF ShaderEffect's Workbench</a></div><div class=\"moreinfo\"><span class=\"date\">Monday, August 11, 2008</span> &nbsp;|&nbsp; <span class=\"source\">From <a target=\"_blank\" href=\"http://rakeshravuri.blogspot.com/feeds/posts/default/-/ShaderPad?alt=rss\">Random Bits</a></span></div><p><p><a href=\"http://lh6.ggpht.com/rravuri/SKDEomQzLEI/AAAAAAAAATA/5wNHEcU0Ig4/s1600-h/splogox%5B4%5D.png\"><img style=\"border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px\" height=\"160\" alt=\"splogox\" src=\"http://lh3.ggpht.com/rravuri/SKDEp4tf5EI/AAAAAAAAATE/E-ru3qoJWcg/splogox_thumb%5B2%5D.png?imgmax=800\" width=\"160\" align=\"left\" border=\"0\" /></a> ShaderPad is a application like XamlPad / LinqPad , it is meant to server as WPF ShaderEffect Workbench. The ShaderEffect is a PixelShader based Effect that an be applied to any UIElement in WPF. This feature is available only in WPF 3.5 SP1</p>  <p><a href=\"http://lh5.ggpht.com/rravuri/SKDEsiQWyFI/AAAAAAAAATI/Dmr_4OntfBQ/s1600-h/ShaderPad_release080811_sc1%5B3%5D.png\"><img height=\"201\" alt=\"ShaderPad_release080811_sc1\" src=\"http://lh6.ggpht.com/rravuri/SKDEuJxV6DI/AAAAAAAAATM/c898Re4gYM8/ShaderPad_release080811_sc1_thumb%5B1%5D.png?imgmax=800\" width=\"240\" /></a> </p>  <p>This release also includes the ability to animate the input variables that are passed to the ShaderEffect.</p>  <p>In next release will add the ability to load effects from a common location on web, and save to web, this allow people to more freely share their effects.</p>  <p>   <br /><strong>Pre Requisites</strong>     <br />.NET 3.5 SP1 : <a href=\"http://www.microsoft.com/downloads/info.aspx?na=22&amp;p=7&amp;SrcDisplayLang=en&amp;SrcCategoryId=10&amp;SrcFamilyId=&amp;u=%2fdownloads%2fdetails.aspx%3fFamilyID%3dab99342f-5d1a-413d-8319-81da479ab0d7%26DisplayLang%3den\" target=\"_blank\">Download</a>.     <br />Direct X SDK : <a href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=519aae99-b701-4ca1-8495-39ddde9d7030&amp;DisplayLang=en\">Download June 2008</a>.</p>  <p><a href=\"http://lh4.ggpht.com/rravuri/SKDEvCwPc5I/AAAAAAAAATQ/x3TeFtV1isk/s1600-h/Download%5B6%5D.png\"><img style=\"border-right: 0px; border-top: 0px; border-left: 0px; border-bottom: 0px\" height=\"53\" alt=\"Download\" src=\"http://lh5.ggpht.com/rravuri/SKDEwU_XjLI/AAAAAAAAATU/LiPr07swPuw/Download_thumb%5B4%5D.png?imgmax=800\" width=\"53\" align=\"left\" border=\"0\" /></a> Download the Releases and source code at <a href=\"http://www.codeplex.com/ShaderPad\" target=\"_blank\">CodePlex</a>.</p>  <p>Lookout for Effects releases soon....</p>  </p></div><div class=\"accentbar\"><span class=\"left\">&nbsp;</span>Random Bits News Feed<span class=\"right\">&nbsp;</span></div></div></div><div class=\"ClearBoth\"></div>",
  "TagList": "WPF,.NET 3.5,Shader,ShaderEffect,PixelShader,Effect,",
  "LastEdited": "2008-08-11T17:39:10.19-07:00"
}
{
  "ProjectName": "DotNetLib",
  "Title": ".netlib",
  "Description": "A library of useful extensions to the .NET library.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h4>Project Description</h4>\rA library of useful extensions to the .NET library.<br />\n<h4>Goals</h4>\rEach component should adhere to the following principals:\n<ul><li>Flexible - allow you to easily complete the majority of tasks but provide enough hooks to handle the rest</li>\n<li>Reusable - represent a distinct function, behavior, or process that depend on other components as needed</li>\n<li>Testable - utilize standard testing facilities</li>\n<li>Understandable - use snippets, samples and self documentation</li>\n<li>Usable - easily integrated with existing or new applications, configured programmatically or through the designer</li>\n<li>Valuable - provide an improved service or satisfy a deficiency in the base framework</li></ul>\n\n<h4>Status</h4>\rThis project has only recently begun, inspired by a desire to cleanup the various libraries and classes that I have developed over the years.  I will be fully integrating those as this progresses. \n<ul><li><b>DotNetLib</b>\n<ul><li><a href=\"https://dotnetlib.codeplex.com/wikipage?title=ArrayExtensions&referringTitle=Home\">ArrayExtensions</a> - extensions and utility functions for dealing with arrays</li>\n<li><a href=\"https://dotnetlib.codeplex.com/wikipage?title=BooleanExtensions&referringTitle=Home\">BooleanExtensions</a> - extensions and utility functions for dealing with boolean types</li>\n<li><a href=\"https://dotnetlib.codeplex.com/wikipage?title=DataEventArgs&referringTitle=Home\">DataCancelEventArgs</a> - CancelEventArgs derivative that allows you to attach a piece of data</li>\n<li><a href=\"https://dotnetlib.codeplex.com/wikipage?title=DataEventArgs&referringTitle=Home\">DataEventArgs</a> - EventArgs derivative that allows you to attach a piece of data</li>\n<li><a href=\"https://dotnetlib.codeplex.com/wikipage?title=DateTimeExtensions&referringTitle=Home\">DateTimeExtensions</a> - extensions and utility functions for dealing with dates</li>\n<li><a href=\"https://dotnetlib.codeplex.com/wikipage?title=ObjectExtensions&referringTitle=Home\">ObjectExtensions</a> - extensions and utility functions for dealing with objects</li></ul></li>\n<li><b>DotNetLib.Collections.ObjectModel</b>\n<ul><li>Dictionary(TKey, TValue) - Base class for custom Dictionary types, similar in concept to System.Collections.ObjectModel.Collection(T)</li></ul></li>\n<li><b>DotNetLib.Compact</b>\n<ul><li>Video - a class to programmatically turn on of off the display of a Smart Device</li></ul></li>\n<li><b>DotNetLib.Data</b>\n<ul><li>DataRowExtensions - extensions and utility functions for dealing with data rows</li>\n<li>DataTableExtensions - extensions and utility functions for dealing with data tables</li>\n<li>IDataReaderExtensions - extensions and utility functions for dealing with data readers</li>\n<li>IDbCommandExtensions - extensions and utility functions for dealing with data commands</li>\n<li>IDbConnectionExtensions - extensions and utility functions for dealing with data connections</li></ul></li>\n<li><b>DotNetLib.Drawing</b>\n<ul><li>ImageExtensions - extension class for an Image to provide resizing, gray scale, byte array conversions, and alpha blending</li></ul></li>\n<li><b>DotNetLib.IO</b>\n<ul><li>FileInfoExtensions - extensions and utility functions for dealing with files</li>\n<li>IniFile - INI file reader/writer</li></ul></li>\n<li><b>DotNetLib.Security</b>\n<ul><li>HashExtensions - extensions and utility functions for dealing with hashes</li>\n<li>PronounceablePasswordGenerator - generator that produces pronounceable, easy to remember and easy to type passwords</li></ul></li>\n<li><b>DotNetLib.ServiceProcess</b>\n<ul><li>TaskServiceBase - simple base class for windows services that run a task at a certain frequency</li></ul></li>\n<li><b>DotNetLib.Text</b>\n<ul><li>StringBuilderExtensions - extensions and utility functions for dealing with string builders</li></ul></li>\n<li><b>DotNetLib.Windows</b>\n<ul><li>HotKeyHandler - a class to manage system-level hot-keys</li>\n<li>Shell - a class that wraps some Windows shell function (like moving a file to Recycle Bin, adding a file to the Recent Docs menu...)</li>\n<li>SingleProgramInstance - a class to manage applications that must be single instanced</li></ul></li>\n<li><b>DotNetLib.Windows.Forms</b>\n<ul><li>CommandLink - Vista styled CommandLink that uses native support if available, fails back to custom painting for legacy OS support</li>\n<li>LinkLabel - automatically choose a more Vista appropriate LinkColor and provides a convenience property for auto launching a file/program/uri.</li>\n<li>ListView - enables Vista styling as appropriate</li>\n<li>MessageBoxHelper - utility functions for automatically handling RTL for message boxes</li>\n<li>ProgressDialog - a common dialog like form for showing progress for a long running task</li>\n<li>TextBox - enables cue banner functionality as appropriate</li>\n<li>TreeView - enables Vista styling as appropriate</li>\n<li>VisualStylesProvider - enables Vista styling as appropriate without having to change the types of the controls on your form</li>\n<li>Wizard - Vista styled Wizard that is custom implemented, <a href=\"https://dotnetlib.codeplex.com/workitem/3294\">planned refactoring</a> to utilize built in wizard support on Vista</li></ul></li></ul>\n<br />Please use the <a href=\"http://www.codeplex.com/DotNetLib/WorkItem/List.aspx\">issue tracker</a> and <a href=\"http://www.codeplex.com/DotNetLib/Thread/List.aspx\">discussion features</a> of this project to communicate your ideas or frustrations.</div><div class=\"ClearBoth\"></div>",
  "TagList": ".NET,Library,Framework,Wizard,Controls,Extension Methods,",
  "LastEdited": "2010-10-08T21:51:54.347-07:00"
}
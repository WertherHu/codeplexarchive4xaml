{
  "ProjectName": "milo",
  "Title": "Milo - Model to Control code generator for ASP.NET MVC",
  "Description": "Milo is a code generator that take the MVC Model and generates a control class which wraps each model class. These controls can then be used instead of the model. This allows us to simplify the logic in both the views and controllers.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />Milo is a code generator that take the MVC Model and generates a control class which wraps each model class. These controls can then be used instead of the model. This allows us to simplify the logic in both the views and controllers.<br /><br />Using Milo makes it easy to:\n<ul><li>Avoid magic strings</li>\n<li>Use partial sub views, including canonical naming of <b>&lt;input&gt;</b> tags</li>\n<li>Do GUI type stuff on model properties in the controller</li>\n<li>Add actions in the controller rather than the view</li>\n<li>Probably other stuff</li></ul>\n<br /><b>But what is it?</b><br />Milo is a combined framework and code generator:\n<ul><li>The code generator analysises the MVC Model and generates a set on controls classes. These control class expose the model class properties as GUI-like controls</li>\n<li>The milo framework is used as the basis for the control classes</li></ul>\n<br /><b>Examples</b><br />Use control class in the controller<br /><pre>\nCustomer customer = factory.GetCustomerByCode(id);\nCustomerControl control = new CustomerControl(customer);\n</pre><br />Render a property in the  view<br /><pre>\n&lt;%= Html.RenderFieldControl(ViewData.Model.Title) %&gt;\n</pre><br />Use a partial view to render a object property<br /><pre>\n&lt;% Html.RenderPartial(&quot;Address&quot;, ViewData.Model.DeliveryAddress); %&gt;\n</pre><br />Set an action link in the controller instead of the view<br /><pre>\ncontrol.SaveTrigger.AttachTriggerAction&lt;CustomerController&gt;(c =&gt; c.Save());\n</pre><br /><br /><b>Lastly</b><br />Note that this is very much a demonstration of ideas of the moment. It is neither complete or elegant. However, if there is interest, I think it could evolve into quite a neat tool.</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2009-04-06T23:52:30.217-07:00"
}
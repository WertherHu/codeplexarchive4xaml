{
  "ProjectName": "TweensLib4WPF",
  "Title": "TweensLib4WPF - An easy using library of WPF animation.",
  "Description": "TweensLib4WPF is an easy using library of WPF animation, provide a better interface to create and manage the UI elements' animations.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><span style=\"color:#ff0000\">**This project is now uploading source code, if you have some ideas, or if you are interested in it, welcome and please send me email: a3824036@126.com .**</span><br>\r\n<span style=\"color:#ff0000\">**And after I put the first releases version, I'll open the job posting.**</span><br>\r\n<span style=\"color:#ff0000\">**Have fun.**</span></p>\r\n<p><span style=\"color:#ff0000\">**这个项目目前在上传源代码，如果你有啥好想法或者对此感兴趣，请Email我：a3824036@126.com。**</span><br>\r\n<span style=\"color:#ff0000\">**我会在第一个释出版本以后，开放加入信息。**</span><br>\r\n<span style=\"color:#ff0000\">**祝各位开心。**</span></p>\r\n<h1>Introduction</h1>\r\n<p>TweensLib4WPF is an easy using library of WPF animation, provide a better interface to create and manage the UI elements' animations.<br>\r\n<br>\r\nThe goal of this project is to make a library include program logic and some small utilities and a easy using class interface.<br>\r\n<br>\r\n// 这是一个用来更好的添加和管理WPF程序动画的一个库，提供了一些程序逻辑和简单的小工具，使得动画更加简单方便。并且提供良好的接口以供调用。</p>\r\n<h1>Quickview</h1>\r\n<p>Usually we add a animation in XAML file like this:<br>\r\n// 通常我们在XAML里加入动画是这样的：</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Button</span> <span style=\"color:red\">Name</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">button1</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Click</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">button1_Click</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">&gt;</span>\n                A button\n            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Button.Triggers</span><span style=\"color:blue\">&gt;</span>\n                <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">EventTrigger</span> <span style=\"color:red\">RoutedEvent</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Button.Click</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">&gt;</span>\n                    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">BeginStoryboard</span><span style=\"color:blue\">&gt;</span>\n                        <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">Storyboard</span><span style=\"color:blue\">&gt;</span>\n                            <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">DoubleAnimation</span> \n                                <span style=\"color:red\">Storyboard.TargetName</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">myRectangle</span><span style=\"color:black\">&quot;</span>\n                                <span style=\"color:red\">Storyboard.TargetProperty</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Opacity</span><span style=\"color:black\">&quot;</span> \n                                <span style=\"color:red\">From</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">1</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">To</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">0</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">Duration</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">0:0:1</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">AutoReverse</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">True</span><span style=\"color:black\">&quot;</span> <span style=\"color:blue\">/&gt;</span>\n                        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Storyboard</span><span style=\"color:blue\">&gt;</span>\n                    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">BeginStoryboard</span><span style=\"color:blue\">&gt;</span>\n                <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">EventTrigger</span><span style=\"color:blue\">&gt;</span>\n            <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Button.Triggers</span><span style=\"color:blue\">&gt;</span>\n        <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">Button</span><span style=\"color:blue\">&gt;</span>\n</pre>\r\n</div>\r\n<p><br>\r\n<br>\r\nThis's all right. However sometimes we have to create animation in the code, so we create a animation just like previous one, we do like this:<br>\r\n// 这样是正确的，但有时候我们想在代码里创建动画，我们在代码里建立跟前一个动画一样的动画，一般这么做：<br>\r\n<br>\r\n</p>\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> button2_Click(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e) <br>{<br>    Storyboard myStoryboard = <span style=\"color:blue\">new</span> Storyboard(); <br>    DoubleAnimation myDoubleAnimation = <span style=\"color:blue\">new</span> DoubleAnimation(); <br>    myDoubleAnimation.SetValue(Storyboard.TargetNameProperty, myRectangle.Name); <br>    myDoubleAnimation.SetValue(Storyboard.TargetPropertyProperty, <span style=\"color:blue\">new</span> PropertyPath(Rectangle.OpacityProperty)); <br>    myDoubleAnimation.From = 1; <br>    myDoubleAnimation.To = 0; <br>    myDoubleAnimation.Duration = <span style=\"color:blue\">new</span> Duration(<span style=\"color:blue\">new</span> TimeSpan(0, 0, 1)); <br>    myDoubleAnimation.AutoReverse = <span style=\"color:blue\">true</span>; <br>    myStoryboard.Children.Add(myDoubleAnimation); <br>    myStoryboard.Begin(myRectangle); <br>}\n\n</pre>\r\n<p><br>\r\n<br>\r\nOK, you see, though this is a quite simple animation, the code sees fat and unreadable.<br>\r\nSo, this project provide a method to call probably like this:<br>\r\n// 我们可以看到虽然这是个很简单的动画，但是用代码实现代码量略多，并且看起来费劲。<br>\r\n// 所以这个项目提供了一个方法来调用，大约像这样：</p>\r\n<pre><div style=\"color:black; background-color:white\"><pre> <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> button2_Click(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e) \n{\n    TweensLib4WPF.Begin(myRectangle, TweenHash( \n        <span style=\"color:#a31515\">&quot;Property&quot;</span>, <span style=\"color:blue\">new</span> PropertyPath(Rectangle.OpacityProperty),\n        <span style=\"color:#a31515\">&quot;From&quot;</span>, 1, \n        <span style=\"color:#a31515\">&quot;To&quot;</span>, 0, \n        <span style=\"color:#a31515\">&quot;LoopType&quot;</span>, TweensLib4WPF.LoopType.PingpongOnce \n        )); \n}\n</pre>\n</div>\n</pre>\r\n<p><br>\r\n<span style=\"color:#808080\"><em>Note: This is not the final interface.</em></span><br>\r\n<span style=\"color:#808080\"><em>注：这不是最终的接口</em></span></p>\r\n<p>&nbsp;</p>\r\n<p>So, This is a small example of TweensLib4WPF~<br>\r\n// 这就是TweensLib4WPF的一个小例子~</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "C#,WPF,Animation,.net framework 4.0,",
  "LastEdited": "2013-03-05T06:02:02.867-08:00"
}
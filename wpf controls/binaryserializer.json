{
  "ProjectName": "binaryserializer",
  "Title": "BinarySerializer",
  "Description": "A declarative serialization framework for controlling formatting of data at the byte level.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<h1>BinarySerializer</h1>\r\n<p>A declarative serialization framework for controlling formatting of data at the byte level.&nbsp; Jump to\r\n<a href=\"https://binaryserializer.codeplex.com/documentation\">docs</a> for more info and a walkthrough.</p>\r\n<h3>Moved to&nbsp;<a href=\"https://github.com/jefffhaynes/BinarySerializer\">https://github.com/jefffhaynes/BinarySerializer</a></h3>\r\n<h3>Or nuget&nbsp;<a href=\"https://www.nuget.org/packages/BinarySerializer/2.4.1\">https://www.nuget.org/packages/BinarySerializer</a></h3>\r\n<h2>Features</h2>\r\n<ul>\r\n<li>Field lengths/offset </li><li>Collections (implicit/explicit termination) </li><li><strong>Bindings</strong> </li><li>Conditionals </li><li>Subtypes </li><li>Converters </li><li>Enum Support (string or value)&nbsp; </li><li>Member Streams </li><li>MemberSerialized/MemberDeserialized events </li><li>Member-level Big/Little Endian Support </li><li>Non-seekable stream support </li><li>IBinarySerializable </li><li>Nullable types </li></ul>\r\n<h2>Attributes</h2>\r\n<table border=\"0\" width=\"400\" cellspacing=\"0\" cellpadding=\"2\">\r\n<tbody>\r\n<tr>\r\n<td valign=\"top\" width=\"300\">&nbsp;</td>\r\n<td align=\"center\" valign=\"top\"><strong>Bindable</strong></td>\r\n<td align=\"center\" valign=\"top\" width=\"200\"><strong>Non-seek Support</strong></td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>Ignore</strong></td>\r\n<td align=\"center\" valign=\"top\">&nbsp;</td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\" width=\"200\"><strong>SerializeAs</strong></td>\r\n<td align=\"center\" valign=\"top\">&nbsp;</td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>SerializeAsEnum</strong></td>\r\n<td align=\"center\" valign=\"top\">&nbsp;</td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>FieldOffset</strong></td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n<td align=\"center\" valign=\"top\">&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>FieldLength</strong></td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>FieldCount</strong></td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>Subtype</strong></td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>SerializeWhen</strong></td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>SerializeUntil</strong></td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n<td align=\"center\" valign=\"top\">&nbsp;</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>ItemLength</strong></td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n</tr>\r\n<tr>\r\n<td valign=\"top\"><strong>ItemSerializeUntil</strong></td>\r\n<td align=\"center\" valign=\"top\" width=\"100\">Item Bindable</td>\r\n<td align=\"center\" valign=\"top\">Yes</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h2>Notes</h2>\r\n<p>This framework was developed largely to enable interoperability with legacy systems.&nbsp; While it could be used for data storage or hibernation, that was not the intention and there are likely better frameworks (and approaches, frankly) for that sort of\r\n thing.</p>\r\n<p>See the iso9660 project or the unit tests for example usages.</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": ".NET,C#,binary,hibernation,formatting,serialization,",
  "LastEdited": "2014-11-23T19:59:21.213-08:00"
}
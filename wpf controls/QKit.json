{
  "ProjectName": "QKit",
  "Title": "QKit",
  "Description": "A WP8.1 library that provides various controls and classes that will help developers quickly and easily augment their apps to behave more like native apps.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />A WP8.1 library that provides various controls and classes that will help developers quickly and easily augment their apps to behave more like native apps.<br />QKit is a WinRT library designed for Windows Phone 8.1 that provides various controls and classes that will help developers quickly and easily augment their apps to behave more like native apps. Not only will controls look and behave as closely as possible to their native counterparts, they will also be flexible and easy to use. Every QKit control, including JumpList and ListPlaceholder, is designed with extra care to match the UX of Windows Phone so they feel right at home in a Windows Phone app the moment you drop them in. It&#39;s not easy to get the look and feel of every control right when implementing from scratch but now you don&#39;t have to worry. Download and start coding now.<br /><br /><b>Download</b><br /><a href=\"https://www.nuget.org/packages/QKit/\">https://www.nuget.org/packages/QKit/</a><br /><br /><b>Release Notes</b><br /><u>v0.4.1</u><br />Bug Fixes\n<ul><li>Changed EdgeSelectButton to derive from Button instead of ButtonBase.</li>\n<li>JumpList pickers now support theme changes during runtime. No need to restart app anymore.</li>\n<li>Improved Light theme colors to better match OS for JumpListPickers.</li>\n<li>Simplified GenericJumpList picker items for performance increases.</li>\n<li>Renamed incorrectly named JumpListItemBackgroundBrush to JumpListGroupHeaderBackgroundBrush and JumpListItemTextForegroundBrush to JumpListGroupHeaderTextForegroundBrush</li></ul>\n<br /><u>v0.4.0</u>\n<ul><li>New MultiSelectListView with edge selection</li></ul>\n<blockquote><b>IMPORTANT:</b> Margins were changed for JumpList controls. To compensate, add 19px left margin to your item templates that appear in a JumpList OR override the resource key &quot;JumpListHeaderItemMargin.&quot;</blockquote>\n<u>v0.3.3</u>\n<ul><li>InputAwarePanel now scrolls text input controls into view if it&#39;s inside a ScrollViewer. No support for horizontal scrolling yet. Does not scroll to cursor for RichEditBox.</li>\n<li>Added new sample page mocking up a forms input page. Used to demonstrate InputAwarePanel&#39;s new scroll into view feature.</li>\n<li>Minor bugs fixes.</li></ul>\n<br /><b>Controls</b>\n<ul><li><b>AlphaJumpList &amp; GenericJumpList</b> - No need to fiddle with SemanticZooms and endless styles to get your JumpList experience right. Just wrap these controls around a ListView and it&#39;s magically upgraded into a JumpList.</li></ul>\n<blockquote><img src=\"http://modernography.files.wordpress.com/2014/06/alphagroupingopen.png?w=180&amp;h=300\" /> <img src=\"http://modernography.files.wordpress.com/2014/06/alphagroupingopenjp.png?w=180&amp;h=300\" /></blockquote><blockquote>*Globalization support for all Windows Phone languages</blockquote><blockquote>*Proper scaling and adaptive layout for all screen sizes, screen resolutions, and orientation</blockquote><blockquote>*Performance tested to be responsive</blockquote><blockquote>*Support for high contrast mode</blockquote><ul><li><b>ListPlaceholder</b> - An empty list is a confusing list but adding a TextBlock + logic to show a message when that happens takes too much time and effort. With ListPlaceholder control, just point it to a ListView/GridView to &quot;watch&quot; and a message will automatically display whenever that watched list is not showing any items.</li></ul>\n<blockquote><img src=\"http://modernography.files.wordpress.com/2014/07/listplaceholderscreenshot1-e1405696353492.png?w=384&amp;h=160\" /></blockquote><ul><li><b>InputAwarePanel</b> - WP shifts the page up rather than shrinking it when the keyboard deploys so the focused TextBox is not obscured. That&#39;s great until you need to scroll to the next TextBox because everything below that TextBox is still obscured by the keyboard. And a ScrollViewer does help because it doesn&#39;t know it&#39;s under a keyboard. With the InputAwarePanel, the panel shrinks rather than shifts so any ScrollViewer inside it will adjust properly and allow you to scroll to all TextBoxes. Great for forms or chat scenarios. Behaves almost like the native OS.</li></ul>\n<blockquote><img src=\"https://modernography.files.wordpress.com/2014/08/iapensurevisibletextinput1.png?w=180&amp;h=300\" /></blockquote><blockquote>*Animation built in with multiple modes for best performance and/or experience</blockquote><blockquote>*Auto scroll into view supported</blockquote><blockquote>*Automatic layout readjustments for orientation change and keyboard size change</blockquote><ul><li><b>MultiSelectListView</b> - While the built in ListView control supports multiple selection, the animation to display the CheckBoxes are not pleasant or accurate to the OS. With the MultiSelectListView, the animation and UX is nearly identical to the multiselection lists found in the OS. Not only that, this control allows you to invoke multiselection mode by tapping on the left edge of the item just like in the email app.</li></ul>\n<blockquote><img src=\"https://modernography.files.wordpress.com/2014/08/multiselectlistviewselectingmid1.png?w=180&amp;h=300\" /></blockquote>\n<b>Classes</b>\n<ul><li><b>JumpListHelper</b> - Groups and sort lists of objects easily properly for JumpLists. Results in the exact same grouping and sorting as native WP found in the apps list or people hub.</li>\n<li><b>JumpListGroup</b> - A keyed list representing a single group of a JumpList. A list of JumpListGroups will represent the entire JumpList. Contains separate key and display key for flexibility of sorting and manipulation of groups.</li></ul></div><div class=\"ClearBoth\"></div>",
  "TagList": "WPRT,JumpList,WP8.1,",
  "LastEdited": "2014-09-07T09:53:21.273-07:00"
}
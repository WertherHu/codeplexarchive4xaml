{
  "ProjectName": "ocsm",
  "Title": "OpenAFS Client Service Manager",
  "Description": "The project is to develop a MMC Snap-In for managing OpenAFS Client Service. This will enable OpenAFS users to control the service in an efficient way with a better interface than the existing one. The project will be developed in C# on Microsoft Windows platform.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">The OpenAFS Client Service is managed with a control panel utility that provides a mixture of user and administrative functionalities. The service is highly configurable and yet only a small fraction of the options can be adjusted via the existing AFS Control Panel. The majority must be set by manually adding or modifying registry values. Also the control panel is ugly, out-of-date and does not separate end user functionalities from administrator functionalities. These shortcomings can lead to a sour user experience.<br /><br />In order to improve user experience, we propose that the control panel should only contain functionalities that are applicable to the user and entire administrative functionalities should be moved to Microsoft Management Console (MMC) which has now become the standard for configuring policies for Windows Services. The aim of the project will be to develop a new tool for OpenAFS Client administrator functionalities built on the MMC framework. The tool will firstly, allow configuring all administrative functionalities from a single dedicated place so that the user and administrative functionalities are kept separated from each other and secondly, incorporate many new options that are currently not provided by the OpenAFS Control Panel.<br /><br />The tool will first load the current configuration of the system, display it to the administrator, give him the options to change the values of current configuration and then save the new values back to the appropriate destination upon confirmation by the administrator.<br /><br />Basically, the project consists of two parts. First is the graphical user interface that contains various screens under the OpenAFS Client Service section in MMC. The role of each screen will be to control a specific service like tweaking performance, managing cache or setting login preferences, etc in a very easy-to-use manner. Second is the back-end to provide a way of interaction between the GUI and the actual service parameters. The control flow diagram of the project is as follows:<br /><br /><img src=\"/projects/ocsm/080cdea1-da41-48d8-a099-d1ed0be75d04\" alt=\"openafs.jpg\" title=\"openafs.jpg\" /></div><div class=\"ClearBoth\"></div>",
  "TagList": "C#,MMC,OpenAFS,Microsoft,",
  "LastEdited": "2009-09-16T20:13:38.377-07:00"
}
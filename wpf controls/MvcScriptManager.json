{
  "ProjectName": "MvcScriptManager",
  "Title": "MVC ScriptManager",
  "Description": "MvcScriptManager is aimed to port certain key features available in AjaxControlToolkit's ToolkitScriptManager  into  the current ASP.NET MVC Framework. You will be able to use it as a control in your ASP.NET MVC application.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h2>Project Description</h2>\rMvcScriptManager is aimed to port certain key features available in AjaxControlToolkit&#39;s ToolkitScriptManager  into  the current ASP.NET MVC Framework. You will be able to use it as a control in your ASP.NET MVC application.\n<h2>Features</h2>\r<ol><li>Script combination (or concatenation). Scripts declared with MvcScriptManager will be combined on the fly into a single script file request when the page is rendered.</li>\n<li>Script minification (or crunching) in release mode. Minification process is done only once at the first request that references the specific script. Subsequent requests will use the crunched script content in cache (see #5 for detail). Crunching can be enabled/disabled for each script.</li>\n<li>Render localized resources for stand-alone script files. Localized strings will be appended to the script if specified.</li>\n<li>Support configurable HTTP compression and expiration setting when outputing scripts.</li>\n<li>Script caching with file dependency. Script file content is cached so that rendering combined script file will be much more performant. Cache dependency is linked to the physical file therefore any script update in the file system will be reflected in the cache instantly.</li>\n<li>Support rendering scripts in debug/release mode based on the running environment.</li>\n<li>Resolving different paths for stand-alone script files.</li>\n<li>Support multiple MvcScriptManagers on a single page (or master page). Support both Master and Slave rendering mode so that scripts declared with one ScriptManager can be rolled over to another one for rendering.</li>\n<li>Suport web farm scenario.</li></ol>\n\n<h2>What MvcScriptManager Won&#39;t Offer</h2>\rBelow are the things MvcScriptManager doesn&#39;t (and probably won&#39;t) offer in case you are used to using the ScriptManager and assume these features are included:\n<ul><li>Support for ASP.NET Ajax extensibility model.  In my opinion, with ASP.NET MVC Framework and jQuery, writing ajax script/extender controls is no longer necessary.</li>\n<li>Support for embedded script files. We should avoid embedding script files in assembly anyway because updates of script will require a rebuild of the project which is not ideal.</li>\n<li>Provide access to web methods from script by registering web services. This is overhead and you can totally avoid it by either using jQueryâ€™s AJAX utilities or Sys.Net.WebServiceProxy class available in ASP.NET AJAX client library.</li>\n<li>Support UpdatePanel and partial-page Rendering.</li></ul>\n<h2>How to Use MvcScriptManager</h2>\rPlease see the attached <a href=\"http://mvcscriptmanager.codeplex.com/Release/ProjectReleases.aspx?ReleaseId=28702#DownloadId=89469\">Readme.pdf</a>.<br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "Ajax,javascript,AJAX Control Toolkit,ASP.NET Ajax,ScriptManager,jQuery,ASP.NET MVC,MvcScriptManager,ASP.NET,MVC,MVC Framework,aspnetmvc,star,",
  "LastEdited": "2009-10-26T22:07:59.02-07:00"
}
{
  "ProjectName": "Jazz",
  "Title": "Jazz",
  "Description": "Jazz is a compact, modular framework that allows new, or existing, applications to easily employ roles, states, ACLs and void safety. Jazz provides security by allowing objects, and their methods and properties,  to have their visibility and accessibility controlled, on a per instance basis, by roles, object states and ACLs.\r\n\r\nJazz allows complete workflows to be implemented in only a few hundred lines of C# or VB code. \r\n\r\nBuild robust, secure applications quickly with Jazz.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong><br>\r\nJazz is a compact, modular framework that allows new, or existing, applications to easily employ roles, states, ACLs and void safety. Jazz provides security by allowing business objects, and their methods and properties, &nbsp;to have their visibility and accessibility\r\n controlled, on a per instance basis, by roles, object states and ACLs.</p>\r\n<p>Jazz allows complete workflows to be implemented in only a few hundred lines of C# or VB code.&nbsp;</p>\r\n<p>Build robust, secure applications quickly with Jazz. <br>\r\nUse a <a href=\"http://en.wikipedia.org/wiki/Happy_path\">&lsquo;happy path</a>&rsquo; programming style letting Jazz insure the integrity of your application.</p>\r\n<p><strong><span style=\"text-decoration:underline\">Jazz Features&nbsp; (see <a href=\"http://wiki.jazzfire.net/feature.ashx\" target=\"_blank\">\r\nfeature summary</a>):</span></strong></p>\r\n<ul>\r\n<li><a href=\"http://wiki.jazzfire.net/Role.ashx\">Roles</a> </li><li><a href=\"http://wiki.jazzfire.net/state.ashx\">States</a> </li><li><a href=\"http://wiki.jazzfire.net/Readonly.ashx\">Read only objects</a> </li><li><a href=\"http://wiki.jazzfire.net/Voidsafety.ashx\">Void Safety</a> </li><li><a href=\"http://wiki.jazzfire.net/enforcement.ashx\" target=\"_blank\">Enforcement of invalid operations</a>.\r\n</li><li>Easy, but <a href=\"http://wiki.jazzfire.net/hi.ashx\">powerful application interfacing</a>.\r\n</li><li><a href=\"http://wiki.jazzfire.net/serializer.ashx\">JSON persistence</a> </li><li><a href=\"http://wiki.jazzfire.net/ACL.ashx\">ACL for Objects</a> </li><li><a href=\"http://wiki.jazzfire.net/customization.ashx\">Customization</a> </li></ul>\r\n<p><strong>Also see</strong>&nbsp;&nbsp;<a href=\"http://www.codeproject.com/Articles/404126/Jazz-up-your-code\">CodeProject article<br>\r\n</a><a href=\"http://wiki.jazzfire.net/MainPage.ashx\" target=\"_blank\"><strong>Jazz Wiki</strong>&nbsp;&ndash; currently under construction</a></p>\r\n<p><a href=\"http://www.jazzfire.net/pages/licenses.aspx\"></a><span style=\"text-decoration:underline\"><strong><a href=\"http://www.jazzfire.net/pages/licenses.aspx\">Licensing</a></strong></span></p>\r\n<p><strong><span style=\"text-decoration:underline\">Coming Soon</span></strong></p>\r\n<ul>\r\n</ul>\r\n<ul>\r\n<li>Rules </li><li>Windows based visual editor </li><li>Dynamic Objects &ndash; Create Code on-the-fly </li><li>Database storage of Jazz objects </li><li>Dataflow </li><li>Audits </li><li>Versioning of application code. </li></ul>\r\n<div id=\"scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:f72f94bc-d083-4608-b360-3ee9ce3ccc44\" style=\"margin:0px; display:inline; float:none; padding:0px\">\r\n<div>\r\n<div>Jazz Example</div>\r\n<div style=\"background:#ddd; max-height:500px; overflow:auto\">\r\n<ol style=\"padding-bottom:0px; margin:0px 0px 0px 2.5em; padding-left:5px; padding-right:0px; background:#ffffff; padding-top:0px\">\r\n<li><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;summary&gt;</span>\r\n</li><li><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> This is a small class that demonstrates the use of states in</span>\r\n</li><li><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> a personnel request.</span>\r\n</li><li><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> The class is very simple only allowing a request to made and</span>\r\n</li><li><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> then approved.</span>\r\n</li><li><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;/summary&gt;</span>\r\n</li><li>[<span style=\"color:#2b91af\">Jazz</span>] </li><li><span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">class</span>\r\n<span style=\"color:#2b91af\">PersonnelRequest</span> : <span style=\"color:#2b91af\">\r\njObject</span> </li><li>{ </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// Constructor</span> </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">public</span> PersonnelRequest()\r\n</li><li>&nbsp;&nbsp;&nbsp; { </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">this</span>.data =\r\n<span style=\"color:#a31515\">&quot;&quot;</span>; </li><li>&nbsp;&nbsp;&nbsp; } </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">private</span> <span style=\"color:#0000ff\">\r\nstring</span> data; </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// Make a request by setting the data.</span>\r\n</li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">\r\nstring</span> Request </li><li>&nbsp;&nbsp;&nbsp; { </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">get</span> {\r\n<span style=\"color:#0000ff\">return</span> <span style=\"color:#0000ff\">this</span>.data; }\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [<span style=\"color:#2b91af\">GrantStates</span>(<span style=\"color:#a31515\">&quot;Start&quot;</span>)]\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">set</span>\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">\r\nthis</span>.data = <span style=\"color:#0000ff\">value</span>; </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">\r\n// prevent the data from being changed.</span> </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">\r\nthis</span>.EnterState(<span style=\"color:#a31515\">&quot;Approval&quot;</span>); </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </li><li>&nbsp;&nbsp;&nbsp; } </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// The approve method is only allowed to be executed when this instance is in the 'Approval' state.</span>\r\n</li><li>&nbsp;&nbsp;&nbsp; [<span style=\"color:#2b91af\">GrantStates</span>(<span style=\"color:#a31515\">&quot;Approval&quot;</span>)]\r\n</li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">\r\nvoid</span> Approve() </li><li>&nbsp;&nbsp;&nbsp; { </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// prevent the workflow from being approved again.</span>\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">this</span>.EnterState(<span style=\"color:#a31515\">&quot;Completed&quot;</span>);\r\n</li><li>&nbsp;&nbsp;&nbsp; } </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// A PersonnelRequest instance has its 'CurrentState' set to one</span>\r\n</li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// of the following states.</span>\r\n</li><li>&nbsp;&nbsp;&nbsp; [<span style=\"color:#2b91af\">StartState</span>] </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">void</span> Start() {} </li><li>&nbsp;&nbsp;&nbsp; [<span style=\"color:#2b91af\">State</span>] </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">void</span> Completed() {} </li><li>&nbsp;&nbsp;&nbsp; [<span style=\"color:#2b91af\">FinalState</span>] </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">void</span> Approval() {} </li><li>} </li></ol>\r\n</div>\r\n</div>\r\n</div>\r\n<p>&nbsp;</p>\r\n<div id=\"scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:f3b98916-e959-4287-b33a-c6c6bcf5f292\" style=\"margin:0px; display:inline; float:none; padding:0px\">\r\n&nbsp;</div>\r\n<div id=\"scid:9ce6104f-a9aa-4a17-a79f-3a39532ebf7c:0536e7b2-5474-4d43-af7e-ba047e2c2d6b\" style=\"margin:0px; display:inline; float:none; padding:0px\">\r\n<div>\r\n<div>Testing the example.</div>\r\n<div style=\"background:#ddd; max-height:500px; overflow:auto\">\r\n<ol style=\"padding-bottom:0px; margin:0px 0px 0px 2.5em; padding-left:5px; padding-right:0px; background:#ffffff; padding-top:0px\">\r\n<li><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;summary&gt;</span>\r\n</li><li><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> This demonstrates that an exception occurs when access is not allowed.</span>\r\n</li><li><span style=\"color:#808080\">///</span><span style=\"color:#008000\"> </span><span style=\"color:#808080\">&lt;/summary&gt;</span>\r\n</li><li>[<span style=\"color:#2b91af\">TestMethod</span>] </li><li><span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">void</span> StateExample()\r\n</li><li>{ </li><li>&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">using</span> (<span style=\"color:#2b91af\">ClientNexus</span> nexus =\r\n<span style=\"color:#2b91af\">ClientNexus</span>.Create(<span style=\"color:#2b91af\">NexusConfig</span>.DefaultVerbose()))\r\n</li><li>&nbsp;&nbsp;&nbsp; { </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">PersonnelRequest</span> myFlow =\r\n<span style=\"color:#0000ff\">new</span> <span style=\"color:#2b91af\">PersonnelRequest</span>();\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nexus.Bind(myFlow); </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// Enter some data - this will change the current state of 'myFlow' to the Approval state.</span>\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myFlow.Request = <span style=\"color:#a31515\">\r\n&quot;May I leave early on Friday?&quot;</span>; </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">try</span>\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">\r\n// Enter some more data.&nbsp; This will cause an exception.</span> </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myFlow.Request =\r\n<span style=\"color:#a31515\">&quot;I changed my mind, I want to leave Friday at noon.&quot;</span>;\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#0000ff\">catch</span> (<span style=\"color:#2b91af\">Exception</span> ex)\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">\r\nAssert</span>.IsTrue(ex <span style=\"color:#0000ff\">is</span> <span style=\"color:#2b91af\">\r\nAccessViolationException</span>); </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// 'Data' has not been changed.</span>\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">Assert</span>.AreEqual(<span style=\"color:#a31515\">&quot;May I leave early on Friday?&quot;</span>, myFlow.Request);\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// but it can be apprroved</span>\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; myFlow.Approve(); </li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#2b91af\">Assert</span>.AreEqual(<span style=\"color:#a31515\">&quot;Completed&quot;</span>, myFlow.CurrentState.Name);\r\n</li><li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:#008000\">// executing 'Approve' now will cause an exception</span>\r\n</li><li>&nbsp;&nbsp;&nbsp; } </li><li>} </li></ol>\r\n</div>\r\n</div>\r\n</div>\r\n<p>Console Output from the example:</p>\r\n<div style=\"overflow-x:scroll; overflow-y:hidden; width:625px; height:200px; border:black 1px solid\">\r\n<p style=\"width:200%\">PersonnelRequest:'3b1bb08b-de94-446b-9b75-c1dd140fc492'.GrantState:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execute Method 'set_Request' - State checked - CurrentState = Start<br>\r\nPersonnelRequest:'3b1bb08b-de94-446b-9b75-c1dd140fc492'.Change:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set Property - set_Request = May I leave early on Friday?<br>\r\nPersonnelRequest:'3b1bb08b-de94-446b-9b75-c1dd140fc492'.EnterState:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Entered the state 'Approval' via the Method 'EnterState'. The previous state is 'Start'.<br>\r\nPersonnelRequest:'3b1bb08b-de94-446b-9b75-c1dd140fc492'.GrantState:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execute Method 'set_Request' - State checked - CurrentState = Approval<br>\r\nPersonnelRequest:'3b1bb08b-de94-446b-9b75-c1dd140fc492'.AccesViolation:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Access is not allowed to 'set_Request'.&nbsp; The current state is Approval.&nbsp; Valid states are: 'Start'.<br>\r\nPersonnelRequest:'3b1bb08b-de94-446b-9b75-c1dd140fc492'.GrantState:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Execute Method 'Approve' - State checked - CurrentState = Approval<br>\r\nPersonnelRequest:'3b1bb08b-de94-446b-9b75-c1dd140fc492'.EnterState:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Entered the state 'Completed' via the Method 'EnterState'. The previous state is 'Approval'.</p>\r\n</div>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "workflow,role,state,Role-Based Security,State Machine,ACL,",
  "LastEdited": "2012-06-20T18:14:07.773-07:00"
}
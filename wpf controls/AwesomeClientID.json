{
  "ProjectName": "AwesomeClientID",
  "Title": "Awesome.ClientID",
  "Description": "Awesome.ClientID is a HTTPModule which serializes the ClientID of server controls, and page/usercontrol properties to a Json to make working with JavaScript easier without the need for outputting ClientID's. It's a solution for clean ClientIDs for .NET 2.0/3.5",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong></p>\r\n<p><strong></strong>Awesome.ClientID is a HTTPModule which serializes the ClientID of server controls, and page/usercontrol properties to a JSON Array to make working with JavaScript easier without the need for outputting ClientID's. It's a solution for clean\r\n ClientIDs for .NET 2.0/3.5<br>\r\n<br>\r\nQuick blogpost about Awesome.ClientID :)<br>\r\n<br>\r\n<a href=\"http://www.philliphaydon.com/?p=49\" target=\"_blank\">http://www.philliphaydon.com/2010/12/i-love-clean-client-ids-especially-with-net-2-0/</a></p>\r\n<p><strong>Serialized Control ID's</strong></p>\r\n<p>As we know, ClientID's are rather annoying in .NET 2.0/3.5, altho we know we have given our control a Unique ID, ASP.Net decides that it's still not unique enough and add's it's own fluff. Thats where Awesome.ClientID comes to the rescue.</p>\r\n<p>Awesome.ClientID iterates over the controls looking for specific controls such as TextBox's, Buttons, DropDownLists... etc, and serializes them to a JSON Array in the HTML document for use in JavaScript. This allows us to stop doing:</p>\r\n<p>var userNameTextbox = document.getElementById(<span style=\"color:#ff0000\">&lt;%= txtUserName.ClientID %&gt;</span>);</p>\r\n<p>And start writing something much nicer and cleaner:</p>\r\n<p>var userNameTextbox = document.getElementById(<span style=\"color:#ff0000\">controls.txtUserName</span>);</p>\r\n<p>Not only do we not have to put spaghetti code in our presentation, we can move that JavaScript into an external file!</p>\r\n<p></p>\r\n<hr>\r\n<p></p>\r\n<p><strong>Serialized Properties!&nbsp;</strong></p>\r\n<p>Another feature in Awesome.ClientID, which makes it useful for .NET 4.0, is the ability to serialize Page/User Control properties.</p>\r\n<p>All properties that are protected or public can be serialized to a JSON array at the same time the controls are serialized. Checkout the documentation for more information.</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2010-12-30T04:25:29.447-08:00"
}
{
  "ProjectName": "toolstripcustomizer",
  "Title": "ToolStrip Customizer for .NET WinForms",
  "Description": "Lightweight and easy to use tool designed to help you change look and feel of the .NET Framework ToolStrip controls: toolbars and menus.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong></p>\r\n<p>.NET ToolStrip Customizer is a lightweight and easy to use tool designed to help you generate custom color schemes (in C# and VB.NET) for .NET Framework standard&nbsp;ToolStrip controls: toolbars, menus, pop-ups, and status bars. It&nbsp;has also a set of\r\n predefined color schemes that you can use in your own WinForms applications: &ldquo;Office 2007&Prime;, &ldquo;Office 2003&Prime;, &ldquo;Visual Studio 2010&rdquo;, etc.</p>\r\n<p><strong>Features</strong></p>\r\n<ul>\r\n<li>Generates C# or VB.NET source code of the custom ColorTable classes (aka color shemes), which may be used in your .NET Windows Forms applications to change look and feel of the standard ToolStrip controls.\r\n</li><li>Has immediate&nbsp;preview of the selected color scheme right in the app's main UI (here you can check how&nbsp;<em><strong>MenuStrip</strong></em>,\r\n<em><strong>StatusStrip</strong></em>, <em><strong>ToolStrip</strong></em>, <em><strong>ToolStripContainer\r\n</strong></em>and <em><strong>ContextMenuStrip</strong></em> will look like in your app).\r\n</li><li>Can open previously generated color schemes for re-editing. </li></ul>\r\n<p><strong>How It Looks?</strong></p>\r\n<p><strong><img src=\"/projects/toolstripcustomizer/05aa3bed-6ba6-4257-8eba-1a8cc31f9e71\" alt=\"\" width=\"607\" height=\"340\"><br>\r\n</strong></p>\r\n<p><strong>How to Use Generated Files?</strong></p>\r\n<p>Include color scheme file&nbsp;created by ToolStrip Customizer in your WinForms project.&nbsp;Add a custom renderer class, that will use your color scheme. In&nbsp;example below, CustomColorTable is the name of class created by&nbsp;ToolStrip Customizer:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">class</span> MyToolStripRenderer : ToolStripProfessionalRenderer\n{\n\t<span style=\"color:blue\">public</span> MyToolStripRenderer()\n\t\t: <span style=\"color:blue\">base</span>(<span style=\"color:blue\">new</span> CustomColorTable())\n\t{\n\t}\n}</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Then you should&nbsp;use&nbsp;this class as a global ToolStrip renderer for the whole application. You can do this from a constructor of the main Form:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">public</span> MainForm()\n{\n\tInitializeComponent();\n\tToolStripManager.Renderer = <span style=\"color:blue\">new</span> MyToolStripRenderer();\n}\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>That's it!</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "winforms,Windows Forms,.NET Framework,colorizer,Toolbar,ToolStrip,ColorTable,ToolStripRenderer,",
  "LastEdited": "2014-08-22T15:59:40.767-07:00"
}
{
  "ProjectName": "portableimaginglibrary",
  "Title": "Portable Imaging Library for .NET",
  "Description": "Portable Imaging Library for asynchronous loading, modifying and saving images from any thread (out of UI thread for WPF/WP8).",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p>Main goal: asynchronous loading, modifying and saving images from any thread (out of UI thread for WPF/WP8).</p>\r\n<p>This PCL library can be used in WP8 / WPF / ASP.NET 4.5 and &#65279;.NET 4.5 applications.</p>\r\n<h2>How to use:</h2>\r\n<h3>Installation:</h3>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>PM<span style=\"color:gray\">&gt;</span> Install<span style=\"color:gray\">-</span>Package PortableImagingLibrary\r\n</pre>\r\n</div>\r\n<h3>WP8 Example:</h3>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">/// Loading PNG image from WP8 resource</span>\r\n\r\n<span style=\"color:blue\">var</span> image = <span style=\"color:blue\">new</span> PngImage();\r\n\r\n<span style=\"color:blue\">var</span> uri = <span style=\"color:blue\">new</span> Uri(<span style=\"color:#a31515\">&quot;Assets/Tiles/logo.png&quot;</span>, UriKind.Relative);\r\nStreamResourceInfo sri = Application.GetResourceStream(uri);\r\nawait image.LoadAsync(sri.Stream);\r\n\r\n<span style=\"color:green\">/// Modifying</span>\r\n\r\n<span style=\"color:blue\">int</span> x = 1;\r\n<span style=\"color:blue\">int</span> y = 1;\r\n\r\n<span style=\"color:blue\">uint</span> colorARGB = image.GetPixel(x,y); <span style=\"color:green\">// Get color of the specified point.</span>\r\ncolorARGB = colorARGB / 2; <span style=\"color:green\">// Modifying color value.</span>\r\nimage.SetPixel(x, y, colorARGB); <span style=\"color:green\">// Set color for specified pixel.</span>\r\n\r\n<span style=\"color:green\">/// Saving PNG image into isolated storage</span>\r\n\r\n<span style=\"color:blue\">var</span> fileName = <span style=\"color:#a31515\">&quot;Shared/ShellContent/newLogo.png&quot;</span>;\r\n<span style=\"color:blue\">using</span> (<span style=\"color:blue\">var</span> isoStore = IsolatedStorageFile.GetUserStoreForApplication()) {\r\n    <span style=\"color:blue\">using</span> (<span style=\"color:blue\">var</span> pngSteam = <span style=\"color:blue\">new</span> IsolatedStorageFileStream(fileName, FileMode.Create, isoStore))\r\n        await image.SaveAsync(pngSteam);\r\n    }\r\n}</pre>\r\n</div>\r\n<h3>.NET Example:</h3>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">/// Loading PNG image</span>\r\n\r\n<span style=\"color:blue\">var</span> image = <span style=\"color:blue\">new</span> Image();\r\n<span style=\"color:blue\">using</span> (<span style=\"color:blue\">var</span> pngStream = <span style=\"color:blue\">new</span> FileStream(pngFile, FileMode.Open, FileAccess.Read)) {\r\n    await image.LoadPngAsync(pngStream);\r\n}\r\n\r\n<span style=\"color:green\">/// Modifying</span>\r\n\r\n<span style=\"color:blue\">int</span> x = 1;\r\n<span style=\"color:blue\">int</span> y = 1;\r\n\r\n<span style=\"color:blue\">uint</span> colorARGB = image.GetPixel(x,y); <span style=\"color:green\">// Get color of the specified point.</span>\r\ncolorARGB = colorARGB / 2; <span style=\"color:green\">// Modifying color value.</span>\r\nimage.SetPixel(x, y, colorARGB); <span style=\"color:green\">// Set color for specified pixel.</span>\r\n\r\n<span style=\"color:green\">/// Saving P&#65279;NG image</span>\r\n\r\n<span style=\"color:blue\">using</span> (<span style=\"color:blue\">var</span> pngSteam = <span style=\"color:blue\">new</span> FileStream(pngFile, FileMode.Create, FileAccess.Write)) {\r\n    await image.SavePngAsync(pngSteam, <span style=\"color:blue\">new</span> PngSaveOptions() {\r\n        BitDepth = 8, \r\n        ColorType = ColorType.TruecolorWithAlpha \r\n    });\r\n}</pre>\r\n</div>\r\n<h3>Current limitations:</h3>\r\n<ul>\r\n<li>Only &#65279;&#65279;&#65279;&#65279;PNG image format supported; </li><li>Grayscale PNG not supported; </li><li>Saving images&nbsp;as RGB (true color)&nbsp;and ARGB (true color with alpha) PNG only.\r\n</li></ul>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2013-07-24T02:15:12.003-07:00"
}
{
  "ProjectName": "PseudoLiveSDK",
  "Title": "Pseudo Live SDK",
  "Description": "The Pseudo Live SDK is a clone of Live SDK, supports WPF, Windows.Forms, and Console Application.\r\n\r\nOriginal Live SDK *DOSE NOT SUPPORT* WPF, Windows.Forms, and Console Application. However, Pseudo Live SDK *SUPPORTS* WPF, Windows.Forms, and Console Application.\r\n\r\nPseudo Live SDK provides a APIs that enable applications to integrate single sign-on (SSO) using Windows Live ID and to access data in SkyDrive, Hotmail, and Windows Live Messenger, as same as original Live SDK.\r\n\r\n\r\n\r\n",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Project Description</h1>\r\nThe Pseudo Live SDK is a clone of <a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=28195\">Live SDK</a>, supports Desktop Applications based on WPF and Windows Forms.<br /><br />&quot;<a href=\"http://msdn.microsoft.com/en-us/library/live/hh533665.aspx\">Managed API</a>&quot; is a part of Live SDK. it supports Metro Style Application and Windows Phone Application, does not supports traditional Desktop Applications running on Windows 7 or earlier.<br /><br />Pseudo Live SDK provides APIs roughly same as &quot;Managed API&quot; for Desktop Applications running on Windows 7 or earlier.<br />\n<h1>Overview</h1>\r\nThe Pseudo Live SDK includes following classes:<br />\n<ul><li>SignInDialog, shows sign-in dialog for Windows Live ID.</li>\n<li>LiveConnectSession, stores session informations.</li>\n<li>LiveConnectClient, accesses data in SkyDrive, Hotmail, and so on</li></ul>\n\n<h1>System Requirements</h1>\r\nSupported environments:<br />\n<ul><li>Windows XP, Vista7, 8</li>\n<li>.NET Framework 3.5 SP1, 4.0, 4.5 (Client Profile is not supported)</li>\n<li>WPF and Windows Forms</li></ul>\n\n<h1>Resources</h1>\r\nSee also following links:<br />\n<ul><li><a href=\"http://msdn.microsoft.com/en-us/library/live/hh533665.aspx\">Managed API</a></li>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/live/hh243648\">REST reference</a></li></ul>\n\n<h1>Examples</h1>\r\nTo sign in to Windows Live ID, you can use the SignInDialog class.<br /><br /><pre>\nLiveConnectSession session;\n\nprivate void button1_Click(object sender, EventArgs e)\n{\n    using (var dialog = new SignInDialog())\n    {\n        dialog.ClientId = &quot;000000004C0B4104&quot;;\n        //dialog.Locale = &quot;ja&quot;;\n        dialog.Scopes = new[] { &quot;wl.signin&quot; };\n\n        //dialog.ShowInTaskbar = true;\n\n        if (dialog.ShowDialog() != DialogResult.OK) return;\n\n        this.session = dialog.Session;\n    }\n}\n</pre><br /><br />To obtain account informations, you can use LiveConnectClient class.<br /><br /><pre>\nprivate void button2_Click(object sender, EventArgs e)\n{\n    var client = new LiveConnectClient(this.session);\n\n    client.GetCompleted += this.ConnectClient_GetCompleted;\n    client.GetAsync(&quot;me&quot;);\n\n    this.button2.Enabled = false;\n}\n\nprivate void ConnectClient_GetCompleted(object sender, LiveOperationCompletedEventArgs e)\n{\n    this.button2.Enabled = true;\n\n    if (e.Error == null &amp;&amp; !e.Cancelled)\n    {\n        this.label1.Text = (string)e.Result[&quot;name&quot;];\n    }\n}\n</pre><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "Windows Live,API,Messenger,REST,SkyDrive,Windows Live ID,Live SDK,Hotmail,Microsoft ID,SDK,",
  "LastEdited": "2012-05-23T05:52:34.97-07:00"
}
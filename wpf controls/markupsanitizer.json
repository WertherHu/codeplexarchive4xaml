{
  "ProjectName": "markupsanitizer",
  "Title": "(X)HTML Markup Sanitizer",
  "Description": "The XHTML Markup Sanitizer takes untrusted (X)HTML and massages it into real, trusted XHTML.\r\n\r\nIt's particularly useful with content management systems where users are in control of markup, but you want to target XHTML1.1.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h2>Project Description</h2>\rThe XHTML Markup Sanitizer takes untrusted (X)HTML and massages it into real, trusted XHTML. While plenty of effort goes into preserving the original intent, markup validity and safety is the first priority.<br />It&#39;s particularly useful with content management systems where users are in control of markup, but you want to target XHTML1.1.<br />\n<h2>How To Get It</h2>\rThis project is <u><b>only</b></u> available on NuGet: <a href=\"http://nuget.org/List/Packages/MarkupSanitizer\">Install-Package MarkupSanitizer</a><br />\n<h2>Project Status</h2>\rThe current build supports most of the scenarios that you can throw at it. It includes a default tag profile, however this is easy to update if you grab the code. The plan from here forward is to revamp the approach to nesting and support multiple tag profiles (eg: basic formatting, no tables, etc).<br />\n<h2>Simple Examples</h2>\rThe sanitizer cleans up malformed tags, unclosed tags, and unescaped text. In doing so, it preserves correctly formatted tags and correctly escaped text.<br /><table><tr><th> Input </th><th> Output </th></tr>\n<tr><td>  text  </td><td>  &lt;p&gt;text&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;text  </td><td>  &lt;p&gt;text&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;text&lt;p&gt;  </td><td>  &lt;p&gt;text&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;text&lt;p&gt;more text  </td><td>  &lt;p&gt;text&lt;/p&gt;&lt;p&gt;more text&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;some structured text&lt;/p&gt;some free text&lt;p&gt;some more structured text&lt;/p&gt;  </td><td>  &lt;p&gt;some structured text&lt;/p&gt;&lt;p&gt;some free text&lt;/p&gt;&lt;p&gt;some more structured text&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;text&lt;li&gt;bullet  </td><td>  &lt;p&gt;text&lt;/p&gt;&lt;ul&gt;&lt;li&gt;bullet&lt;/li&gt;&lt;/ul&gt;  </td></tr>\n<tr><td>  &lt;p&gt;a broken&lt;/a&gt; tag&lt;/p&gt;  </td><td>  &lt;p&gt;a broken tag&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;a &lt;strong&gt;partial tag&lt;/p&gt;  </td><td>  &lt;p&gt;a &lt;strong&gt;partial tag&lt;/strong&gt;&lt;/p&gt;  </td></tr>\n<tr><td>  dogs &amp; cats or cats &amp;amp; dogs  </td><td>  &lt;p&gt;dogs &amp;#38; cats or cats &amp;#38; dogs&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;some &lt;b&gt;bold&lt;/b&gt; text&lt;/p&gt;  </td><td>  &lt;p&gt;some &lt;strong&gt;bold&lt;/strong&gt; text&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;some &lt;i&gt;italic&lt;/i&gt; text&lt;/p&gt;  </td><td>  &lt;p&gt;some &lt;em&gt;italic&lt;/em&gt; text&lt;/p&gt;  </td></tr></table><br />\n<h2>Secure</h2>\rThe sanitizer is based on a whitelist approach and employs the AntiXSS library. Unknown tags and attributes are stripped. Special characters are encoded (without causing double encoding either). Encoding is context aware too, so text within attributes will be encoded more aggressively.<br /><table><tr><th> Input </th><th> Output </th></tr>\n<tr><td>  dogs &amp;amp;&amp;nbsp; cats &amp; amp; &amp;#160;  </td><td>  &lt;p&gt;dogs &amp;#38;&amp;#160; cats &amp;#38; amp&amp;#59; &amp;#160;&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;&lt;a href=&quot;dogs &amp; cats&quot;&gt;text&lt;/a&gt;&lt;/p&gt;  </td><td>  &lt;p&gt;&lt;a href=&quot;dogs&amp;#32;&amp;#38;&amp;#32;cats&quot;&gt;text&lt;/a&gt;&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;form action=&quot;hacker&quot;&gt;&lt;p&gt;yo&lt;/p&gt;&lt;/form&gt;  </td><td>  &lt;p&gt;yo&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p onclick=&quot;danger();&quot;&gt;yo&lt;/p&gt;  </td><td>  &lt;p&gt;yo&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;a href=&quot;http://mysite&quot; onclick=&quot;danger();&quot;&gt;yo&lt;/a&gt;  </td><td>  &lt;a href=&quot;http://mysite&quot;&gt;yo&lt;/a&gt;  </td></tr></table><br />\n<h2>Injections</h2>\rThe sanitizer will inject tags to ensure correct nesting. In doing so, it will also prevent certain nestings.<br /><table><tr><th> Input </th><th> Output </th></tr>\n<tr><td>  &lt;p&gt;a &lt;td&gt;bit of&lt;/td&gt; text&lt;/p&gt;  </td><td>  &lt;p&gt;a &lt;/p&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;bit of&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt; text&lt;/p&gt;  </td></tr>\n<tr><td>  &lt;p&gt;Hi &lt;li&gt;there&lt;/li&gt;&lt;/p&gt;  </td><td>  &lt;p&gt;Hi&lt;/p&gt;&lt;ul&gt;&lt;li&gt;there&lt;/li&gt;&lt;/ul&gt;  </td></tr></table></div><div class=\"ClearBoth\"></div>",
  "TagList": "xhtml,html,Html Parser,HTML Builder,xhtml parser,C#,",
  "LastEdited": "2011-08-02T16:24:17.19-07:00"
}
{
  "ProjectName": "wpfextensions",
  "Title": "WPF Extensions",
  "Description": "Some extensions for the WPF framework.\nControls, attached behaviours, helper classes, etc.\n\nFor example: Zoom Control, DragBehavior, Thread-safe observable collection, etc...",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">Some extensions for the WPF framework.<br />Controls, attached behaviours, helper classes, etc.<br /><br />For example&#58; Zoom Control, DragBehavior, Thread-safe observable collection, etc...<br /><br /><b>Sample application included!</b><br /><img src=\"/projects/wpfextensions/f5e4d510-e144-40de-a6f4-5dccae1ac30e\" alt=\"WPFExtensions-v0.5.jpg\" title=\"WPFExtensions-v0.5.jpg\" /><br />\n<ul><li>Attached Behaviours\n<ul><li><b>DragBehavior</b>: you can add this Behaviour to any FrameworkElement or FrameworkContentElement based control. For the usage see the <a href=\"https://wpfextensions.codeplex.com/wikipage?title=DragBehaviour%20Sample&referringTitle=Home\">DragBehaviour Sample</a></li>\n<li><b>Animated Scroll Behaviour</b>: you can add animated scrolling behaviour to any ScrollViewer</li>\n<li><b>TextBox Command Behaviour</b>: you can add Command support to any TextBox. Command execution can be triggered in 5 different ways (Disabled, Enter, Focus, Unfocues, TextChange)</li>\n<li><b>DispatchedObservableCollection</b>: access the observable collection from a background thread while its bound to the UI in WPF</li></ul></li>\n<li>Custom Controls\n<ul><li><b>Zoom Control</b>: panning, zooming (with scroll and with zoom box), automatic fill, animated, support templates\n<ul><li>SHIFT + mouse drag: pan</li>\n<li>CTRL + mouse scroll: zoom</li>\n<li>ALT + mouse drag: zoombox</li></ul></li></ul></li>\n<li>Converters\n<ul><li><b>BoolToVisibilityConverter</b>: a simple litte IValueConverter which converts bool? to Visibility</li></ul></li>\n<li>Helper classes\n<ul><li><b>ExtLogicalTreeHelper</b>: helps to find an ancestor of any element in the LogicalTree (can navigate through Parent and TemplatedParent property).</li></ul></li></ul>\n\n<ul><li>Commands, ViewModel\n<ul><li><b>CommandSink</b>, <b>CommandSinkBinding</b> (idea, implementation: Josh Smith <a href=\"http://www.codeproject.com/KB/WPF/VMCommanding.aspx\">http://www.codeproject.com/KB/WPF/VMCommanding.aspx</a>)</li>\n<li><b>MapperCommandBinding</b>\n<ul><li>one of my ideas</li>\n<li>really handy when you want to use Microsoft&#39;s Ribbon Controls and your MVVM architecture with the CommandSinks and CommandSinkBindings</li></ul></li></ul></li></ul>\n<br /><u><b>Feature requests are welcome!</b></u></div><div class=\"ClearBoth\"></div>",
  "TagList": "wpf,Commons,HintonBR,Development,Extension,wpf Helpers,WPF Controls,",
  "LastEdited": "2009-04-27T15:38:09.44-07:00"
}
{
  "ProjectName": "s7net",
  "Title": "S7.Net",
  "Description": "This project is dedicated to use S7-Plc's from every .Net language. It's possible to read and write variables in a very easy way.\r\nThere will be controls to generate variable-list and something more.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><b>Project Description</b><br />This project is dedicated to use S7-Plc&#39;s from every .Net language. It&#39;s possible to read and write variables in a very easy way.<br />There will be controls to generate variable-list and something more.<br /><br />Generally it works.<br />Here are some samples how to use:<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Green;\">// create the plc-object</span>\nS7.PLC plc = <span style=\"color:Blue;\">new</span> PLC(CPU_Type.S7300, <span style=\"color:#A31515;\">&quot;192.168.1.130&quot;</span>, 0, 2); \n<span style=\"color:Green;\">// open the plc S7300-type</span>\nErrorCode errCode = plc.Open();      \n<span style=\"color:Green;\">// set bit 0 in marker-byte 20</span>\nplc.Write(<span style=\"color:#A31515;\">&quot;M20.0&quot;</span>, 1);            \n <span style=\"color:Green;\">// read the word-value in DataBlock 100 Word-Position 40</span>\nUInt16 b1 = (UInt16)plc.Read(<span style=\"color:#A31515;\">&quot;DB100.DBW40&quot;</span>);          \n <span style=\"color:Green;\">// close the plc</span>\nplc.Close();\r\n</pre></div><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Green;\">// create the plc-object</span>\nS7.PLC plc = <span style=\"color:Blue;\">new</span> PLC(CPU_Type.S7300, <span style=\"color:#A31515;\">&quot;192.168.1.130&quot;</span>, 0, 2); \n<span style=\"color:Green;\">// open the plc S7300-type</span>\nErrorCode errCode = plc.Open();      \n<span style=\"color:Green;\">// set bit 0 in marker-byte 20</span>\nplc.Write(<span style=\"color:#A31515;\">&quot;M20.0&quot;</span>, 1);            \n <span style=\"color:Green;\">// read the word-value in DataBlock 100 Word-Position 40</span>\nUInt16 b1 = (UInt16)plc.Read(<span style=\"color:#A31515;\">&quot;DB100.DBW40&quot;</span>);          \n <span style=\"color:Green;\">// close the plc</span>\nplc.Close();\r\n</pre></div><br /><b>And now a new function:</b><br />You define a DataBlock in the plc like:<br /><img src=\"/projects/s7net/6ffbe123-0cce-4dfd-94b6-7b3a3cd93acc\" alt=\"DB2.png\" title=\"DB2.png\" /><br /><br />Then you add a struct into your .Net application that is similiar to the DB in the plc:<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">struct</span> testStruct\n{\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> varBool0;\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> varBool1;\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> varBool2;\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> varBool3;\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> varBool4;\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> varBool5;\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> varBool6;\n\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">byte</span> varByte0;\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">byte</span> varByte1;\n\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">ushort</span> varWord0;\n\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">double</span> varReal0;\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">bool</span> varBool7;\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">double</span> varReal1;\n\n    <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">byte</span> varByte2;\n    <span style=\"color:Blue;\">public</span> UInt32 varDWord;\n}\r\n</pre></div><br />then you add the code to read or write the complete struct<br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Green;\">// reads a struct from DataBlock 1</span>\ntestStruct test = (testStruct)plc.ReadStruct(<span style=\"color:Blue;\">typeof</span>(testStruct), 1);\n\n<span style=\"color:Green;\">// change one item</span>\ntest.varDWord += 1;\n\n<span style=\"color:Green;\">// and writes it to DB2</span>\nS7.ErrorCode code = plc.WriteStruct(test, 2);\r\n</pre></div><br /><br />As you can see, it&#39;s very simple to read and write values in the plc of SIEMENS S7300-400.<br />I could&#39;nt check this on S7200. If anyone can do this I would be very glad about that.<br /><br />In future there will be some samples in the source-code.<br /><br />This is the first of my controls working with the SIEMENS-plc.<br />You can see the input and outputs of one DI/DO module.<br /><br /><img src=\"/projects/s7net/7cdf03db-d55a-4c66-a7b8-7aded6b4f377\" alt=\"DIDO.jpg\" title=\"DIDO.jpg\" /><br /><br />Here are some in and output controls for the S7300 family.<br /><img src=\"/projects/s7net/f9df77b0-d028-4ca2-bc27-18a6ef4a052b\" alt=\"DIDO2.jpg\" title=\"DIDO2.jpg\" /></div><div class=\"ClearBoth\"></div>",
  "TagList": "S7 Simatic PLC,",
  "LastEdited": "2009-10-04T04:16:09.643-07:00"
}
{
  "ProjectName": "mattstinymvc",
  "Title": "Matt's TinyMVC - MVC for ASP.NET Web Forms",
  "Description": "MattsTinyMVC enables ASP.NET Web Forms applications to be developed using the MVC (Model-View-Controller) design pattern. MattsTinyMVC features two-way data binding of any WebControl or HtmlControl, no-code state/cache management, and enables full unit-testing of your web app.\r\n\r\nFeatures \r\n\r\n* Complete Seperation of Concerns - View (web page, aspx),  Controller (command dispatcher), Model (data, business logic, commands)   \r\n\r\n* Multi-mode data binding (one-way, two-way) to any WebControl or  HtmlControl - easily bind to objects, collections, and commands with  just a few control attributes. No more awkward, non-testable binding code   \r\n\r\n* Automatic no-code, no-hassle, ViewState-free state/cache management  - choose from ASP.NET Session, ASP.NET Caching API, or a plug-in custom  caching service   \r\n\r\n* Eliminate or greatly reduce code-behind and client-side (JavaScript)  code - keep all your application code consolidated in a managed code  enviornment   \r\n\r\n * Enables unit testing of all of your web application's code  - allow designers to work independently of developers   \r\n\r\n* A tiny, lightweight implementation that stays out of your way  - You get all this, in less than 400 lines of C# code. One tiny 14KB  assembly does it all. \r\n",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong><br>\r\nMattsTinyMVC enables ASP.NET Web Forms applications to be developed using the MVC (Model-View-Controller) design pattern. MattsTinyMVC features two-way data binding of any WebControl or HtmlControl, no-code state/cache management, and enables full unit-testing\r\n of your ASP.NET Web Forms application.</p>\r\n<p><strong>Features</strong></p>\r\n<ul>\r\n<li><strong>Complete Seperation of Concerns - </strong>View (web page, aspx), Controller (command dispatcher), Model (data, business logic, commands)\r\n</li><li><strong>Multi-mode data binding (one-way, two-way) to any WebControl or HtmlControl -\r\n</strong>easily bind to objects, collections, and commands with just a few control attributes. No more awkward, non-testable binding code\r\n</li><li><strong>Automatic no-code, no-hassle, ViewState-free state/cache management -\r\n</strong>choose from ASP.NET Session, ASP.NET Caching API, or a plug-in custom caching service\r\n</li><li><strong>Eliminate or greatly reduce code-behind and client-side (JavaScript) code -\r\n</strong>keep all your application code consolidated in a managed code enviornment\r\n</li><li><strong>Enables unit testing of all of your web application's code -&nbsp;</strong>allow designers to work independently of developers\r\n</li><li><strong>A tiny, lightweight implementation that stays out of your way -&nbsp;</strong>You get all this, in less than 400 lines of C# code. One tiny 14KB assembly does it all. Compare that to other frameworks; that's why we call it &quot;tiny&quot;!\r\n</li></ul>\r\n<div style=\"text-indent:0px; margin-left:0px\">\r\n<p style=\"text-align:left; background-color:transparent; font-style:normal; text-indent:0px; font-family:'Segoe UI',Tahoma,Verdana,'Sans-Serif'; color:windowtext; font-size:8pt; vertical-align:baseline; font-weight:normal\">\r\n<strong><span style=\"font-family:Calibri,Sans-Serif; font-size:11pt\">Microsoft ASP.NET MVC or Web Forms?</span><span style=\"font-family:Calibri,Sans-Serif; font-size:11pt\">\r\n</span></strong></p>\r\n</div>\r\n<div style=\"text-indent:0px; margin-left:0px\">\r\n<p style=\"text-align:left; background-color:transparent; font-style:normal; text-indent:0px; width:auto; font-family:'Segoe UI',Tahoma,Verdana,'Sans-Serif'; height:auto; color:windowtext; font-size:8pt; vertical-align:baseline; font-weight:normal; margin-right:23px\">\r\n<span style=\"font-family:Calibri,Sans-Serif; font-size:11pt\">Are you making a decision between Microsoft's ASP.NET MVC and ASP.NET Web Forms? ASP.NET Web Forms with MattsTinyMVC is a smart choice. You get all of the benefits of Microsoft's ASP.NET MVC, using\r\n ordinary ASP.NET Web Forms - a mature, widely supported development framework for making web applications. MattsTinyMVC makes the architectural transition to MVC easy by using a framework you and your team already knows.\r\n</span></p>\r\n</div>\r\n<p><span style=\"text-decoration:underline\">Matt's TinyMVC takes the &quot;suck&quot; out of ASP.NET Web Forms. Try it today!</span></p>\r\n<p><strong>Help Support Matt's TinyMVC </strong></p>\r\n<p>What's the greatest nation in the world? <span style=\"text-decoration:underline\">\r\n<em>Do-</em></span>nation! I appreciate your support for Matt's TinyMVC. I'll try to make something else cool soon. Thank you kindly.</p>\r\n<p><span style=\"text-decoration:underline\"><a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=matt_crouch%40hotmail%2ecom&lc=US&item_name=Matt%20J%20Crouch&item_number=MattsTinyMVC&no_note=0&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_LG%2egif%3aNonHostedGuest\"><img src=\"https://www.paypal.com/en_US/i/btn/btn_donate_SM.gif\" alt=\"PayPal - The safer, easier way to pay online!\" style=\"border:0\"></a></span></p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "ASP.NET,Web Forms,MVC,C#,",
  "LastEdited": "2011-09-05T11:25:34.727-07:00"
}
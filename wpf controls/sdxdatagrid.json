{
  "ProjectName": "sdxdatagrid",
  "Title": "SDX DataGrid",
  "Description": "SDXDataGrid is a comprehensive data grid component for Microsoft .NET 3.5 web application developers. It is designed to ease the exhausting process of implementing the necessary code for sorting, navigation, grouping, searching and data editing in a data representation object.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Project Description</h1>\r\n<b>SDXDataGrid</b> is a comprehensive data grid component for Microsoft .NET 3.5 web application developers. It is designed to ease the exhausting process of implementing the necessary code for sorting, navigation, grouping, searching and real time data editing in a simple data representation object. By just dragging and dropping this intelligent grid control onto a web form, all of the functionality is implemented right away by <b>SDXDataGrid</b> for you. This allows time to be concentrated on other innovative software aspects. <b>SDXDataGrid</b> also comes with extensively customizable formatting options, which is a must for appealing web pages. You can customize almost every visual property of this grid control, just as you would with ordinary Visual Studio .NET controls. For more information, see my <a href=\"http://www.serkant.com/SDXGrid/SDXGrid.aspx\">Online Demo</a>.<br />\n<h2>Using the code</h2>\r\nSDXDataGrid is inherited from the System.Web.UI.WebControls.GridView control. So, using this control is almost the same as using the GridView control.<br />\n<h1>Group by</h1>\r\n<b>SDXDataGrid</b> allows you to instantly group with your selected field. To activate the grouping ability for your grid, you only need to set the AllowGroupBy property to true, which is also the default.<br /><br /><img src=\"/projects/sdxdatagrid/3fbe65c4-b9d1-445a-bc37-e3963859ac25\" alt=\"Group&#32;By\" title=\"Group&#32;By\" /><br />\n<h4>Design mode</h4>\r\n&lt;cc1:sdxgrid id=&quot;SDXGrid1&quot; runat=&quot;server&quot; AllowGroupBy=&quot;true&quot;&gt;<br />&lt;/cc1:sdxgrid&gt;<br />\n<h2>Paging</h2>\r\nTo activate paging functionality in your grid, you need to set the AllowPaging property to true, which is also the default. You must also change the PageSize property to your preference. PageSize is the number of rows from the datasource that should be displayed per page.<br /><br /><br /><img src=\"/projects/sdxdatagrid/5edda85a-8847-4984-b017-f2b3aa8915a2\" alt=\"Paging\" title=\"Paging\" /><br />\n<h4>Design mode</h4>\r\n&lt;cc1:sdxgrid id=&quot;SDXGrid1&quot; runat=&quot;server&quot; AllowSorting =&quot;true&quot;&gt;<br />&lt;/cc1:sdxgrid&gt;<br />\n<h2>Search</h2>\r\nTo activate searching functionality in your grid, you need to set the AllowSearch property to true. It uses the like &#39;%keyword% pattern for searching. The keyword is referring to the user input. The user can either search for all fields or for a specific field.<br /><br /><br /><img src=\"/projects/sdxdatagrid/b6a6f31b-58e5-4de6-8685-a998abba40e2\" alt=\"Search\" title=\"Search\" /><br />\n<h3>Design mode</h3>\r\n&lt;cc1:sdxgrid id=&quot;SDXGrid1&quot; runat=&quot;server&quot; AllowSearch =&quot;true&quot;&lt;/cc1:sdxgrid&gt;<br />\n<h2>Style</h2>\r\nAll style objects are inherited from the TableItemStyle or TableStyle objects. Available TableItemStyle objects include:<br /><br />SearchStyle<br />GroupByTableItemStyle<br />GroupByItemStyle<br />SelectorItemStyle<br />HeaderStyle<br />RowStyle<br />AlternatingRowStyle<br />PagerStyle<br />SelectedRowStyle<br />Available TableStyle bjects include:<br /><br />GroupByTableStyle<br />NavigatorStyle<br />SearchStyle<br />Design mode<br /><br />Check the example page for details.<br />\n<h2>Data editing</h2>\r\nAs is shown in the keyboard navigation section, you can edit a cell by either double clicking the cell or by pressing the F2 button. To delete a row after you select rows, you can click the delete button from the keyboard or the delete button from the bottom left of the grid. The add button from left bottom of the grid allows the addition of a row into the grid.\t<br /><b>SDXDataGrid</b> does not carry GridView events, but it does have the OnUpdate event. You can catch changed datasets and see the difference. If you write a DataAdapter, you can easily update your data with this dataset.<br /><br /><img src=\"/projects/sdxdatagrid/40abdca0-5b4e-4892-9314-07745c4cfc76\" alt=\"Editing\" title=\"Editing\" /><br />\n<h4>Design mode</h4>\r\n&lt;cc1:sdxgrid id=&quot;SDXGrid1&quot; runat=&quot;server&quot; ononupdate=&quot;SDXGrid1_OnUpdate&quot;&gt;<br />&lt;/cc1:sdxgrid&gt;<br />CodeBehind<br /><br />// <b>SDXDataGrid</b> Update Event <br />protected void SDXGrid1_OnUpdate(object sender, <br />    SDXGridControl.OnUpdateEventArgs e)<br />{<br />    MyDataAdapter.Update(e.Dataset);<br />}<br />Row editing template (NEW!)<br /><br />To activate template editing, you need to set the AllowEditTemplate property to true. After this, right click to your grid control in the designer. In the popup menu, go to Edit Template and select EmptyDataTemplate. Sorry, but I don&#39;t have time to figure out how to change this name :(. Write your own design and set the control bindings. The contol&#39;s name must be #FieldName(datasource column name). You also need two buttons: one for OK and one for Cancel. Put them with the properties below.\t<br />Design mode<br /><br />Check the example page for details.<br />\n<h2>Keyboard navigation</h2>\r\n<b>SDXDataGrid</b> allows you to use the usual keyboard features.<br /><br />Arrows: You can navigate between cells by using arrows.<br />F2: It is editing the current cell.<br />Enter: It accepts the change that you have made in the current cell.<br />Esc: It rejects the change that you have made in the current cell.<br />Delete: It deletes the selected rows.<br />Ctrl: While pressing Ctrl, you are able to select multiple rows.<br />Data updating<br /><br />The save button on the bottom left of the grid posts back the changes to the grid control. To retrieve changes, you only need to implement the onupdate property of your grid.EventArgs object. This returns only the changes to the dataset, not the whole dataset. Then you can play with that data.<br /><br />NOTE: Almost all System.Web.UI.WebControls.GridView properties are supported by <b>SDXDataGrid</b>. After you set the <b>SDXDataGrid</b> datasource with your datasource object, you have to select your DataFields and set their properties. <b>SDXDataGrid</b> takes field types from their DataTable object types. You should also set the page size and page index for page navigation. There is no need to set up anything for sorting and grouping.</div><div class=\"ClearBoth\"></div>",
  "TagList": "DataGrid,DataGridView,Ajax,client side datagrid,groupby,editing template,Grid,web control,",
  "LastEdited": "2012-03-04T04:25:22.017-08:00"
}
{
  "ProjectName": "ssispowershell",
  "Title": "PowerShell Task Control Flow Component for SSIS",
  "Description": "Launch PowerShell Script/Commands from SSIS - An another Custom Control Flow Component with the new \"PowerShell Task\" (currently targets PowerShell 3.0)",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Project Description</strong></p>\r\n<p>Launch PowerShell Script/Command from SSIS 2012 (currently targets PowerShell 3.0)</p>\r\n<p>&nbsp;</p>\r\n<p><em>1. To install the component, copy the dll file to &quot;<strong>C:\\Program Files (x86)\\Microsoft SQL Server\\110\\DTS\\Tasks\\</strong>&quot; and launch the PowerShell script from the &quot;<strong>Downloads</strong>&quot; page)</em></p>\r\n<p><em>2. You right -click on &quot;<strong>SSIS Toolbox</strong>&quot;, from the sub-menu you chose &quot;<strong>Refresh Toolbox</strong>&quot;</em></p>\r\n<p>3. From <strong>SSIS Toolbox</strong> you drag-it to<strong> Control Flow</strong> Worspace&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p><a href=\"/projects/ssispowershell/e5d2299f-9b10-4e01-970c-597fffc1535b\"><img title=\"image\" src=\"/projects/ssispowershell/fb2192a0-2007-4c21-9eab-d65dab4f82d7\" alt=\"image\" width=\"390\" height=\"510\" border=\"0\" style=\"padding-top:0px; padding-left:0px; display:inline; padding-right:0px; border:0px\"></a></p>\r\n<p>When you&nbsp;edit your script you will can use all the string variables declared (<em>by doing a drag &amp; drop from the list</em>):</p>\r\n<p><a href=\"/projects/ssispowershell/61305414-dca4-4901-bdd5-6ed6cfe1d219\"><img title=\"image\" src=\"/projects/ssispowershell/69c19448-e17e-44e4-9a5e-2ae1755cb857\" alt=\"image\" width=\"589\" height=\"467\" border=\"0\" style=\"padding-top:0px; padding-left:0px; display:inline; padding-right:0px; border:0px\"></a></p>\r\n<ul>\r\n<li>You can test your script by clicking on &quot;Run script&quot; button, but keep in mind: Some variables are ,not initialized in design-time, that means that your script will fail.&nbsp;\r\n</li><li>Eventually, you can get the final result into a variable by choosing a variable you declared&nbsp;\r\n</li></ul>\r\n<p>&nbsp;</p>\r\n<p>We test:</p>\r\n<p><a href=\"/projects/ssispowershell/169820a0-ac24-44b7-bb3d-df7b6279452b\"><img title=\"image\" src=\"/projects/ssispowershell/9486d111-6795-4425-bd5f-3e0e5734d4f7\" alt=\"image\" width=\"211\" height=\"154\" border=\"0\" style=\"padding-top:0px; padding-left:0px; display:inline; padding-right:0px; border:0px\"></a></p>\r\n<p>You understood, I&rsquo;ve just received&nbsp;the result by email</p>\r\n<p>--------------------------------------------------------</p>\r\n<p>So here we are. I've done minimal cleanup, and the code isn't perfect (and there are few comments) but I could not find anything similar online\r\n<em>for free</em> and I thought the best thing to do would be to share the code today instead of waiting to polish it before sharing it.</p>\r\n<p>The initial public release is online so everyone should be able to download the code to use (and tweak) on their own.</p>\r\n<p><strong>Note:</strong> I'd really appreciate any feedback on whether you think the project isn't feasible, whether you'd like to use it if it were more mature, and that sort of thing. Leave comments or email me at\r\n<a href=\"mailto:cosmin.vlasiu@gmail.com\">cosmin.vlasiu@gmail.com</a></p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "ssis,ssis 2012,powershell,control flow,integration services,ssdt,powershell ssis,powershell task,",
  "LastEdited": "2014-05-17T04:25:52.353-07:00"
}
{
  "ProjectName": "zetahtmleditcontrol",
  "Title": "Zeta HTML Edit Control",
  "Description": "A small wrapper class around the Windows Forms 2.0 WebBrowser control.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Zeta HTML Edit Control</h1>\r\n<img src=\"/projects/zetahtmleditcontrol/e3664831-0584-4ba3-968a-35ceb6c1c175\" alt=\"ZetaHtmlEditControl-01.png\" title=\"ZetaHtmlEditControl-01.png\" /><br />\n<h2>Introduction</h2>\r\nThis articles presents you a small wrapper class around the Windows Forms 2.0 <a href=\"http://msdn.microsoft.com/en-us/library/2te2y1x6.aspx\">WebBrowser</a> control.<br />\n<h2>Features</h2>\r\nThe wrapper is no rocket science but provides some features I struggled with in the past. We use the control in several of our own (internal) applications.<br /><br />Some of the features include:<br />\n<ul><li>Enable the setting of text even when the control is not yet fully initialized.</li>\n<li>Allow pasting of images from the clipboard.</li>\n<li>Provide an alternative context menu for applying formatting options.</li>\n<li>Optionally directly edit the underlying HTML source code.</li>\n<li>Translated resources in English and German.</li>\n<li>Interface <span class=\"codeInline\">IExternalInformationProvider</span> for externally persisting and restoring settings.</li>\n<li>Provide standard CSS in the control; usually you do not need to define your own CSS.</li></ul>\n\n<h2>Using the code</h2>\r\nTo include the code in your own project, simply include the &quot;ZetaHtmlEditControl.dll&quot; assembly into your project.<br /><br />Add the assembly to your Visual Studio .NET 2008 Windows Forms Designer Toolbox if you want to be able to drag the <span class=\"codeInline\">ExtendedWebBrowser</span> control to your forms. Alternatively create and initialize an instance of the ExtendedWebBrowser control by code.<br />\n<h3>Setting HTML</h3>\r\nTo put HTML from your code into the control, assign the HTML code to the <span class=\"codeInline\">ExtendedWebBrowser.DocumentText</span> property. You do <i>not</i> have to pass a complete HTML document with <span class=\"codeInline\">HEAD</span> and <span class=\"codeInline\">BODY</span> tags but only the actual content that you would write inside the <span class=\"codeInline\">BODY</span> tag.<br />\n<h3>Getting the HTML</h3>\r\nTo read out the HTML from the control, call the <span class=\"codeInline\">ExtendedWebBrowser.GetDocumentText( string folderPath )</span> method. The method takes one parameter &quot;folderPath&quot; that tells the control where to store newly passed images from the clipboard.<br />\n<h2>Summary</h2>\r\nThis article quickly introduced a wrapper around the Windows Forms 2.0 <a href=\"http://msdn.microsoft.com/en-us/library/2te2y1x6.aspx\">WebBrowser</a> control that adds some extra functions to make it more usable in a real-world-application. Feel free to copy, modify or extend the control to match your own requirements.<br /><br />To ask questions, suggest features or provide other comments, please use the <a href=\"http://zetahtmleditcontrol.codeplex.com/Thread/List.aspx\">Discussions tab</a>.<br />\n<h2>History</h2>\r\n<ul><li><b>2013-05-20</b> - Updated to latest version. Also please see <a href=\"http://www.codeproject.com/Articles/43954/ZetaHtmlEditControl\">Article over at The Code Project</a>.</li>\n<li><b>2009-11-18</b> - First public release to CodePlex.com.</li></ul></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2013-05-30T21:36:23.023-07:00"
}
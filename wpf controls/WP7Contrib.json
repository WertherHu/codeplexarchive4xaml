{
  "ProjectName": "WP7Contrib",
  "Title": "WP7Contrib",
  "Description": "WP7 Contrib is a set of components to help build WP7 Apps. It can be plugged into MVVM Light or used as separate components in your App. Our goal is to provide a set of tools and patterns that help WP7 developers.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Project Description</h1>\r\n<br />WP7 Contrib is a set of components to help build WP7 Apps. It can be plugged into MVVM Light or used as separate components in your App. Our goal is to provide a set of tools and patterns that help WP7 developers.<br /><br /><b>Now available via NuGet</b> - <a href=\"http://nuget.org/List/Search?searchTerm=author%3A%20WP7Contrib\">http://nuget.org/List/Search?searchTerm=author%3A%20WP7Contrib</a><br /><br />The framework is built on top of the following framework &amp; libraries:<br /><br /><b>MVVMLight Toolkit</b> - <a href=\"http://mvvmlight.codeplex.com\">http://mvvmlight.codeplex.com</a> <br /><b>SilverlightSerializer</b> - <a href=\"http://whydoidoit.com/silverlight-serializer/\">http://whydoidoit.com/silverlight-serializer/</a><br /><b>Json.Net</b> - <a href=\"http://json.codeplex.com/\">http://json.codeplex.com/</a><br /><b>Reactive Extensions for .NET (Rx)</b> - <a href=\"http://msdn.microsoft.com/en-us/devlabs/gg577609\">http://msdn.microsoft.com/en-us/devlabs/gg577609</a> (Currently using version 1.0.10621).\n<h2>Samples &amp; Downloads</h2>\r\nSee documentation.<br />\n<h1>What&#39;s it all about ?</h1>\r\n<br />The WP7 Contrib (WP7C) is just like many other contribution community led efforts where there is a movement to bring resources together, solve common problems and help shape new ways of looking at common platform problems.<br /><br />The WP7C contains not only work we have put together based on our development experiences for WP7 but also from the wider community. What we wanted to do was package all this up into a single place to make it easy for those people developing on WP7 to find and examples of how to use the pieces. The other reason is to inspire the community, encourage feedback for new feature requests and also have people join us on our quest, maybe even contribute some of their great work as well.<br /><br />At the moment we are light on unit tests but we are working on improving coverage, so please bear with us on this, we understand how important these are. So, you may be thinking how can they be sure that all the code works ? We will be releasing very shortly into the Market place a number of applications that have been built using the bits contained in the Contrib. In the coming months we will publish blogs which will contain example recipes for using the WP7C we will also go deep on some of these topics and also discuss the future roadmap here. <br /><br />You will see an underlying theme to all of the components that we are revving currently these approaches include; Use Rx where possible to help with performance when requesting data from endpoints; single responsibility; and ask don&#39;t tell patterns. Ollie will be going deeper on these topics with some up and coming blogs posts as to why we believe these approaches help with development practices in general.<br /><br />We wanted to concentrate purely on WP7 development problems and steer away from building an MVVM Framework, therefore we made the decision (well Laurent had me in a headlock at the time :-)) to base our current implementation on MVVM Light. However, those dependencies are very loose we have subclassed the VM Base class to deal with Navigation and TombStoning, there is also a dependency on the IMessenger interface  which is used in the implementation of our VM&#39;s. Our current thoughts are that with such loose connections swapping in your MVVM framework of choice should be rather straight forwards. So if there are enough votes and shouts we would be very interested in hearing them and working towards providing a solution for them.<br />\n<h1>Features</h1>\r\n<h2>Caching</h2>\r\nOur goal here is to provide a light weight solution to caching on the handset, we provide an interface defining a strategy with common functionality such as item access, addition, removal and expiry. There are different types of caching which have been catered for; in memory caching; and isolated storage. The whole purpose behind the Caching component is to define a caching strategy that is flexible for your content, we provide a couple of implementations but we expect there to be other implementations in the future.<br /><br />Know doubt you have worked out that the WP7 device does not have the same processing power as your laptop or PC and therefore we need to provide a component which can deal with client side caching this will provide a mechanism to help reduce the calls made by a disconnected client; free up bandwidth; and help to improve performance in general. <br /><br />The Isolated Storage Provider does what it says on the tin and is purely responsible for pushing content into isolated Storage as well as having an in memory representation. It utilises the SilverlightSerializer <a href=\"http://whydoidoit.com/silverlight-serializer/\">http://whydoidoit.com/silverlight-serializer/</a> to persist and revive data from disc. As with all of the components contained within WP7Contrib we are using DI to inject these different interfaces into the VM and services that are being used by the application being built. <br /><br />The In Memory Caching Provider is for caching in memory only , it is not persisted across application tombstoning or application restarts.<br /><br />The Null Cache Provider incase you dont want to cache anything.<br /><br />There are 2 patterns that have thus far have emerged, we will cover this off in more detail in a couple of blog posts. <br /><br />First is the VM possibly the most obvious place, where by the VM is already responsible for managing state, logic and so the addition of identifying what content needs to be cached feels like a natural progression in the evolution of the VM and its responsibilities. Second, is down in the service layer where would historically associate a caching mechanism to be found. These 2 techniques used in combination help to solve the TombStoning problem. Watch out for a specific post around implementing TombStoning in you applications using the WP7 Contrib<br />\n<h2>Messaging</h2>\r\nReplay Messenger is new messenger pattern to help solve the problems encountered when using a DI container for loading your VM&#39;s. Stay tuned for more posts on how to use the Messenger. In the meantime you may want to head over to MVVM Light <a href=\"http://mvvmlight.codeplex.com\">http://mvvmlight.codeplex.com</a> to take a look at the implementation details or checkout Laurent&#39;s blog where you can find more details on the messenger and some of the baked in Messenger&#39;s he has already <a href=\"http://www.galasoft.ch/mvvm/getstarted/\">http://www.galasoft.ch/mvvm/getstarted/</a><br />\n<h2>Collections</h2>\r\nIn the development of applications for WP7 we&#39;ve utilised the Reactive Extensions for .Net <a href=\"http://msdn.microsoft.com/en-us/devlabs/ee794896\">http://msdn.microsoft.com/en-us/devlabs/ee794896</a>, specifically we&#39;ve concentrated its use around the making of asynchronous calls to application &amp; back-end services, this has lead to the requirement for a thread safe observable collection implementation, we also implemented a read only version as well.<br /><br />To help with the handling of large amounts of data that can be returned from back-end services we have incorporated a definition of the IPagedCollectionView interface from the core Silverlight framework as well as interface IPagedList and implementation  PagedListView. We&#39;ll be diving deeper into these in the future blog posts.<br />\n<h2>Services </h2>\r\nLocation Service provides location based information of the users device using the Reactive Extensions for .Net, this has allowed us to abstract away the GeoCoordinateWatcher class. We also paid attention to Jaime&#39;s points he makes here <a href=\"http://blogs.msdn.com/b/jaimer/archive/2010/11/11/geocoordinatewatcher-tips-part1.aspx\">http://blogs.msdn.com/b/jaimer/archive/2010/11/11/geocoordinatewatcher-tips-part1.aspx</a><br /><br />Logging Service provides a simple logging mechanism which uses isolated storage for persistence, we decided to make this as stripped down as possible, the current implementation provides the interfaces ILog &amp; ILogManager, with the later designed for simple UI implementations inside an application. <br /><br />Navigation Service provides a mechanism for manipulating the Root Frame allowing your VM&#39;s to control navigation. This implementation builds on the ideas from Laurent and the pnp WP7 development series.<br /><br />Themed Resource Locator originate from pnp<br /><br />Settings Service provides the ability to persist user settings.<br /><br />Storage Service provides a mechanism for persisting content when an application is closed or TombStoned, it offers the ability to persist content to either in a persistent or transient store and utilises the SilverlightSerializer for internal serialisation before persisting in one of the two framework provided dictionaries - IsolatedStorageSettings.ApplicationSettings (persistent storage) &amp; PhoneApplicationService.Current.State (transient storage).<br />\n<h2>Communications</h2>\r\nTalking to back-end services specifically RESTful services requires the use of the classes WebClient, HttpWebRequest &amp; HttpWebResponse and this can become a repetitive task, so we&#39;ve provided an abstracted implementation that supports the GET, POST, PUT &amp; DELETE over HTTP and returns all results via the Reactive Extensions for .Net <a href=\"http://msdn.microsoft.com/en-us/devlabs/ee794896\">http://msdn.microsoft.com/en-us/devlabs/ee794896</a> interface IObservable&lt;T&gt;.<br /><br />We&#39;ve also provided an IObservable&lt;T&gt; implementation of a network connectivity monitor, so you can hook up a subscriber and get notified when the network type changes.  <br />\n<h2>Diagnostics / Debug</h2>\rThe diagnostics project is designed to help enable logging and debugging at runtime.  Using the WP7Contrib.Diagnostics.RunTimeDebug you can easily add diagnostics messages which can be sent via email or shown in the ui while not getting in the way of the ui.  The RunTimeDebug tool is to enable developers to test application running on live devices, as well as build in crash log support to production applications.<br /><br />see screencast example: <a href=\"http://download.codeplex.com/download?ProjectName=wp7contrib&amp;DownloadId=205341\">http://download.codeplex.com/download?ProjectName=wp7contrib&amp;DownloadId=205341</a><br />\n<h2>UI Controls</h2>\r\n<b>Behaviors</b><br />The behaviors originate from our good buddy Stuart Harris over at Red Badger who came up with some rather cool behaviors that can be applied to App Bar Buttons that allow you to wire up Relay Commands to the buttons, you can get more details here <a href=\"http://red-badger.com/Blog/post/Watching-Silverlight-Dependency-Properties-with-Reactive-Extensions.aspx#comment\">http://red-badger.com/Blog/post/Watching-Silverlight-Dependency-Properties-with-Reactive-Extensions.aspx#comment</a><br /><br /><br /><b>Binding Listener</b><br />This originate from the PNP WP7 developer framework, but was then refactored by Stuart as he found memory leaks. <a href=\"http://red-badger.com/Blog/post/Watching-Silverlight-Dependency-Properties-with-Reactive-Extensions.aspx#comment\">http://red-badger.com/Blog/post/Watching-Silverlight-Dependency-Properties-with-Reactive-Extensions.aspx#comment</a><br /><br /><br /><b>Converters</b><br />This is a starting point really there are a ton of great coverters out there and its a case of harvesting these up at the moment there are a couple of my favourites.<br /><br /><br /><b>DateTime Picker</b><br />This is a customised version of the one found in the toolkit, however this version allows you to customise the number of selectors you want to be visible.<br /><br /><b>Extensions</b><br />These are taken from the PNP WP7 developer framework and have some very useful extensions when building WP7.<br /><br /><b>Helpers</b><br />A set of various helpers taken from PNP WP7 developer framework and other resources on the internet.<br /><br /><b>Orientation</b><br />A set of various helpers take from the awesome work done by David Anson that animate the Root Frame when changing orientation of the device \n<ul><li>Hybrid <a href=\"http://blogs.msdn.com/b/delay/archive/2010/09/28/this-one-s-for-you-gregor-mendel-code-to-animate-and-fade-windows-phone-orientation-changes-now-supports-a-new-mode-hybrid.aspx\">http://blogs.msdn.com/b/delay/archive/2010/09/28/this-one-s-for-you-gregor-mendel-code-to-animate-and-fade-windows-phone-orientation-changes-now-supports-a-new-mode-hybrid.aspx</a></li>\n<li>Fade <a href=\"http://blogs.msdn.com/b/delay/archive/2010/08/18/fade-into-you-code-to-easily-animate-orientation-changes-for-windows-phone-applications-now-supports-fade-too.aspx\">http://blogs.msdn.com/b/delay/archive/2010/08/18/fade-into-you-code-to-easily-animate-orientation-changes-for-windows-phone-applications-now-supports-fade-too.aspx</a></li>\n<li>Animated <a href=\"http://blogs.msdn.com/b/delay/archive/2010/07/13/spin-spin-sugar-updated-code-to-easily-animate-orientation-changes-for-any-windows-phone-application.aspx\">http://blogs.msdn.com/b/delay/archive/2010/07/13/spin-spin-sugar-updated-code-to-easily-animate-orientation-changes-for-any-windows-phone-application.aspx</a></li></ul>\n<br /><b>Sliders</b><br />Dave Reylea&#39;s performance slider <a href=\"http://blogs.msdn.com/b/devdave/archive/2010/10/04/a-better-slider-for-windows-phone-7.aspx\">http://blogs.msdn.com/b/devdave/archive/2010/10/04/a-better-slider-for-windows-phone-7.aspx</a><br />Range Slider has been recompiled to work on WP7 that originates from Martin Grayson&#39;s Blacklight UI Controls <a href=\"http://mightymeaty.members.winisp.net/blacklight.silverlight/\">http://mightymeaty.members.winisp.net/blacklight.silverlight/</a><br /><br /><b>Controls</b><br />These are a collection of controls that we have found to be very useful that other members in the community have been working on.\n<ul><li>DeferredLoadListBox - David Anson <a href=\"http://blogs.msdn.com/b/delay/archive/2010/09/08/never-do-today-what-you-can-put-off-till-tomorrow-deferredloadlistbox-and-stackpanel-help-windows-phone-7-lists-scroll-smoothly-and-consistently.aspx\">http://blogs.msdn.com/b/delay/archive/2010/09/08/never-do-today-what-you-can-put-off-till-tomorrow-deferredloadlistbox-and-stackpanel-help-windows-phone-7-lists-scroll-smoothly-and-consistently.aspx</a></li>\n<li>DeferredLoadListBoxItem - David Anson <a href=\"http://blogs.msdn.com/b/delay/archive/2010/09/08/never-do-today-what-you-can-put-off-till-tomorrow-deferredloadlistbox-and-stackpanel-help-windows-phone-7-lists-scroll-smoothly-and-consistently.aspx\">http://blogs.msdn.com/b/delay/archive/2010/09/08/never-do-today-what-you-can-put-off-till-tomorrow-deferredloadlistbox-and-stackpanel-help-windows-phone-7-lists-scroll-smoothly-and-consistently.aspx</a></li>\n<li>LowProfileImageLoader - David Anson <a href=\"http://blogs.msdn.com/b/delay/archive/2010/10/04/there-s-no-substitute-for-customer-feedback-improving-windows-phone-7-application-performance-now-a-bit-easier-with-lowprofileimageloader-and-deferredloadlistbox-updates.aspx\">http://blogs.msdn.com/b/delay/archive/2010/10/04/there-s-no-substitute-for-customer-feedback-improving-windows-phone-7-application-performance-now-a-bit-easier-with-lowprofileimageloader-and-deferredloadlistbox-updates.aspx</a>. This has been modified to include caching using the ICacheProvider and ILog for logging</li>\n<li>TiltEffect - Peter Torr <a href=\"http://blogs.msdn.com/b/ptorr/archive/2010/03/23/tilt-effect-for-windows-phone-controls.aspx\">http://blogs.msdn.com/b/ptorr/archive/2010/03/23/tilt-effect-for-windows-phone-controls.aspx</a></li>\n<li>DynamicTextBox - Pixel Lab <a href=\"http://blog.nerdplusart.com/archives/texttrimming-textblock-for-silverlight\">http://blog.nerdplusart.com/archives/texttrimming-textblock-for-silverlight</a></li></ul>\n<br /><b>Transitions</b><br />These are taken from the work done by Kevin Marshall <a href=\"http://blogs.claritycon.com/kevinmarshall/2010/05/12/windows-phone-7-prototype-002-animated-page-transitions-writeable-bitmaps/\">http://blogs.claritycon.com/kevinmarshall/2010/05/12/windows-phone-7-prototype-002-animated-page-transitions-writeable-bitmaps/</a> along with some additional transitions to give parity with the SL toolkit</div><div class=\"ClearBoth\"></div>",
  "TagList": "Framework,JSON,Json.NET,MVVM,funq,Windows Phone 7,WP7,wp7dev,MVVM Light Toolkit,WP 7,WP71,WPDev,windows phone,cache,Controls,communication,",
  "LastEdited": "2011-07-15T03:06:10.2-07:00"
}
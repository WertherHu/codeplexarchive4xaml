{
  "ProjectName": "dcrf",
  "Title": "Dynamic Component Runtime Framework (DCRF)",
  "Description": "This project is a framework which encourages developers to think/design/implement based on component based software development approach.\r\nThe high level of flexibility in this framework, makes implementing really complex component networks easy and straightforward.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>To all dear visitors: This project has evolved to the next generation: DARF (Dynamic Application Runtime Framework). I have created the project homepage on the CodePlex.</strong></p>\r\n<p><strong>So please stay tuned until I upload project contents to the new homepage:&nbsp;<a title=\"darf.codeplex.com\" href=\"https://darf.codeplex.com/\" target=\"_self\">darf.codeplex.com</a> :-)</strong></p>\r\n<p>&nbsp;</p>\r\n<p><strong style=\"font-size:10pt\">Dynamic Component Runtime Framework</strong></p>\r\n<p><br>\r\nDCRF is a fully customizable, super-flexible, component based software development framework that helps you author your components, connect/compose them, instantiate them at runtime and use them in an application.</p>\r\n<p>Most important features:</p>\r\n<ul>\r\n<li>Supports distributed components </li><li>Management console application </li><li>XML based component composition and instantiation </li></ul>\r\n<p><br>\r\nImportant documentations:</p>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>DCRF&nbsp;<a href=\"/wikipage?title=Architecture&referringTitle=Home\">Architecture</a>.\r\n</li><li>Two new management applications introduced in v2 are:&nbsp;\r\n<ul>\r\n<li>BlockWebHost <a href=\"/wikipage?title=About%20BlockWebHost&referringTitle=Home\">\r\nAbout BlockWebHost</a> </li><li>AdminConsole: <a href=\"/wikipage?title=About%20AdminConsole&referringTitle=Home\">\r\nAbout AdminConsole</a> </li></ul>\r\n</li></ul>\r\n<p><br>\r\n<br>\r\nThe most important point that needs to be considered is that using this project in a single job, will not decrease your implementation efforts (actually they will be increased). But the real advantage and power of this library comes when you\r\n<em>re-use</em> your components in other tasks/projects. DCRF allows you to:<br>\r\n- Develop components which are completely isolated from outer world<br>\r\n- Inject your components in a 'BlockWeb' at runtime<br>\r\n- Connect a BlockWeb components to each other to provide components with required interfaces, dynamically at runtime.<br>\r\n- Call component services and obtain the result.<br>\r\n<br>\r\nIn this framework, a component is called 'Block'. Actually I had to rename it from 'Component' to 'Block' to prevent interference and ambiguity with .NET default Component class.<br>\r\n<br>\r\nI have not yet prepared a complete and accurate documentation. This is number one item in this project's TO-DO list :)<br>\r\n<br>\r\nAdditional information on this project will be available soon.</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "Components,Framework,Runtime,CBSE,jerusalem2020j2il,DotNetNuke,Database,Data Access,architecture,documentation,desktop,dependency injection,design patterns,Design,Designer,development,developer,API,application,Software Factory,Active Directory,Activity,Project Management,Projects,Providers,Programming Language,Program,program editor,Software Engineering,Composition,C#,distributed,Dynamics,dynamic language,Controls,compiler,Component Based,C#Compact Framework,Developer Media,recommended release,Administrator,blog,Sunlight Foundation,spreadsheet,software,Education,Parallax,Media,Social Network,Networking,References,BIBWORD,Author,Biblio,Bibliography,",
  "LastEdited": "2013-07-13T11:35:38.153-07:00"
}
{
  "ProjectName": "aace",
  "Title": "ConvincingMail Advanced Auto Complete / Auto Suggest ControlExtender",
  "Description": "ConvincingMail AutoComplete is an ASP.NET AJAX control extender that can be attached to any TextBox control, and will associate that control with a popup list to display items that returend by the webservice for the prefix typed into the textbox.\r\n\r\n",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>ConvincingMail Advanced Auto Complete/ Auto Suggest Control Extender (Facebook like style)</h1>\rConvincingMail AutoComplete is an ASP.NET AJAX control extender that can be attached to any TextBox control, and will associate that control with a popup list to display items that returend by the webservice for the prefix typed into the textbox.<br /><br /><br />Some features:\n<ul><li>Item Templates</li>\n<li>Clientside Events</li>\n<li>Custom Item JSON</li>\n<li>Visual styles via CSS</li>\n<li>Tested in IE6,7,8 FireFox, Safari, Opera, Chrome.</li></ul>\nDemo and more info  &amp; examples are available here: <a href=\"http://www.convincingmail.com/Autosuggest-autocomplete.aspx\">http://www.convincingmail.com/Autosuggest-autocomplete.aspx</a><br />\n<h1>ConvincingMail AutoComplete Properties &amp; Usage</h1>\r<h2>Control requirements:</h2>\r<ul><li>ASP.NET 2.0 or 3.5</li>\n<li>AJAX Control Toolkit</li>\n<li>Prototype Javascript Framework</li></ul>\n\n<h2>Control setup:</h2>\rTo use the control on the asp.net page you need to follow this steps: \n<ul><li>Step 1: Add ConvincingMail AutoComplete dll refference to your project.</li>\n<li>Step 2: Declare control refference on your page. e.g.:</li></ul>\n&lt;%@ Register Assembly=&quot;ConvincingMail.AdvancedAutoSuggest&quot; Namespace=&quot;ConvincingMail.AdvancedAutoSuggest&quot; TagPrefix=&quot;cc1&quot; %&gt; \n<ul><li>Step 3: Add Prototype JS Framework reference to your page.</li>\n<li>Step 4: Add the control to your page and set properties. e.g.: </li></ul>\n&lt;cc1:AdvancedAutoSuggestExtender TargetControlID=&quot;CountyTextBox&quot; AdditionalFields=&quot;StateIdTextBox&quot; UpdateField=&quot;CountyIdTextBox&quot; TitleTdCss=&quot;titleTd-green&quot; TitleTrCss=&quot;titleTr-green&quot; CommentsTdCss=&quot;commentsTd-green&quot; CommentsTrCss=&quot;commentsTr-green&quot; HilightedTrCss=&quot;suggestionsHilightedTr-green&quot; ServiceUrl=&quot;~/Suggestions.asmx/CountySuggest&quot; ID=&quot;AdvancedAutoSuggestExtender1&quot; runat=&quot;server&quot; /%&gt;<br /><br /><b>TargetControlID</b> -- Required. The TextBox control where the user types content to be automatically completed. <br /><b>ServiceUrl</b> -- Required. URL of the webservice which returns suggestions. <br /><br /><i><b>Optional Fields</b></i><br /><br /><b>AdditionalFields</b> -- Optional. Comma separated list of controls which should be used to filter results. <br /><b>UpdateField</b> -- Optional. The TextBox (HiddenTextBox) control where the ID value of selected item is set. <br /><b>TitleTdCss</b> -- Optional. CSS style of the suggestion item title cell. <br /><b>TitleTrCss</b> -- Optional. CSS style of the suggestion item title row. <br /><b>CommentsTdCss</b> -- Optional. CSS style of the suggestion item comments title cell. <br /><b>CommentsTrCss</b> -- Optional. CSS style of the suggestion item comments title row. <br /><b>LoadingDivCss</b> -- Optional. CSS style of the loading message (default is:suggestionsLoadingDiv). <br /><b>HilightedTrCss</b> -- Optional (v2.1). CSS style of the suggestion hilighted item (mouse over). <br /><b>SuggestOnEmptyField</b> -- Optional. When true the control makes a server call for suggestions when the text box is empty. (default: false). <br /><b>OnClientItemSelected</b> -- Optional, (v2.1). ClientSide Javascript function to call when an item is selected from the suggestions list. The function accepts two params: sender and item. The item param is the selected suggestion item has the following properties: <br /><b></b>Id - An ID value of the selected item.<br /><b></b>Title - A highlighted title of the selected item. (like it appeares in the suggestion list)<br /><b></b>Description - Selected item description. (like it appeares in the suggestion list)<br /><b></b>TitleValue - Original title of the item. (no hilighting tags)<br />       <i>Starting from v2.2 you can specify your own properties. </i><br /><b>OnClientPopulating</b> -- Optional, (v2.3). ClientSide Javascript function to call when the webrequest started. (Use this event to show &quot;loading icon&quot;) <br /><b>OnClientPopulated</b> -- Optional, (v2.3). ClientSide Javascript function to call when the webrequest completed but before the suggestion list is shown. (Use this event to hide &quot;loading icon&quot;). <br /><b>OnClientShowing</b> -- Optional, (v2.3). ClientSide Javascript function to call before the suggestion list is shown. <br /><b>OnClientShown</b> -- Optional, (v2.3). ClientSide Javascript function to call after the suggestion list is shown. <br /><b>OnClientHiding</b> -- Optional, (v2.3). ClientSide Javascript function to call before the suggestion list is hidden. <br /><b>OnClientHidden</b> -- Optional, (v2.3). ClientSide Javascript function to call after the suggestion list is hidden. <br /><b>OnClientItemOver</b> -- Optional, (v2.3). ClientSide Javascript function to call when mouse hovers the item in the list. <br /><b>OnClientItemOut</b> -- Optional, (v2.3). ClientSide Javascript function to call when mouse leaves from the item in the list. <br /><b>Template</b> -- Optional, (v2.2). An HTML Prototypejs Template to render the listing item. <br /><b>HeaderTemplate</b> -- Optional, (v2.3). An HTML Prototypejs Template to render the header of the suggested items list. <br /><b>FooterTemplate</b> -- Optional, (v2.3). An HTML Prototypejs Template to render the footer of the suggested items list. <br /><b>LoadingText</b> -- Optional, (v2.3). The text message to show when the content is loading from the server. (Note: you can use the OnClientPopulated and OnClientPopulating events to customize the &quot;loading&quot; behavior. For example you can toggle a &quot;loading&quot; icon like in the state field example above.) <br /><br /><b>Suggestions WebService:</b>\n<ul><li>Step 1: -- Create new webservice (.asmx) in your project. e.g.: Suggestions.asmx</li>\n<li>Step 2: -- Create the method to return a JSON list of items. View Code Example </li></ul>\n<br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "autocomplete,AutoComplete Textbox,AutoSuggest,",
  "LastEdited": "2009-11-16T00:07:52.667-08:00"
}
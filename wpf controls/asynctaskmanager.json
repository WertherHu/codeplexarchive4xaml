{
  "ProjectName": "asynctaskmanager",
  "Title": "Async Task Manager",
  "Description": "Async task manager allow you to manage asynchronous tasks using the .NET 4 Framework and Prism for WPF",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Async Task Manager</strong></p>\r\n<p><strong>&nbsp;</strong>This project allow you to manage&nbsp;asynchronous&nbsp;tasks using the .NET 4 Framework and Prism.</p>\r\n<p>DOWNLOAD</p>\r\n<p>[<a title=\"Source code\" href=\"http://asynctaskmanager.codeplex.com/SourceControl/BrowseLatest\" target=\"_blank\">Source code</a>] or [<a title=\"Latest build\" href=\"http://asynctaskmanager.codeplex.com/downloads/get/629810\" target=\"_blank\">Latest build</a>]</p>\r\n<p>FEATURES</p>\r\n<ul>\r\n<li>Create simple or repetitive tasks </li><li>Separate module with EventAggregator&nbsp; </li><li>UI Ready </li><li>Different&nbsp;task lists :\r\n<ul>\r\n<li>Task in progress </li><li>Task completed </li></ul>\r\n</li></ul>\r\n<p>REQUIREMENTS</p>\r\n<ul>\r\n<li>Prism 4 [<a title=\"Download here\" href=\"http://compositewpf.codeplex.com/\" target=\"_blank\">download here</a>]\r\n</li><li>WPF Project </li><li>.NET Framework 4 </li></ul>\r\n<p>SCEENSHOTS</p>\r\n<p><img src=\"http://blog.lordinaire.fr/wp-content/uploads/2013/02/taskinprogress.png\" alt=\"Tasks in progress\"></p>\r\n<p><img src=\"http://blog.lordinaire.fr/wp-content/uploads/2013/02/taskcompleted.png\" alt=\"Task completed\"></p>\r\n<p>Different colors are use to each status : <em>succeed</em>, <em>failed</em>, <em>\r\ncanceled</em></p>\r\n<p>EXAMPLE</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\n<span style=\"color:gray\">///</span><span style=\"color:green\"> Start a new simple task</span>\n<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\n<span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> StartSimpleTask()\n{\n    Func&lt;<span style=\"color:blue\">object</span>&gt; beginAction = () =&gt;\n                                    {\n                                        Thread.Sleep(3000);\n                                        <span style=\"color:blue\">return</span> <span style=\"color:blue\">true</span>;\n                                    };\n\n    Action&lt;Task&lt;<span style=\"font-size:1em; color:#0000ff\">object&gt;</span><span style=\"font-size:1em\">&gt; endAction = (result) =&gt;</span><br>                            {\n                                Text = <span style=\"color:#a31515\">&quot;Ok&quot;</span>;\n                            };\n\n    <span style=\"color:blue\">var</span> task = <span style=\"color:blue\">new</span> TaskViewModel(<span style=\"color:#a31515\">&quot;Simple task !&quot;</span>, beginAction, endAction);\n\n    <span style=\"color:blue\">if</span> (_eventAggregator != <span style=\"color:blue\">null</span>)\n        _eventAggregator.GetEvent&lt;TaskEvent&gt;().Publish(<span style=\"color:blue\">new</span> TaskEventArgs(TaskEventArgsType.Started, task));\n}\n</pre>\r\n</div>\r\n<p>More example <a href=\"https://asynctaskmanager.codeplex.com/documentation\" target=\"_self\">\r\nhere</a></p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "asynchronous,task,manager,wpf,",
  "LastEdited": "2013-02-25T01:40:51.75-08:00"
}
{
  "ProjectName": "devicemgr",
  "Title": "Device Management",
  "Description": "This project is an easy to use wrapper for native Windows device management and device setup functions. You can use the library for querying device configuration, registering for device change notifications or sending I/O control codes to device drivers. ItÂ´s an experimental project, which enables .NET-developers, who want to avoid the use of WMI, to add device management capabilities to Windows applications. The project is written in C#.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Project Description</h1>\rThis project is an easy to use wrapper for native Windows device management and device setup functions. You can use the library for querying device configuration, registering for device change notifications or sending I&#47;O control codes to device drivers. It&#180;s an experimental project, which enables .NET-developers, who want to avoid the use of WMI, to add device management capabilities to Windows applications. The project is written in C&#35;.<br />\n<h1>Quick Start</h1>\r\nThe library can be used, if you want detect devices or device changes in your application (for instance, if the user is plugging or un-plugging a mass storage device). The good news is, you don&#180;t have to deal with details of unmanaged code. The code works both for 32- and 64 bit operating systems. The following quick start example shows a simple Windows Forms application, which registers for device change notifications (you can find more examples in the documentation).<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">using</span> System;\n<span style=\"color:Blue;\">using</span> System.Windows.Forms;\n<span style=\"color:Blue;\">using</span> DeviceManagement;\n\n<span style=\"color:Blue;\">namespace</span> WindowsFormsSample\n{\n\t<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">partial</span> <span style=\"color:Blue;\">class</span> Form1 : Form\n\t{\n\t\t<span style=\"color:Blue;\">public</span> Form1()\n\t\t{\n\t\t\tInitializeComponent();\n\t\t}\n\n\t\t<span style=\"color:Blue;\">protected</span> <span style=\"color:Blue;\">override</span> <span style=\"color:Blue;\">void</span> OnLoad(EventArgs e)\n\t\t{\n\t\t\t<span style=\"color:Blue;\">base</span>.OnLoad(e);\n\n\t\t\tInitializeDeviceNotifications();\n\t\t}\n\n\t\t<span style=\"color:Blue;\">private</span> <span style=\"color:Blue;\">void</span> InitializeDeviceNotifications()\n\t\t{\n\t\t\t<span style=\"color:Blue;\">var</span> notificationHandler = <span style=\"color:Blue;\">new</span> VolumeNotificationHandler();\n\n\t\t\tnotificationHandler.VolumeArrival += <span style=\"color:Blue;\">this</span>.OnVolumeArrival;\n\t\t\tnotificationHandler.VolumeRemoveComplete += <span style=\"color:Blue;\">this</span>.OnVolumeRemoveComplete;\n\n\t\t\t<span style=\"color:Blue;\">var</span> deviceNotification = <span style=\"color:Blue;\">new</span> DeviceNotification() { NotificationHandler = notificationHandler };\n\n\t\t\tdeviceNotification.Register(DeviceType.LogicalVolume);\n\n\t\t\t<span style=\"color:Blue;\">this</span>.components.Add(deviceNotification);\n\t\t}\n\n\n\t\t<span style=\"color:Blue;\">void</span> OnVolumeRemoveComplete(<span style=\"color:Blue;\">object</span> sender, DeviceNotificationEventArgs e)\n\t\t{\n\t\t\tVolume volume = e.GetVolume();\n\n\t\t\tMessageBox.Show(<span style=\"color:Blue;\">string</span>.Format(<span style=\"color:#A31515;\">&quot;Drive {0}: was removed.&quot;</span>, volume.DriveLetter));\n\t\t}\n\n\t\t<span style=\"color:Blue;\">void</span> OnVolumeArrival(<span style=\"color:Blue;\">object</span> sender, DeviceNotificationEventArgs e)\n\t\t{\n\t\t\tVolume volume = e.GetVolume();\n\n\t\t\tMessageBox.Show(<span style=\"color:Blue;\">string</span>.Format(<span style=\"color:#A31515;\">&quot;Drive {0}: was successfully added.&quot;</span>, volume.DriveLetter));\n\t\t}\n\t}\n}\n\r\n</pre></div></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2012-12-20T03:44:57.653-08:00"
}
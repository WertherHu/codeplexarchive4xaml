{
  "ProjectName": "bingmapswpf",
  "Title": "InfoStrat.VE - Bing Maps 3D for WPF and Microsoft Surface",
  "Description": "This control provides a WPF interface for the Bing Maps 3D control, complete with data binding for camera control and WPF-based pushpins.  All Win32 restrictions (air space control, no rotation or visual brush) are eliminated. Microsoft Surface and Win 7 Touch are also supported.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><table><tr><td> <a href=\"https://bingmapswpf.codeplex.com/wikipage?referringTitle=Home\">Home</a> </td><td> <a href=\"https://bingmapswpf.codeplex.com/wikipage?title=Getting%20Started&referringTitle=Home\">Getting Started</a> </td><td> <a href=\"https://bingmapswpf.codeplex.com/wikipage?title=Features%20and%20RoadMap&referringTitle=Home\">Features and RoadMap</a> </td><td> <a href=\"https://bingmapswpf.codeplex.com/wikipage?title=Project%20Structure&referringTitle=Home\">Project Structure</a> </td><td> <a href=\"https://bingmapswpf.codeplex.com/wikipage?title=Screenshots%20and%20Video&referringTitle=Home\">Screenshots and Video</a> </td><td> <a href=\"https://bingmapswpf.codeplex.com/wikipage?title=Application%20list&referringTitle=Home\">Application list</a> </td></tr></table>\n<h1><b>Project Summary</b></h1>\rThis control provides a WPF interface for the Bing Maps 3D control, complete with data binding for camera control and WPF-based pushpins.  All Win32 restrictions &#40;air space control, no rotation or visual brush&#41; are eliminated. Microsoft Surface and Win 7 Touch are also supported.\n<h1><b>Project Details</b></h1>\rBing Maps 3D (formerly Virtual Earth 3D) has many applications, but until recently has only been practical on the web with a javascript interface.  WPF applications could not use it to its full potential without requiring a WPF wizard and some XAML magic due to Win32 interop limitations.  <br /><br />The solution is here: <b>InfoStrat.VE</b><br /><br />Created by <a href=\"http://www.InfoStrat.com\">InfoStrat</a>, this project provides a VEMap control for WPF, SurfaceVEMap control for Microsoft Surface, and Win7TouchVEMap control for Windows 7 Touch.  SurfaceVEMap and Win7TouchVEMap each derive from VEMap and adds multi-touch manipulation support.<br /><br />For examples of Microsoft Surface solutions we&#39;ve built with this control go to our <a href=\"http://www.InfoStrat.com/home/solutions/Surface/SurfaceSVP.htm\">InfoStrat Surface gallery</a>.<br /><br />InfoStrat.VE allows WPF and Microsoft Surface developers to take full advantage of Bing Maps 3D with minimal overhead.  Simply reference the dll, add a single VEMap control to your XAML, and you have a map!  The control eliminates the Win32 Interop restrictions, so you can do everything with this VE control that you could do with any native WPF control, including:<br />\n<ul><li>Overlay items  <i>(no more transparent windows!)</i></li>\n<li>Rotate and transform the map within the interface <i>(no more boring rectangles, bring on the 360 degree interfaces!)</i></li>\n<li>Use the map within a Visual Brush <i>(you know you want faded reflections!)</i></li></ul>\n<br />Head over to <a href=\"https://bingmapswpf.codeplex.com/wikipage?title=Getting%20Started&referringTitle=Home\">Getting Started</a> to ... you know, get started!<br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "Virtual Earth,WPF,Microsoft Surface,Surface,Bing Maps,Windows 7,Touch,Multitouch,",
  "LastEdited": "2010-01-04T07:50:08.867-08:00"
}
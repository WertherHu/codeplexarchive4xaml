{
  "ProjectName": "xuv",
  "Title": "XamlUidValidate",
  "Description": "Validate that all your xaml Uid declarations have a resource. Hooks into the VisualStudio build process and gives build errors if any resource is missing.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1>Project Description</h1>\rValidate that all your xaml Uid declarations have a resource. Hooks into the VisualStudio build process and gives build errors if any resource is missing.<br /><br />Available as NuGet package: <a href=\"https://xuv.codeplex.com/wikipage?title=https%3a%2f%2fwww.nuget.org%2fpackages%2fXamlUidValidate&referringTitle=Home\">https&#58;&#47;&#47;www.nuget.org&#47;packages&#47;XamlUidValidate</a><br />\n<h1>Details</h1>\r<h2>Introduction</h2>\rA Windows Store app can be <a href=\"http://msdn.microsoft.com/en-us/library/windows/apps/hh965328.aspx\">globalized</a>, e.i. prepared to show the GUI in different languages, like French, German and English. This is done by adding a uid tag in xaml and adding a string in a resource-file.<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">&lt;</span><span style=\"color:#A31515;\">TextBlock</span> <span style=\"color:Red;\">x:Uid</span><span style=\"color:Blue;\">=</span><span style=\"color:Black;\">&quot;</span><span style=\"color:Blue;\">ResourceName&quot; Text=&quot;</span><span style=\"color:Black;\">&quot;</span> <span style=\"color:Blue;\">/&gt;</span>\r\n</pre></div><br />More info here: <a href=\"https://xuv.codeplex.com/wikipage?title=http%3a%2f%2fmsdn.microsoft.com%2fen-us%2flibrary%2fwindows%2fapps%2fhh965329.aspx&referringTitle=Home\">http&#58;&#47;&#47;msdn.microsoft.com&#47;en-us&#47;library&#47;windows&#47;apps&#47;hh965329.aspx</a><br />\n<h2>The Problem</h2>\rIf you add a uid tag, there is no check that you have a matching string resource. And there is no runtime error or warning that a resource is missing. The app just silently shows the default value. That you have missing resources might not show until you do localization testing, and that is often done very late in the development cycle, leading to high costs fixing the problem.<br />\n<h2>The Solution</h2>\rXamlUidValidate solves the problem by hooking into the build process in VisualStudio. Each time you build it verifies that all uid tags has matching resources and generates build errors if any resource is missing. It also generates build warnings if you have resources without matching uids.<br /><br />XamlUidValidate is available as a NuGet package and you install it by adding it to your project, just like any other NuGet package. Note that XamlUidValidate is a build time check only. It will not add any assemblies or other files to you app.<br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "xaml,c#,win8,",
  "LastEdited": "2014-02-20T06:38:52.18-08:00"
}
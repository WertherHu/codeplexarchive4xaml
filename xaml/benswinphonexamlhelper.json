{
  "ProjectName": "benswinphonexamlhelper",
  "Title": "Windows Phone 7.1 Xaml Get-Item Helper",
  "Description": "This WP7.1 XamlHelper assembly is used to retrieve visual-items from collections generated using data-templates, using .Net ItemContainerGenerator method.",
  "MovedLink": "https://github.com/TemporalWars/WP7.1_XamlGetItemHelper",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><strong>Windows Phone 7.1 Xaml Get-Item Helper Assembly</strong><br>\r\n<a href=\"http://temporalwars.com/CodeHelpers/WpXamlGetItem\">http://temporalwars.com/CodeHelpers/WpXamlGetItem</a><br>\r\n<br>\r\nThis WP7.1 XamlHelper assembly is used to retrieve visual-items from collections generated using data-templates, using .Net ItemContainerGenerator method.<br>\r\n<br>\r\nThis is another new WP7.1 assembly used to help ease development on Windows Phone. I will be adding additional WP7.1 assemblies in the near future.<br>\r\n<br>\r\nI use a default namespace string for all helper assemblies, making it easier to organize and locate assemblies within projects. Each helper assembly will be marked with the following default namespace: &quot;BenScharbach.WP7.Helpers&quot;, with the actual namespace's\r\n specific name at the end of the default namespace; for example, 'Xaml.GetItem' for this assembly.<br>\r\n<br>\r\nThe Xaml Get-Item assembly is used to locate some UiElement located within an ItemsControl. For example, the UiElement might be a TextBlock named\r\n<em>MyTextBlock</em> which is located in a DataTemplate. To complicate the visual-tree search, the DataTemplate might be stored in the Resources section of some other xaml item, like the Grid. Using the\r\n<strong>FindCollectionVisualItem</strong>&lt;TCompare&gt;() method allows searching for this UiElement by name within the generated collections, which can included Templates stored as static resources.<br>\r\n<br>\r\nTo use this assembly, simply reference my static class helper using the built-in static methods. Currently, my static class helper contains only 2 methods, with 1 overload method;</p>\r\n<ol>\r\n<li><strong>FindCollectionVisualItem</strong>&lt;TCompare&gt;(ItemsControl, object, string)\r\n</li><li><strong>FindCollectionVisualItem</strong>&lt;TCompare&gt;(ItemsControl, index, string) = OVERLOAD Method\r\n</li><li><strong>FindVisualItem</strong>&lt;TCompare&gt;((DependencyObject, string) </li></ol>\r\n<p><br>\r\nAs a side note, my helper uses the .Net <strong>VisualTreeHelper</strong> class in a recursive method call to locate UiElements. Furthermore, my helper uses the ItemsControl's\r\n<strong>ItemContainerGenerator()</strong> method call in order to locate <u>generated</u> items.\r\n<br>\r\n<br>\r\nFor more information on <u>generated</u> items, see the following website which I used as reference for my assembly;\r\n<a href=\"http://stackoverflow.com/questions/16375375/how-do-i-access-a-control-inside-a-xaml-datatemplate\">\r\nhttp://stackoverflow.com/questions/16375375/how-do-i-access-a-control-inside-a-xaml-datatemplate</a>.<br>\r\n<br>\r\nThanks,<br>\r\nBen Scharbach<br>\r\n<br>\r\n<br>\r\n</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "c#,code,ben,scharbach,ben scharbach,temporal wars,windows phone,windows phone 7.1,WP 7.1,static class,",
  "LastEdited": "2017-11-22T11:18:15.777-08:00"
}
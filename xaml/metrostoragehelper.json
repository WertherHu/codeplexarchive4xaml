{
  "ProjectName": "metrostoragehelper",
  "Title": "XAML Metro Application Isolated Storage Helper",
  "Description": "XAMLMetroAppIsolatedStorageHelper  helps to Save, Retrieve and Delete structured data in the Isolated Storage. This helper class helps in XAML based Metro application. ",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">Read Full Blog Post at below link , <br /><br /><a href=\"http://debugmode.net/2012/04/01/isolated-storage-helper-for-c-and-xaml-based-metro-application/\">http://debugmode.net/2012/04/01/isolated-storage-helper-for-c-and-xaml-based-metro-application/</a><br /><br /><br /><u> <b>Why to Use </b></u><br /><br />To work Structured Data in isolated storage. This will help to read, write and delete structured data in XAML based Windows 8 Metro Application. <br /><br />Version :  Windows 8 Consumer Preview<br /><br /><br /><u> <b>Background</b></u><br /><br />I was working with storing and retrieving structured data in Isolated Storage. While Binging I came across nicely written <a href=\"http://winrtstoragehelper.codeplex.com/\">http://winrtstoragehelper.codeplex.com/</a>  by <a href=\"https://twitter.com/#!/jamiet\">https://twitter.com/#!/jamiet</a>  Jamie Thomson.<br /><br />This utility was written for Windows 8 Developer Preview . Some of the API got changed in Windows 8 Consumer Preview. I have modified those changes in the utility from <a href=\"http://winrtstoragehelper.codeplex.com/\">http://winrtstoragehelper.codeplex.com/</a> and edited the classes to provide File name explicitly. <br /><br /><u> <b>How to use ?</b> </u><br /><br />Download DLL and add to your project <br /><br />you have a class Student <br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n<span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">class</span> Student\n    {\n        <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">string</span> Name { <span style=\"color:Blue;\">get</span>; <span style=\"color:Blue;\">set</span>; }\n        <span style=\"color:Blue;\">public</span> <span style=\"color:Blue;\">int</span> RollNumber { <span style=\"color:Blue;\">get</span>; <span style=\"color:Blue;\">set</span>; }\n    }\n\r\n</pre></div><br />You want to save object of Student then you can save it in Local Folder of isolated storage as below<br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n\n            Student objStudent = <span style=\"color:Blue;\">new</span> Student { Name = <span style=\"color:#A31515;\">&quot;DJ &quot;</span>, RollNumber = 1 };\n            <span style=\"color:Blue;\">var</span> objectStorageHelper = <span style=\"color:Blue;\">new</span> StorageHelper&lt;Student&gt;(StorageType.Local);            \n            objectStorageHelper.SaveASync(objStudent,<span style=\"color:#A31515;\">&quot;abc&quot;</span>);\n        \r\n</pre></div><br />And you can read back Student from isolated storage as below <br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n\n<span style=\"color:Blue;\">public</span> async <span style=\"color:Blue;\">void</span> ReadData()\n        {            \n            <span style=\"color:Blue;\">var</span> objectStorageHelper = <span style=\"color:Blue;\">new</span> StorageHelper&lt;Student&gt;(StorageType.Local);           \n            Student objStudent = await objectStorageHelper.LoadASync(<span style=\"color:#A31515;\">&quot;abc&quot;</span>);\n            \n        }\n\r\n</pre></div><br />Abc is name of the file. <br /><br />If you want to store List&lt;Student&gt; then you can do that as following, <br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\nList&lt;Student&gt; lstStudent = <span style=\"color:Blue;\">new</span> List&lt;Student&gt;()\n                                        {<span style=\"color:Blue;\">new</span> Student { Name = <span style=\"color:#A31515;\">&quot;DJ &quot;</span>, RollNumber = 1 },\n                                         <span style=\"color:Blue;\">new</span> Student { Name = <span style=\"color:#A31515;\">&quot;debugmode&quot;</span>, RollNumber = 2 }\n                                        };\n\n            <span style=\"color:Blue;\">var</span> objectStorageHelper = <span style=\"color:Blue;\">new</span> StorageHelper&lt;List&lt;Student&gt;&gt;(StorageType.Local);\n            objectStorageHelper.SaveASync(lstStudent, <span style=\"color:#A31515;\">&quot;abc&quot;</span>);\n \r\n</pre></div><br />You can read List&lt;Student&gt; from local folder of isolated storage as following <br /><br /><div style=\"color:Black;background-color:White;\"><pre>\r\n\n<span style=\"color:Blue;\">public</span> async <span style=\"color:Blue;\">void</span> ReadData()\n        {            \n            <span style=\"color:Blue;\">var</span> objectStorageHelper = <span style=\"color:Blue;\">new</span> StorageHelper&lt;List&lt;Student&gt;&gt;(StorageType.Local);           \n            List&lt;Student&gt; lstStudent = await objectStorageHelper.LoadASync(<span style=\"color:#A31515;\">&quot;abc&quot;</span>);\n            <span style=\"color:Blue;\">foreach</span> (<span style=\"color:Blue;\">var</span> r <span style=\"color:Blue;\">in</span> lstStudent)\n            {\n                <span style=\"color:Blue;\">string</span> n = r.Name;\n            }\n        }\n\r\n</pre></div><br />Here again name of the file is ABC. <br /><br />Thanks <br />Dhananjay Kumar <br /><a href=\"http://debugmode.net/\">http://debugmode.net/</a><br /><a href=\"https://twitter.com/#!/debug_mode\">https://twitter.com/#!/debug_mode</a><br /><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2012-04-01T05:37:33.8-07:00"
}
{
  "ProjectName": "WPFLocalizeExtension",
  "Title": "WPF Localization Extension",
  "Description": "LocalizationExtension is a realy easy way to localize any type of DependencyProperties on DependencyObects in WPF / SL (.xaml and .cs) through .resx files.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><img src=\"http://i2.codeplex.com/Images/v17950/wiki-accentbar-left.png\" /> <b>ATTENTION</b><img src=\"http://i2.codeplex.com/Images/v17950/wiki-accentbar-right.png\" /><br />\n<h1>We finally moved completely to <a href=\"https://github.com/SeriousM/WPFLocalizationExtension\">https://github.com/SeriousM/WPFLocalizationExtension</a>!</h1>\rPlease update all your bookmarks.<br />All news and latest issues can be found there.<br />Everything created on this codeplex project will be blocked and adked to be created on GitHub.<br /><br /><img src=\"http://i2.codeplex.com/Images/v17950/wiki-accentbar-left.png\" /> <b>ATTENTION</b><img src=\"http://i2.codeplex.com/Images/v17950/wiki-accentbar-right.png\" /><br />\n<h1>The Localization Extension...</h1>\r\n<h3>... is the easiest way to localize any type of DependencyProperties or native Properties on DependencyObjects under WPF &amp; Silverlight.</h3>\r\n<b>Feature Demo:</b><br /><div class=\"video\" style=\"text-align:Center\"><span class=\"player\"><object height=\"390px\" width=\"640px\"><param name=\"movie\" value=\"http://www.youtube.com/v/\"></param><param name=\"wmode\" value=\"transparent\"></param><embed height=\"390px\" width=\"640px\" type=\"application/x-shockwave-flash\" wmode=\"transparent\" src=\"http://www.youtube.com/v/\" /></object></span><br /><span class=\"external\"><a href=\"https://www.youtube.com/watch?v=a4s3qAzerMI\" target=\"_blank\">Launch in another window</a></span></div><br /><br /><img src=\"/projects/WPFLocalizeExtension/e26a27b1-fc41-472f-ad57-0f5ddc4267ce\" alt=\"Structure&#32;of&#32;version&#32;2.0.0&#32;and&#32;higher\" title=\"Structure&#32;of&#32;version&#32;2.0.0&#32;and&#32;higher\" /><br />\n<h4>Products that use this Solution:</h4>\r<a href=\"http&#58;&#47;&#47;www.sap.com\"><img src=\"/projects/WPFLocalizeExtension/c253f55c-fcdb-4919-b524-0dd922ec3924\" alt=\"SAP\" title=\"SAP\" /></a> <a href=\"http://www.sap.com/solutions/sap-crystal-solutions/query-reporting-analysis/sapcrystalreports-visualstudio/index.epx\">SAP Crystal Reports, Version for Visual Studio .NET</a><br />\n<h4>Features:</h4>\r<ul><li>First of all: ITS FREE (and will stay free)</li>\n<li>Obtain stable results in\n<ul><li>WPF applications using .NET 3.5 and higher</li>\n<li><b>New:</b> Silverlight 5.0 applications</li>\n<li><b>New:</b> Windows Phone 7.x applications</li></ul></li>\n<li><b>New:</b> Localization source/provider can be changed freely at arbitrary nodes\n<ul><li>Use the Provider property in LocalizeDictionary to change the provider for the particular sub tree</li>\n<li>Use the DefaultProvider property to set the provider for the whole application</li>\n<li>Built-in RESX provider for resource file lookup (Default) - <b>fully backward compatible to older versions of this extension</b></li>\n<li>Interface for custom providers</li>\n<li>Notification about provider changes and errors</li>\n<li>Get the list of all available cultures from a provider - or just take the bindable merged list from LocalizeDictionary</li>\n<li>CSV provider project in the Tests folder as an example for custom providers</li></ul></li>\n<li>Supports binding-like write style like &quot;Text = {lex:LocText ResAssembly:ResFile:ResKey}&quot;\n<ul><li>Define a default assembly and / or resource file to reduce the key to ResAssembly::ResKey, ResFile:ResKey or even ResKey</li>\n<li>If no key is specified, the Name and Property Name of the target are used (e.g. MyButton_Content)</li>\n<li>Default assembly, dictionary and culture can be changed dynamically</li>\n<li>Default assembly and dictionary inherit along the visual tree and can be redefined at each node</li></ul></li>\n<li>It is available at designtime (MS Expression Blend 3.0 &amp; 4.0, MS VisualStudio 2008 &amp; 2010\n<ul><li>not for dynamic loaded assemblies which only can be found at runtime and as long the resource (.resx) is built at designtime</li>\n<li>Even for Silverlight!</li>\n<li>No extra preview application needed</li>\n<li>Offers a DesignValue Property to support custom values during design mode</li></ul></li>\n<li>Full support of various application scenarios\n<ul><li>Works with normal dependency properties</li>\n<li>Works with normal properties (e.g. Ribbon)</li>\n<li>Works with control/data templates</li></ul></li>\n<li>Various culture setup features\n<ul><li>Works with the .resx-fallback mechanism (e.g. en-us -&gt; en -&gt; invariant culture)</li>\n<li>Supports culture forcing (e.g. &quot;this object has to be in english all the time&quot;)</li>\n<li>Buffering allows fast switching of the language at runtime</li>\n<li>Offers a design language for visual testing at designtime</li>\n<li>Offers a &quot;SpecificCulture&quot; to use as IFormatProvider (e.g. (123.20).ToString(LocalizeDictionary.SpecificCulture) = &quot;123.20&quot; or &quot;123,20&quot;)</li>\n<li>Does not alter the culture on Thread.CurrentCulture or Thread.CurrentUICulture (can be changed easily)</li></ul></li>\n<li>Code behind features:\n<ul><li>Can be used in code behind to bind localized values to dynamic generated controls</li>\n<li>Implements INotifyPropertyChanged for advanced use</li>\n<li>Offers some functionality to check and get resource values in code behind (e.g. ResolveLocalizedValue)</li></ul></li>\n<li>Easy to use\n<ul><li>Can be used with any resource file (.resx) accross all assemblies (also the dynamic loaded one at runtime)</li>\n<li>Does not need any initializing process (like &quot;call xyz to register a special localize dictionary&quot;)</li>\n<li>Can localize any type of data type, as long a TypeConverter exists for it</li></ul></li>\n<li>Example extensions included for\n<ul><li>Formating e.g. &quot;this is the &#39;{0}&#39; value&quot; (not bindable at the moment)</li>\n<li>Prefix and suffix values (currently with LocText extension)</li>\n<li>Upper and lower Text</li></ul></li>\n<li>Last, but not least\n<ul><li>Does not create any memory leaks</li>\n<li>Leaves the UID property untouched</li>\n<li>Does not need an additional build task</li>\n<li>Is in use in various productive systems</li></ul></li></ul>\n\n<h4>Get the latest NuGet package:</h4>\r<a href=\"https://nuget.org/packages/WpfLocalizeExtension/\">https://nuget.org/packages/WpfLocalizeExtension/</a><br />\n<h4>Get the source code:</h4>\r<a href=\"https://github.com/SeriousM/WPFLocalizationExtension\">https://github.com/SeriousM/WPFLocalizationExtension</a><br />\n<h4>Documentation &amp; Tutorial</h4>\r<a href=\"https://wpflocalizeextension.codeplex.com/wikipage?title=http%3a%2f%2fwpflocalizeextension.codeplex.com%2fdocumentation&referringTitle=Home\">Documentation</a><br />\n<h4>Localization Tools:</h4>\r<a href=\"http://visualstudiogallery.msdn.microsoft.com/3b64e04c-e8de-4b97-8358-06c73a97cc68\">ResXManager (Visual Studio Plugin and StandAlone)</a><br /><a href=\"http://www.zeta-resource-editor.com/index.html\">Zeta Resource Editor (Freeware)</a><br /><br /><i><u>You can do a donation to me and my work.</u></i><br /><i>It would be very nice of you :)</i><br /><a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=9373425\"><img style=\"border:none;\" src=\"https://www.paypal.com/en_US/i/btn/btn_donate_LG.gif\" alt=\"PayPal - The safer, easier way to pay online!\" title=\"PayPal - The safer, easier way to pay online!\" /></a></div><div class=\"ClearBoth\"></div>",
  "TagList": ".NET,C#,WPF,xaml,localization,resource,.NET 3.5,Resources,globalization,Blend,vs2008,Binding,.resx,resx,culture,.NET 3.5 SP1,uid,WPF Localization,Blend 3,",
  "LastEdited": "2014-10-03T02:50:29.257-07:00"
}
{
  "ProjectName": "silverlightdragdrop",
  "Title": "Silverlight Drag Drop Manager",
  "Description": "Silverlight Drag Drop Manager allows you to easily implement drag and drop behaviour in your Silverlight projects by providing a DragSource & DropTarget control, which act as a content container and can contain any SL user control.  Highly configurable.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h3>Project Description</h3>\rSilverlight Drag Drop Manager allows you to easily implement drag and drop behaviour in your Silverlight projects by providing a DragSource &#38; DropTarget control, which act as a content container and can contain any SL user control.  Highly configurable.<br /><br /><div style=\"clear:both;height:0;\">&nbsp;</div><a style=\"float:right;padding-left:.5em;\" href=\"http://www.gosilverlight.org\"><img style=\"border:none;\" src=\"http://www.kevinmaaktzin.be/img/slcbc1stsmall.png\" alt=\"Silverlight Control Builder Contest 1st prize award\" title=\"Silverlight Control Builder Contest 1st prize award\" /></a><br /><br /><b><i>&quot;Probably the most customizable, feature-rich, free way to enable Drag &#39;n Drop in your Silverlight applications&quot;</i></b> <br />(yup, I made that tagline up myself ;-))<br />\n<h3>Latest release, v2.0: 09/09/2009  (September release)</h3>\r\nVersion 2.0 has been released.  This is a major release, including various bugfixes, performance enhancements and loads of new features, including the ability to customize the return &amp; switch-animations with easing &amp; duration, the ability to customize the DropBorderBrush, a DropMode-property defining what should happen when you drop a DragSource, an AllowAnyDropTarget-property (so you don&#39;t have to manually add a list of valid DropTargets for each DragSource), a DragHandleMode-property, and many more.<br /><br />Version 2.0 comes in 2 flavours: binaries for SL2 and binaries for SL3, including an updated sample application in the SL3 version.  If possible, I&#39;d advise you to use SL3 (it allows for easing animations with the Drag and Drop manager), but if you&#39;ve still got a project in SL2 that&#39;s been using a previous release of this software, you can safely upgrade.<br /><br />Make sure you check it out! <br /><br />Get it from the &quot;Downloads&quot;-tab.  <br /><br />For the latest news and updates (on this project and other stuff I&#39;m doing), you can <a href=\"http://twitter.com/KevinDockx\">follow me on Twitter</a>.<br />\n<h3>Latest sourcecode commit: 09/09/2009</h3>\r\nIf you want access to newly added features, optimizations, ... get the latest version via the &quot;Source Code&quot;-tab.  More info about what&#39;s been committed but not yet released can be found in <a href=\"http://silverlightdragdrop.codeplex.com/Thread/View.aspx?ThreadId=61303\">this discussion board topic</a>.  <br />\n<h3>First look / running sample </h3>\r\nTo view a running sample of the Drag And Drop Manager in action with different behaviours applied (so you can see some of the things you can do with it), <a href=\"http://silverlight.services.live.com/invoke/77525/DragAndDropManager/iframe.html\">click here</a>!  This example application was built using the SL3-version of the Drag and Drop Manager, release v2.0.<br />\n<h3>Releases</h3>\r\nYou can find the latest release (including sourcecode, sample application &amp; documentation) <a href=\"http://www.codeplex.com/silverlightdragdrop/Release/ProjectReleases.aspx\">here</a> (current release: V2.0, September 2009).<br /><br />The previous releases (V1.0 &amp; v1.1) can still be downloaded as well.<br /><br />\n<h3>Overview / getting started</h3>\r\nThe Silverlight Drag And Drop Manager consists of 2 controls (and their corresponding event argument classes): <b>DragSource</b> &amp; <b>DropTarget</b>.  The first one makes any control draggable: just add the control (and if you wish, a ghost for that control) as the Content-property of the DragSource.  <br /><br />The DropTarget defines a place in your application where you can drop your DragSources.  Every DragSource has a list of DropTargets on which it can be dropped, thus defining the possible DropTargets for a DragSource.  On the other hand, every DropTarget has a Content-property, which can contain anything that&#39;s a DragSource (assuming the correct rights).<br /><br />Typically, you&#39;d create a list of DropTargets &amp; a list of DragSources on screen if you want to be able to drag those DragSources into your DropTargets.  If you want to have two lists, and want to be able to drag the DragSources back to their original position, you &#39;d create a list of empty DropTargets, and a list of DropTargets with DragSources as their Content.<br /><br />Both controls can be added to your Silverlight-app using CodeBehind or using XAML notation.  They both expose different events you can bind handlers to, if needed, eg: DragSourceDropped-event, DropTargetEntered event, et cetera.<br /><br />Next to that, both controls are <b>highly configurable</b>, so lots of possible scenarios are available.  Have a look at the sample application to see a few of them in action!  <br /><br />The release contains all the sourcecode, the necessary binaries, the sample application.  You can also download a generated help file (made using Sandcastle &amp; DocProject).<br /><br />\n<h3>About the author</h3>\r\nMy name is Kevin Dockx, and I&#39;m a project leader/technical consultant @ <a href=\"http://www.realdolmen.com/\">RealDolmen</a>, a Belgian ICT company.  Next to that, I&#39;m a Rich App Solution Manager, which boils down to the creation, implementation and follow-up of a business plan concerning Rich Applications at my company, <br /><br />I&#39;m a Silverlight enthusiast, interested in all (new :-)) things ASP .NET / Silverlight.<br /><br />For more on Silverlight and related stuff, have a look at <a href=\"http://kevindockx.blogspot.com/\">my site</a>!<br /><br />\n<h3>Deeper dive into the Drag And Drop Manager</h3>\r\n<h4>Properties exposed by DragSource:</h4>\r\nAllDropTargetsValid:<br /><i>When this is set to true, all droptargets on the page will be valid for this dragsource.  The droptarget-list-property will effectively be ignored when this is set to true (default: false)</i><br /><br />AutoFitGhost: <br /><i>Determines wether or not to auto-fit the ghost control.  It this is true, the ghost (if available) will be resized to match the content (default: false)</i><br /><br />Content:<br /><i>Contains the control you want to make draggable</i><br /><br />DraggingEnabled:<br /><i>Determines wether or not to dragging is enabled (default: true)</i><br /><br />DragHandleMode:<br /><i>This property determines how you can drag your dragsource around: by using a draghandle (a bar on top of your dragsource), or without one, meaning you can drag by clicking anywhere in the dragsource</i><br /><br />DropMode:<br /><i>Determines the behaviour when a dragsource is dropped, and the drop is valid: by default, the dragsource is dropped on the droptarget.  If you set DropMode to &quot;ReturnDragSource&quot;, the dragsource is returned to where it originated from.  This mode can be useful if you just want to execute some code on dropping (dragsourcedropped event on droptarget is triggered and can be handled if you add a handler to it), but you do not want the dragsource to be removed from the originating collection.</i><br /><br />DropTargets:<br /><i>A list of valid droptargets for this dragsource</i><br /><br />Ghost:<br /><i>Contains the ghost control, shown on original position when dragging</i><br /><br />GhostVisibility:<br /><i>Determines wether or not to show the ghost (default: Visible)</i><br /><br />ReturnAnimationDuration:<br /><i>Determines the length of the animation shown when returning a DragSource to its original position (default: 0.2)</i><br /><br />ReturnAnimationEasingFunction:<br /><i>Determines the easing function of the animation shown when returning a DragSource to its original position (default: none, Silverlight 3 (or higher) required)</i><br /><br />SwitchAnimationDuration:<br /><i>Determines the length of the animation shown when switching 2 DragSources (default: 0.2)</i><br /><br />SwitchAnimationEasingFunction:<br /><i>Determines the easing function of the animation shown when switching 2 DragSources (default: none, Silverlight 3 (or higher) required)</i><br /><br />ShowReturnToOriginalPositionAnimation:<br /><i>Determines wether or not to show an animation when returning to the original position (default: true)</i><br /><br />ShowSwitchReplaceAnimation:<br /><i>Determines wether or not to show an animation when switching/replacing 2 dragsources (default: true)</i><br /><br />\n<h4>Events exposed by DragSource:</h4>\r\nDragFinished, DragMoved &amp; DragStarted<br /><br />\n<h4>Properties exposed by DropTarget:</h4>\r\nAllowPositionSave<br /><i>Determines wether or not the position of a droptarget should be saved.  Setting this option to true results in a significant increase in performance: in regular mode (when this property is false), droptarget positioning is calculated on the fly while dragging a dragsource.  When this is set to true, it&#39;s only calculated when the droptarget is loaded.  Do keep in mind that setting this to true will result in strange behaviour if the droptarget hasn&#39;t got a fixed position on screen (eg: when the droptarget itself can be moved around).   However, you can recalculate this position by hand by calling the &quot;RecalculatePosition&quot;-method on  the droptarget!.  This option is advised when you have lots and lots of droptargets on one screen - in other cases, it shouldn&#39;t be necessary.</i><br /><br />Content:<br /><i>Contains the content control for a dragtarget</i><br /><br />DropBorderBrush:<br /><i>The brush for the drop border</i><br /><br />DropBorderCornerRadius:<br /><i>The cornerradius of the drop border</i><br /><br />DropBorderThickness:<br /><i>The thickness of the drop border</i><br /><br />Ghost:<br /><i>Ghost control, shown when nothing has been dropped</i><br /><br />GhostVisibility:<br /><i>Determines wether or not the ghost control should be shown (default: Visible)</i><br /><br />RemoveElementDropBehaviour:<br /><i>If you drop an item on a droptarget which already has a dragsource, and the existing dragsource hasn&#39;t got the permission to be dropped where the item you&#39;re dropping was residing (or the item you&#39;re dropping isn&#39;t the child of a droptarget at all), what should happen?  Replace the existing dragsource (and thus removing it altogether) or disallow the drop?</i><br /><br />ShowHover:<br /><i>Determines wether or not a hover effect should be visible when hovering a dragsource over this droptarget</i><br /><br />\n<h4>Events exposed by DropTarget:</h4>\r\nDragSourceDropped, DropTargetEntered &amp; DropTargetLeft</div><div class=\"ClearBoth\"></div>",
  "TagList": "Silverlight,Silverlight Controls,Silverlight 2.0,Drag And Drop,DragDrop,DragDropManager,Drag Drop Manager,Silverlight NPE,",
  "LastEdited": "2009-11-02T02:50:01.143-08:00"
}
{
  "ProjectName": "BeeTest",
  "Title": "BeeTest.Net",
  "Description": "A small .NET 4.0 library to enable behaviour driven testing with one of the many unit test frameworks available for .NET.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\">\r\n<p><b>Project Description</b><br>\r\n<br>\r\nBeeTest.Net is a small .NET 4.0 class library containing a fluent interface for behavior driven testing.</p>\r\n<p>This library was inspired by <a href=\"https://behavioral.codeplex.com/\" target=\"_blank\">\r\nBehavioral</a> library that can also be found here on CodePlex. </p>\r\n<p>Here is the complete calculator example of Behavioral done in BeeTest.Net with MSTest.</p>\r\n<pre style=\"overflow:auto; border-top:#cecece 1px solid; border-right:#cecece 1px solid; border-bottom:#cecece 1px solid; padding-bottom:5px; padding-top:5px; padding-left:5px; min-height:40px; border-left:#cecece 1px solid; padding-right:5px; width:650px; background-color:#fbfbfb\"><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  1:     [TestClass]\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  2:     <span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">class</span> CalculatorTests : BehaviorTestBase\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  3:     {\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  4:         [TestMethod]\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  5:         <span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">void</span> AddintTwoPositiveNumbersShouldGiveCorrectResult()\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  6:         {\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  7:             <span style=\"color:#0000ff\">this</span>.Returns.Given(CalculatorDefaultConstructed)\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  8:                 .Returns.When(TwoNumbersAdded, 13, 45)\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  9:                 .Then(ResultIsEqualTo, 58);\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 10:                 \n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 11:         }\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 12: \n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 13:         #region Behaviors\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 14: \n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 15:         <span style=\"color:#0000ff\">private</span> Calculator CalculatorDefaultConstructed()\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 16:         {\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 17:             <span style=\"color:#0000ff\">return</span> <span style=\"color:#0000ff\">new</span> Calculator();\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 18:         }\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 19: \n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 20:         <span style=\"color:#0000ff\">private</span> <span style=\"color:#0000ff\">int</span> TwoNumbersAdded(Calculator c, <span style=\"color:#0000ff\">int</span> a, <span style=\"color:#0000ff\">int</span> b)\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 21:         {\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 22:             <span style=\"color:#0000ff\">return</span> c.Add(a, b);\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 23:         }\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 24: \n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 25:         <span style=\"color:#0000ff\">private</span> <span style=\"color:#0000ff\">void</span> ResultIsEqualTo(<span style=\"color:#0000ff\">int</span> given, <span style=\"color:#0000ff\">int</span> expected)\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 26:         {\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 27:             Assert.AreEqual(expected, given);\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 28:         }\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 29: \n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 30:         #endregion\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 31:     }</pre></pre>\r\n<p>And here is an alternative version that doesnâ€™t need any behavior helpers defined.</p>\r\n<pre style=\"overflow:auto; border-top:#cecece 1px solid; border-right:#cecece 1px solid; border-bottom:#cecece 1px solid; padding-bottom:5px; padding-top:5px; padding-left:5px; min-height:40px; border-left:#cecece 1px solid; padding-right:5px; width:650px; background-color:#fbfbfb\"><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  1:         [TestMethod]\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  2:         <span style=\"color:#0000ff\">public</span> <span style=\"color:#0000ff\">void</span> AddIntsAlternative()\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  3:         {\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  4:             <span style=\"color:#0000ff\">this</span>.Returns.Given(() =&gt; { <span style=\"color:#0000ff\">return</span> <span style=\"color:#0000ff\">new</span> Calculator(); })\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  5:                 .And.Returns.Given(13)\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  6:                 .And.Returns.Given(45)\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  7:                 .Returns.When((c, a, b) =&gt; { <span style=\"color:#0000ff\">return</span> c.Add(a, b); })\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  8:                 .Then((r) =&gt; Assert.AreEqual(58, r));\n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\">  9:                 \n</pre><pre style=\"font-size:12px; font-family:consolas,'Courier New',courier,monospace; margin:0em; width:100%; background-color:#fbfbfb\"> 10:         }</pre></pre>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>For more detailed information on how to use BeeTest.Net see the documentation section.</p>\r\n</div><div class=\"ClearBoth\"></div>",
  "TagList": "BDD,BDT,Behavior,test,testing,driven,c#,.NET,",
  "LastEdited": "2013-04-14T11:27:20.24-07:00"
}
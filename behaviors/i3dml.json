{
  "ProjectName": "i3dml",
  "Title": "i3DML Project",
  "Description": "i3DML is an XML-based markup language which gives you the ability to design and develop 3D worlds and their behaviours using XML and JavaScript.",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><h1><b>The i3DML Project</b></h1>\r\n<h2>WHAT DOES THIS GIT REPOSITORY CONTAIN?</h2>\r\t<br />The repository contains the .Net Framework implementation of the i3MDL Project. The project uses Microsoft XNA as itsAPI for making connection to the graphics device. So in order to compile and run the project on your platform, you need these components to be installed:<br />\n<ul><li>Microsoft .Net Framework 4.0 (Or higher)</li>\n<li>Microsoft XNA Game Studio 4.0 (Or higher)</li></ul>\n\n<h2>WHAT IS i3DML? </h2>\r\ni3DML (pronounced as | ai θriː diː em el |) is an XML-based markup language which gives you the ability to design and develop 3D worlds and their behaviors using XML and JavaScript.<br /><br />i3DML tries to introduce a new standard for 3D design which is independent from other technologies, and it tries to make this topic simpler than before. Using i3DML you can design 3D scenes with a set of tags and attributes.<br />\n<h2>WHY SHOULD I USE i3DML?</h2>\r\ni3DML suggests you features that makes 3D modelling much easier than before:<br />\n<ul><li>It can be transferred over the network</li>\n<li>It has a very flexible positioning System</li>\n<li>It uses the popular JavaScript for scripting your applications</li>\n<li>It is an independent technology</li>\n<li>Etc.</li></ul>\n\t<br />i3DML is an XML-based technology, which means you can design and draw your World with a set of tags and attributes, and of course, without a huge knowledge of Computer Graphics. i3DML-designed Worlds occupy small amount of space in memory, so you can use i3DML as an alternative for transferring huge 3D scenes over a network or the Internet instead of using large-sized 3D models.<br /><br />i3DML is easy to learn and not just for simplifying the development process of 3D applications, i3DML is here to help you create Virtual Reality environments.<br />\t\n<h2>HOW DOES IT WORK?</h2>\r\nLet&#39;s take a look at the execution process of an i3DML Application. An i3DML Application is a simple XML document which will be held in a file with .i3DML postfix. The file can be hosted in a local storage or it can be over the web. The client requests the i3DML file from the server and downloads the hosted file (The hosted file can be created dynamically!). In the next step, i3DML Parser does the document parsing. After parsing the document, i3DML Engine will run the Application and apply the relations between Application elements, codes and resources. It also interacts with Graphics Device and renders the generated primitives on the screen. <br /><br />i3DML Browser includes i3DML Parser and i3DML Engine together which creates a flexible environment for surfing in i3DML files.<br />After the i3DML document and its components are downloaded and parsed, the document will be dispatched to the i3DML Engine. The i3DML Engine starts to build the elements hierarchy, called i3DML Element Tree. Then it starts downloading the application resources (Such as textures, sounds and etc.). After all, it enters an infinite loop until the application ends. Everything you see in the application output is drawn in that loop.<br />\n<h2>FEW WORDS MORE</h2>\r\t<br />As I am the only developer and coordinator of this project, I need some other guys for further development. So if you are interested to contribute with this project, contact with me at my profile.<br /><br />Good luck ;)<br />\n<h2>Links</h2>\r\ni3DML&#39;s official website: <a href=\"http://i3dml.org\">http://i3dml.org</a><br />Author&#39;s blog: <a href=\"https://keyvank.wordpress.com\">https://keyvank.wordpress.com</a><br /></div><div class=\"ClearBoth\"></div>",
  "TagList": "",
  "LastEdited": "2015-03-25T12:40:23.253-07:00"
}
{
  "ProjectName": "pyspec",
  "Title": "pyspec",
  "Description": "Behavior Driven Development Framework for Python.\n\nPySpec has following specialty.\n\n* Many kind of verification methods.\n* More concrete error messages.\n* Use decorators to define spec.\n* Data driven test(@data_provider).\n* Mock Objects included.\n* CUI & GUI spec runner(wxPython)",
  "MovedLink": "",
  "HomeWiki": "<div class=\"wikidoc\"><a href=\"https://pyspec.codeplex.com/wikipage?title=Home_jp&referringTitle=Home\">Japanese</a><br />\n<h1>Description</h1>\r\nPySpec is a Behavior Driven Development Framework for Python.  If this means nothing to you, see this uninteresting <a href=\"http://behaviour-driven.org/\">explanation of Behavior Driven Development</a>.<br /><br />PySpec has some notable features which include:\n<ul><li>Many tools to help verify results</li>\n<li>Concise, informative error messages</li>\n<li>Uses decorators to define specifications</li>\n<li>Data driven tests: test(@data_provider)</li>\n<li>Includes Mock Object functionality</li>\n<li>CLI &amp; GUI spec runners (wxPython) </li>\n<li>Support for running pyunit test cases within PySpec&#39;s specs</li></ul>\n\n<h1>Wiki Contents</h1>\r\n<ul><li>Core documentation\n<ul><li><a href=\"https://pyspec.codeplex.com/wikipage?title=Usage&referringTitle=Home\">Usage</a></li>\n<li><a href=\"https://pyspec.codeplex.com/wikipage?title=Tutorial&referringTitle=Home\">Tutorial</a></li>\n<li><a href=\"https://pyspec.codeplex.com/wikipage?title=Reference&referringTitle=Home\">Reference</a></li></ul></li>\n<li>Experimental documentation\n<ul><li><a href=\"https://pyspec.codeplex.com/wikipage?title=Design%20by%20Contract&referringTitle=Home\">Design by Contract</a></li>\n<li><a href=\"https://pyspec.codeplex.com/wikipage?title=Legacy%20Code%20Testing&referringTitle=Home\">Legacy Code Testing</a></li></ul></li>\n<li>Other documentation\n<ul><li><a href=\"https://pyspec.codeplex.com/wikipage?title=Why%20is%20PySpec%20so%20Fat%3f&referringTitle=Home\">Why is PySpec so Fat&#63;</a></li></ul></li></ul>\n\n<h1>Sample Code</h1>\r<pre>\ndef add2(input):\n  return input + 2\n\nclass add2_Behavior(object):\n  @context\n  def Function_add2_whose_input_is_3(self):\n    self.result = add_2(3)\n\n  @spec\n  def should_return_5(self):\n    About(self.result).should_equal(5)\n</pre><br /><br />Then, if you run test, you would get the following result:<br /><br /><pre>\nFunction add2 whose input is 3\n  - should return 5 - OK\n</pre><br /><br />I am not a native english speaker. Please give me more suitable word than <b>About</b>.</div><div class=\"ClearBoth\"></div>",
  "TagList": "python,xUnit,TDD,pyspec,bdd,Unit Testing,MockObjects,Specification,",
  "LastEdited": "2008-03-04T20:56:52.953-08:00"
}